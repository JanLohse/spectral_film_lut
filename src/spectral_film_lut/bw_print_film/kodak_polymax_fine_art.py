from spectral_film_lut.film_spectral import *


class KodakPolymax(FilmSpectral):
    def __init__(self, grade=None, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.lad = [1.0, ]
        self.density_measure = 'bw'
        self.exposure_kelvin = None
        self.projection_kelvin = None

        # spectral sensitivity
        self.log_sensitivity = [
            {385.3383: -0.0579, 393.6090: -0.0140, 401.8797: 0.0180, 406.7669: 0.0220, 413.9098: 0.0020,
             419.9248: -0.0739, 425.5639: -0.1737, 436.8421: -0.4291, 445.8647: -0.6527, 451.5038: -0.8084,
             457.5188: -0.9002, 461.2782: -0.9242, 466.1654: -0.9202, 470.3008: -0.8683, 475.5639: -0.7605,
             481.9549: -0.6048, 486.8421: -0.5130, 492.8571: -0.4691, 500.7519: -0.4371, 507.5188: -0.4092,
             510.5263: -0.4012, 513.9098: -0.4451, 517.2932: -0.5489, 527.8195: -1.0838, 538.9098: -1.7325}, ]

        # sensiometry - characteristic curve
        curve = {None: {0.1014: 0.0368, 0.2406: 0.0390, 0.3929: 0.0412, 0.4799: 0.0455, 0.5321: 0.0630, 0.5691: 0.0804,
                        0.6083: 0.1065, 0.6453: 0.1436, 0.6975: 0.2198, 0.8661: 0.5368, 1.1206: 1.0564, 1.2936: 1.4224,
                        1.4567: 1.7972, 1.5503: 2.0346, 1.6014: 2.1316, 1.6395: 2.1850, 1.6961: 2.2373, 1.7613: 2.2667,
                        1.8331: 2.2885, 1.9267: 2.3004, 2.0637: 2.3026, 2.1769: 2.3037, 2.3009: 2.3048},
                 -1: {0.3080: 0.0390, 0.3972: 0.0390, 0.4690: 0.0412, 0.5648: 0.0412, 0.6561: 0.0455, 0.7453: 0.0597,
                      0.8334: 0.0858, 0.9172: 0.1327, 1.0129: 0.2198, 1.1087: 0.3353, 1.2109: 0.4726, 1.3578: 0.6697,
                      1.5470: 0.9203, 1.7037: 1.1033, 1.8342: 1.2340, 2.0006: 1.4028, 2.1464: 1.5532, 2.2813: 1.6926,
                      2.4532: 1.8821, 2.5859: 2.0336, 2.6533: 2.1000, 2.7208: 2.1632, 2.7969: 2.2155, 2.8524: 2.2362,
                      2.9274: 2.2503, 2.9992: 2.2580},
                 0: {0.2071: 0.0384, 0.3415: 0.0395, 0.4803: 0.0405, 0.5913: 0.0448, 0.6724: 0.0533, 0.7385: 0.0800,
                     0.7876: 0.1131, 0.8762: 0.1867, 0.9509: 0.2699, 1.0491: 0.4086, 1.1377: 0.5568, 1.2380: 0.7147,
                     1.3362: 0.8811, 1.4258: 1.0006, 1.4941: 1.0945, 1.5870: 1.2321, 1.7236: 1.4369, 1.8485: 1.6385,
                     1.9733: 1.8465, 2.0694: 2.0321, 2.1163: 2.1089, 2.1836: 2.1783, 2.2519: 2.2231, 2.3501: 2.2572,
                     2.4461: 2.2785, 2.5507: 2.2935, 2.6681: 2.3031, 2.8986: 2.3020},
                 1: {0.2030: 0.0392, 0.3303: 0.0403, 0.5525: 0.0425, 0.6970: 0.0500, 0.7725: 0.0587, 0.8243: 0.0770,
                     0.8675: 0.1029, 0.9365: 0.1579, 1.0325: 0.2777, 1.1587: 0.4579, 1.3129: 0.6846, 1.4521: 0.8918,
                     1.5707: 1.0839, 1.6926: 1.2921, 1.7983: 1.5069, 1.9159: 1.7896, 2.0044: 2.0012, 2.0874: 2.1641,
                     2.1273: 2.2191, 2.1737: 2.2569, 2.2719: 2.2947, 2.3927: 2.2990, 2.5070: 2.2968, 2.7939: 2.2990},
                 2: {0.3074: 0.0352, 0.4312: 0.0363, 0.5849: 0.0405, 0.7001: 0.0480, 0.7844: 0.0640, 0.8399: 0.0907,
                     0.9242: 0.1579, 1.0310: 0.2742, 1.1291: 0.4203, 1.2722: 0.6656, 1.3789: 0.8555, 1.4888: 1.0646,
                     1.6094: 1.2833, 1.7215: 1.5628, 1.7951: 1.7580, 1.8677: 1.9415, 1.9242: 2.0705, 1.9851: 2.1697,
                     2.0416: 2.2241, 2.1270: 2.2711, 2.2124: 2.2935, 2.3116: 2.3009, 2.4226: 2.3020, 2.5944: 2.3052},
                 3: {0.4079: 0.0371, 0.5741: 0.0382, 0.7100: 0.0414, 0.7725: 0.0479, 0.8286: 0.0543, 0.8675: 0.0651,
                     0.9009: 0.0792, 0.9505: 0.1094, 1.0098: 0.1644, 1.0659: 0.2335, 1.1587: 0.3716, 1.2978: 0.6123,
                     1.4359: 0.8831, 1.5330: 1.1238, 1.6279: 1.4065, 1.7164: 1.6914, 1.8156: 1.9763, 1.8706: 2.0983,
                     1.9094: 2.1598, 1.9429: 2.1986, 2.0033: 2.2483, 2.0993: 2.2968, 2.2018: 2.3152, 2.3560: 2.3163,
                     2.6926: 2.3184},
                 4: {0.6126: 0.0363, 0.7385: 0.0395, 0.8431: 0.0405, 0.9669: 0.0405, 1.0736: 0.0448, 1.1590: 0.0565,
                     1.2188: 0.0789, 1.2796: 0.1205, 1.3308: 0.1675, 1.3949: 0.2443, 1.4493: 0.3435, 1.4963: 0.4608,
                     1.5688: 0.6720, 1.6446: 0.9067, 1.7503: 1.2374, 1.8762: 1.6556, 1.9562: 1.9201, 2.0192: 2.0929,
                     2.0459: 2.1473, 2.0758: 2.1964, 2.1366: 2.2583, 2.1974: 2.2892, 2.2839: 2.3063, 2.3949: 2.3127},
                 5: {0.9020: 0.0382, 1.0832: 0.0403, 1.1673: 0.0457, 1.2277: 0.0543, 1.2687: 0.0673, 1.3022: 0.0889,
                     1.3334: 0.1202, 1.3680: 0.1666, 1.4111: 0.2421, 1.4413: 0.3155, 1.4888: 0.4903, 1.5308: 0.6727,
                     1.5707: 0.8454, 1.6549: 1.2824, 1.7250: 1.6321, 1.7584: 1.7896, 1.8027: 1.9699, 1.8426: 2.1091,
                     1.8728: 2.1846, 1.9062: 2.2289, 1.9709: 2.2645, 2.0561: 2.2861, 2.1273: 2.2968, 2.2330: 2.3022,
                     2.6688: 2.3076}}
        curve = curve[grade]
        self.log_exposure = [xp.array(list(curve.keys()), dtype=default_dtype)]
        self.density_curve = [xp.array(list(curve.values()), dtype=default_dtype)]

        self.exposure_base = 10

        self.rms_curve = [
            {-0.0046: 0.0624, 0.3563: 0.0684, 0.6135: 0.0805, 0.7653: 0.0865, 0.8861: 0.1147, 1.0194: 0.1851,
             1.1278: 0.2615, 1.2239: 0.3501, 1.3029: 0.4708, 1.4284: 0.7001, 1.6050: 1.1146, 1.9101: 2.0802,
             2.1425: 2.8689, 2.2603: 3.2270, 2.3176: 3.4000}]
        self.rms_density = [
            {-0.0017: 0.0018, 0.1229: 0.0020, 0.2782: 0.0019, 0.4386: 0.0023, 0.6195: 0.0024, 0.7833: 0.0027,
             0.8840: 0.0033, 1.0273: 0.0040, 1.2235: 0.0050, 1.4352: 0.0070, 1.6109: 0.0090, 1.8362: 0.0114,
             2.0802: 0.0140, 2.2747: 0.0158, 2.4215: 0.0175, 2.5580: 0.0211}]

        self.calibrate()


class KodakPolymaxGradeNeg1(KodakPolymax):
    def __init__(self, *args, **kwargs):
        super().__init__(-1, *args, **kwargs)


class KodakPolymaxGrade0(KodakPolymax):
    def __init__(self, *args, **kwargs):
        super().__init__(0, *args, **kwargs)


class KodakPolymaxGrade1(KodakPolymax):
    def __init__(self, *args, **kwargs):
        super().__init__(1, *args, **kwargs)


class KodakPolymaxGrade2(KodakPolymax):
    def __init__(self, *args, **kwargs):
        super().__init__(2, *args, **kwargs)


class KodakPolymaxGrade3(KodakPolymax):
    def __init__(self, *args, **kwargs):
        super().__init__(3, *args, **kwargs)


class KodakPolymaxGrade4(KodakPolymax):
    def __init__(self, *args, **kwargs):
        super().__init__(4, *args, **kwargs)


class KodakPolymaxGrade5(KodakPolymax):
    def __init__(self, *args, **kwargs):
        super().__init__(5, *args, **kwargs)
