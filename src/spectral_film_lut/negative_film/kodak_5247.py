from spectral_film_lut.film_spectral import *


class Kodak5247(FilmSpectral):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.iso = 100
        self.density_measure = 'status_m'
        self.exposure_kelvin = 3200
        self.projection_kelvin = None

        # spectral sensitivity
        red_log_sensitivity = {587.9326: -0.6998, 589.7426: -0.5932, 594.1922: -0.3891, 598.4156: -0.2116,
                               612.7450: 0.0113, 638.0852: 0.3605, 649.9258: 0.5055, 654.0738: 0.5873, 655.8838: 0.5923,
                               664.3305: 0.6031, 667.3472: 0.5923, 670.4394: 0.5489, 672.3248: 0.4848, 675.3415: 0.3329,
                               678.0565: 0.1987, 680.0174: 0.1238}
        green_log_sensitivity = {477.7476: -0.6968, 490.7194: -0.4700, 510.4788: -0.0616, 530.8415: 0.3526,
                                 538.0816: 0.5499, 547.8859: 0.7471, 552.1093: 0.8142, 553.3914: 0.8349,
                                 557.3885: 0.8369, 561.9136: 0.8231, 568.0978: 0.7964, 571.8687: 0.7964,
                                 573.9049: 0.8191, 577.9021: 0.8418, 580.9188: 0.8211, 584.2371: 0.7234,
                                 588.7622: 0.5439, 592.8347: 0.2619, 595.5498: -0.0360, 599.3206: -0.3970,
                                 601.2815: -0.6889}
        blue_log_sensitivity = {390.5650: 1.2955, 426.7654: 1.1673, 451.2006: 0.9957, 470.2813: 0.7728,
                                481.3677: 0.5656, 494.0378: 0.1751, 502.9371: -0.1820, 509.8001: -0.4512,
                                516.6630: -0.6860}
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry - characteristic curve
        red_curve = {-2.6478: 0.1705, -2.4299: 0.1947, -2.3194: 0.2216, -2.1015: 0.3021, -1.8149: 0.4499,
                     -1.2597: 0.7507, -0.5672: 1.1186, -0.1343: 1.3577, 0.0224: 1.4530}
        green_curve = {-2.8209: 0.5197, -2.6388: 0.5331, -2.3940: 0.5842, -2.1463: 0.6782, -1.9463: 0.7775,
                       -1.5925: 0.9857, -1.0537: 1.3120, -0.5642: 1.6021, -0.2836: 1.7739, -0.1134: 1.8679,
                       -0.0418: 1.9069, 0.0134: 1.9297}
        blue_curve = {-2.8746: 0.9427, -2.6507: 0.9602, -2.4507: 0.9978, -2.2776: 1.0327, -2.1015: 1.1092,
                      -1.7657: 1.3053, -1.2701: 1.5900, -0.6537: 1.9512, -0.3821: 2.1097, -0.2299: 2.2037,
                      -0.0149: 2.3366, 0.0358: 2.3594}
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        self.exposure_base = 10

        # spectral dye density
        midscale_sd = {399.8618: 1.4418, 411.7743: 1.7045, 421.5044: 1.9104, 426.5968: 2.0138, 431.3255: 2.0757,
                       439.2369: 2.1178, 444.7839: 2.1318, 452.7863: 2.1082, 459.8792: 2.0639, 469.3365: 1.9606,
                       477.7026: 1.8455, 491.1611: 1.7230, 503.3464: 1.6647, 514.4406: 1.6669, 528.0809: 1.6935,
                       542.2668: 1.6972, 548.9961: 1.6839, 553.3610: 1.6566, 565.0917: 1.5245, 574.4580: 1.3806,
                       586.2796: 1.1592, 595.3732: 1.0411, 605.0124: 0.9909, 617.5615: 0.9865, 635.3848: 1.0559,
                       651.9351: 1.1518, 665.3936: 1.2153, 679.7614: 1.2389, 690.1280: 1.2344, 700.3128: 1.2079}
        minimum_sd = {399.8618: 0.6293, 410.1375: 0.7186, 424.2325: 0.8116, 439.6915: 0.8846, 450.4219: 0.8994,
                      470.2459: 0.8714, 489.7061: 0.7902, 514.1678: 0.6905, 531.7183: 0.5791, 549.5417: 0.4979,
                      562.2727: 0.4743, 574.0943: 0.4168, 583.5516: 0.3415, 593.6454: 0.2433, 609.0135: 0.1651,
                      634.4755: 0.1430, 661.0287: 0.1326, 681.0345: 0.1319, 699.5853: 0.1201}
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)
        self.d_min_sd = colour.SpectralDistribution(minimum_sd)

        self.mtf = [{2.5044: 1.1162, 3.4910: 1.1368, 8.9075: 1.1368, 15.0759: 1.0437, 26.2889: 0.7977, 46.5315: 0.5170,
                     62.9546: 0.3498, 81.5961: 0.2295, 99.0714: 0.1681}]

        # copied from kodak exr 5248
        red_rms = {0.0081: 0.0074, 0.5625: 0.0078, 1.2141: 0.0083, 1.4852: 0.0084, 1.9061: 0.0075, 2.2541: 0.0065,
                   2.7357: 0.0054, 3.1364: 0.0047, 3.6301: 0.0044, 4.0753: 0.0044, 4.5326: 0.0044, 4.9939: 0.0044}
        green_rms = {0.0121: 0.0086, 0.6151: 0.0093, 1.0643: 0.0103, 1.3395: 0.0115, 1.4852: 0.0117, 1.7159: 0.0104,
                     1.9547: 0.0083, 2.1773: 0.0068, 2.4444: 0.0061, 2.6993: 0.0061, 3.0554: 0.0065, 3.3144: 0.0063,
                     3.6463: 0.0060, 4.0550: 0.0059, 4.5245: 0.0059, 4.9980: 0.0063}
        blue_rms = {0.0202: 0.0111, 0.3399: 0.0091, 0.5868: 0.0094, 0.7770: 0.0113, 1.0279: 0.0157, 1.2546: 0.0190,
                    1.5217: 0.0201, 1.8495: 0.0180, 2.1327: 0.0153, 2.4605: 0.0134, 2.7398: 0.0130, 3.0231: 0.0129,
                    3.2821: 0.0122, 3.5208: 0.0115, 3.9417: 0.0113, 4.5892: 0.0112, 4.9960: 0.0112}
        red_rms_density = {0.0182: 0.2203, 0.4518: 0.2284, 0.7840: 0.2382, 0.9542: 0.2495, 1.1933: 0.2835,
                           1.5904: 0.3791, 2.4048: 0.6221, 3.4704: 0.9332, 4.1917: 1.1373, 5.0041: 1.3625}
        green_rms_density = {0.0122: 0.6237, 0.5166: 0.6189, 0.9988: 0.6529, 1.4972: 0.7647, 2.0199: 0.9883,
                             3.5069: 1.5326, 4.0174: 1.7173, 4.4854: 1.8566, 5.0020: 2.0608}
        blue_rms_density = {0.0162: 1.0239, 0.6179: 1.0304, 0.9947: 1.0595, 1.3169: 1.1260, 1.7545: 1.2847,
                            2.7087: 1.6671, 3.6244: 2.0381, 4.4246: 2.3248, 5.0000: 2.5095}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        self.rms = 5

        self.calibrate()
