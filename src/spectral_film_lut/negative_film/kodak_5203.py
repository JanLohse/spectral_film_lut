from spectral_film_lut.film_spectral import *


class Kodak5203(FilmSpectral):
    def __init__(self):
        super().__init__()

        self.iso = 50
        self.density_measure = 'status_m'
        self.year = 2011
        self.manufacturer = 'Kodak'
        self.stage = 'camera'
        self.type = 'negative'
        self.medium = 'cine'
        self.alias = 'VISION3 50D Color Negative Film 5203/7203'

        # spectral sensitivity
        red_log_sensitivity = {572.6011: -0.0067, 579.3168: 0.3616, 589.1218: 0.8137, 595.0316: 1.0140,
                               601.7473: 1.1583, 606.7170: 1.2380, 611.0150: 1.2789, 616.1190: 1.2810, 620.4170: 1.2875,
                               625.5210: 1.3305, 631.1622: 1.3887, 637.0720: 1.4705, 642.7132: 1.5265, 647.5486: 1.5545,
                               650.5035: 1.5545, 655.0702: 1.5243, 658.5624: 1.4856, 660.7114: 1.4145, 669.0389: 0.8396,
                               672.7997: 0.5101, 675.4860: 0.2582, 678.7095: 0.0019}
        green_log_sensitivity = {476.9691: -0.0024, 481.2672: 0.1893, 484.0878: 0.3659, 487.9829: 0.5790,
                                 490.9378: 0.7147, 495.6388: 0.8482, 499.9369: 0.9408, 507.4585: 1.0528,
                                 517.6664: 1.1949, 527.3371: 1.3370, 534.5901: 1.4490, 539.4254: 1.5179,
                                 543.8578: 1.5760, 546.5440: 1.6019, 548.9617: 1.6083, 552.3196: 1.5846,
                                 555.8118: 1.5243, 559.1696: 1.4705, 564.6765: 1.3973, 570.0491: 1.3176,
                                 574.4815: 1.2552, 577.1678: 1.2057, 579.0482: 1.1497, 580.9286: 1.0485,
                                 584.9580: 0.7212, 588.1816: 0.4348, 590.5992: 0.2345, 591.9424: 0.0773,
                                 593.0169: 0.0041}
        blue_log_sensitivity = {359.1753: 0.1225, 366.6969: 0.2711, 371.1293: 0.3874, 381.6058: 0.7362,
                                392.3510: 1.1884, 397.1863: 1.3930, 399.2010: 1.4597, 401.4844: 1.4985,
                                404.7079: 1.5319, 409.2746: 1.5523, 412.4982: 1.5545, 416.2590: 1.5437,
                                418.9453: 1.5351, 423.3776: 1.5470, 436.1375: 1.5976, 439.8983: 1.6105,
                                443.6591: 1.6019, 448.2258: 1.5889, 452.7925: 1.6126, 457.8965: 1.6643,
                                460.3141: 1.6923, 463.9406: 1.7666, 465.6867: 1.8043, 467.8357: 1.8237,
                                469.7161: 1.8129, 471.9995: 1.7720, 474.8201: 1.6729, 477.6407: 1.5523,
                                479.9240: 1.4102, 483.1476: 1.0894, 485.5653: 0.7858, 488.7888: 0.4455,
                                490.6692: 0.3013, 493.6241: 0.1634, 498.1908: 0.0149}
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry - characteristic curve
        red_curve = {-3.0012: 0.1679, -2.8767: 0.1679, -2.7222: 0.1691, -2.5806: 0.1679, -2.4347: 0.1704,
                     -2.3145: 0.1819, -2.1857: 0.2010, -2.0913: 0.2214, -1.9991: 0.2482, -1.8724: 0.2928,
                     -1.7158: 0.3553, -1.5549: 0.4382, -1.2652: 0.5849, -0.9497: 0.7290, -0.8016: 0.7940,
                     -0.6772: 0.8527, -0.2995: 1.0313, 0.0031: 1.1728, 0.3764: 1.3463, 0.6554: 1.4712, 0.8850: 1.5745,
                     1.0545: 1.6434, 1.2863: 1.7212, 1.4794: 1.7760, 1.6854: 1.8245, 1.8485: 1.8538, 1.9837: 1.8730}
        green_curve = {-3.0055: 0.5721, -2.8724: 0.5734, -2.7179: 0.5760, -2.6106: 0.5747, -2.4647: 0.5760,
                       -2.3188: 0.5874, -2.1986: 0.6040, -2.0634: 0.6334, -1.9154: 0.6882, -1.7265: 0.7749,
                       -1.5034: 0.8973, -1.0012: 1.1728, -0.5034: 1.4470, 0.1275: 1.7952, 0.6168: 2.0681,
                       0.9473: 2.2415, 1.1232: 2.3257, 1.2863: 2.3920, 1.4494: 2.4532, 1.5867: 2.4979, 1.7284: 2.5399,
                       1.8528: 2.5680, 1.9816: 2.5948}
        blue_curve = {-2.9969: 0.8463, -2.7737: 0.8476, -2.5591: 0.8502, -2.4003: 0.8591, -2.2501: 0.8795,
                      -2.1257: 0.9037, -1.9926: 0.9433, -1.8145: 1.0159, -1.4669: 1.1843, -1.0613: 1.3973,
                      -0.5806: 1.6421, -0.1987: 1.8462, 0.2434: 2.0885, 0.6640: 2.3155, 0.9387: 2.4609, 1.1146: 2.5412,
                      1.3035: 2.6177, 1.4666: 2.6751, 1.6382: 2.7223, 1.8099: 2.7644, 1.9837: 2.7976}
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        red_sd = {400.2907: 0.2345, 407.0083: 0.2119, 416.9195: 0.1661, 429.5838: 0.1187, 440.5963: 0.0879,
                  458.6567: 0.0559, 477.5981: 0.0421, 495.6585: 0.0383, 514.5999: 0.0454, 532.2198: 0.0724,
                  545.8752: 0.1105, 565.2571: 0.1783, 577.1505: 0.2356, 592.7882: 0.3590, 611.6194: 0.5420,
                  621.7509: 0.6346, 634.8557: 0.7498, 647.8504: 0.8518, 660.9552: 0.9328, 670.3157: 0.9752,
                  679.3459: 0.9995, 686.8344: 1.0044, 699.0582: 0.9769, 716.2376: 0.8727, 727.0298: 0.7768,
                  739.6941: 0.6478, 749.0547: 0.5464, 760.2874: 0.4340}
        green_sd = {400.0705: -0.0014, 423.1966: -0.0009, 442.7987: -0.0003, 447.6442: -0.0020, 455.3529: 0.0085,
                    463.2819: 0.0372, 468.4577: 0.0691, 475.3956: 0.1430, 489.2712: 0.3524, 499.6229: 0.5288,
                    508.4329: 0.6853, 515.7011: 0.8033, 521.0972: 0.8793, 525.2819: 0.9267, 528.3654: 0.9576,
                    532.2198: 0.9835, 535.5235: 0.9973, 538.8272: 1.0011, 543.5626: 0.9862, 548.9587: 0.9466,
                    553.2535: 0.8948, 563.1647: 0.7305, 572.9658: 0.5475, 580.2340: 0.4263, 588.2731: 0.3210,
                    598.1843: 0.2273, 605.5626: 0.1794, 618.3370: 0.1231, 628.6887: 0.0967, 649.3921: 0.0691,
                    679.7864: 0.0532, 713.0440: 0.0416, 740.5751: 0.0289, 760.6178: 0.0195}
        blue_sd = {399.8502: 0.4748, 408.8804: 0.5938, 418.1309: 0.7382, 424.8485: 0.8418, 430.0243: 0.9047,
                   435.2002: 0.9554, 438.6140: 0.9796, 443.0190: 0.9978, 447.2037: 1.0039, 452.0492: 0.9940,
                   457.2250: 0.9642, 463.0616: 0.9080, 468.2375: 0.8385, 477.5981: 0.6798, 489.0510: 0.4825,
                   504.2482: 0.2731, 516.0315: 0.1645, 526.2730: 0.1088, 541.0297: 0.0642, 560.4116: 0.0366,
                   575.6088: 0.0250, 593.6692: 0.0234, 616.1345: 0.0228, 646.5289: 0.0239, 677.1435: 0.0190,
                   707.5378: 0.0129, 730.8842: 0.0091, 746.5218: 0.0063, 760.6178: 0.0058}
        midscale_sd = {399.9604: 1.1543, 402.1628: 1.1472, 405.9071: 1.1687, 411.1930: 1.2282, 418.9018: 1.3517,
                       423.8573: 1.4216, 428.4826: 1.4801, 432.5572: 1.5164, 436.4115: 1.5407, 440.5963: 1.5550,
                       445.2215: 1.5567, 449.9568: 1.5446, 455.3529: 1.5175, 464.3831: 1.4613, 473.9639: 1.3979,
                       479.9107: 1.3528, 483.8751: 1.3136, 487.3991: 1.2761, 490.1522: 1.2524, 493.5661: 1.2332,
                       497.8609: 1.2199, 500.7242: 1.2194, 505.1292: 1.2354, 509.0936: 1.2563, 513.9391: 1.2673,
                       521.8681: 1.2772, 526.9338: 1.2806, 532.6603: 1.2839, 537.2855: 1.2894, 542.3512: 1.2844,
                       547.3068: 1.2657, 555.3459: 1.2111, 573.5164: 0.9995, 583.7580: 0.8485, 591.6869: 0.7338,
                       598.4045: 0.6649, 602.4791: 0.6390, 607.5448: 0.6291, 613.7118: 0.6319, 622.3015: 0.6578,
                       631.0013: 0.6941, 643.0049: 0.7504, 654.4578: 0.8000, 664.3690: 0.8325, 673.1790: 0.8529,
                       680.2269: 0.8617, 690.3584: 0.8589, 698.2873: 0.8418, 707.5378: 0.8082, 716.1275: 0.7647,
                       730.5538: 0.6677, 742.2270: 0.5773, 751.0369: 0.5134, 760.6178: 0.4588}
        minimum_sd = {400.0705: 0.6963, 401.6122: 0.6859, 404.4755: 0.6809, 408.7703: 0.6892, 411.9639: 0.7041,
                      413.8360: 0.7167, 417.4701: 0.7504, 422.7561: 0.7856, 427.0510: 0.8088, 432.8875: 0.8347,
                      436.8520: 0.8496, 442.7987: 0.8578, 447.2037: 0.8545, 452.9302: 0.8385, 456.8947: 0.8209,
                      463.0616: 0.8005, 467.9071: 0.7922, 473.1931: 0.7818, 477.8183: 0.7702, 483.1043: 0.7404,
                      487.7295: 0.7007, 492.7952: 0.6666, 496.7597: 0.6445, 501.1647: 0.6346, 508.2126: 0.6401,
                      513.4986: 0.6302, 517.7935: 0.6109, 522.4187: 0.5916, 527.8148: 0.5652, 532.4400: 0.5541,
                      538.1665: 0.5497, 549.6194: 0.5497, 558.8699: 0.5541, 567.2393: 0.5475, 574.2873: 0.5222,
                      580.0137: 0.4781, 583.5377: 0.4351, 587.3921: 0.3833, 592.7882: 0.3149, 597.4134: 0.2565,
                      602.4791: 0.2091, 607.1043: 0.1805, 612.6106: 0.1595, 617.6763: 0.1485, 625.6052: 0.1419,
                      648.2909: 0.1430, 680.0067: 0.1457, 701.5911: 0.1441, 723.1755: 0.1364, 737.7119: 0.1265,
                      746.9623: 0.1237, 754.7812: 0.1270, 761.0583: 0.1336}
        self.spectral_density = [colour.SpectralDistribution(x) for x in (red_sd, green_sd, blue_sd)]
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)
        self.d_min_sd = colour.SpectralDistribution(minimum_sd)

        self.mtf = [{2.4916: 1.0070, 3.5130: 0.9947, 4.5510: 0.9849, 5.7507: 0.9801, 7.0179: 0.9874, 8.6071: 1.0046,
                     10.5036: 1.0145, 12.6911: 1.0095, 15.9572: 0.9633, 18.6666: 0.8945, 22.8365: 0.7752,
                     30.8630: 0.5895, 38.4213: 0.4538, 48.3091: 0.3260, 56.9350: 0.2377, 64.3207: 0.1794,
                     71.2319: 0.1395, 79.4770: 0.1084},
                    {2.5041: 1.0095, 3.2440: 0.9996, 4.3084: 0.9849, 5.6373: 0.9801, 7.2307: 0.9849, 9.1369: 1.0120,
                     11.4313: 1.0120, 14.5895: 1.0095, 17.9377: 0.9491, 22.2751: 0.8431, 26.5812: 0.7563,
                     32.6816: 0.6411, 40.2821: 0.5420, 47.9497: 0.4493, 53.3669: 0.3818, 62.1178: 0.2867,
                     69.3079: 0.2296, 79.4770: 0.1742},
                    {2.5041: 1.0070, 3.6015: 0.9801, 4.9776: 0.9609, 6.4164: 0.9562, 7.7141: 0.9562, 9.3207: 0.9633,
                     10.7684: 0.9352, 13.3058: 0.8770, 18.8533: 0.7563, 26.9141: 0.6042, 37.2906: 0.4838,
                     48.7925: 0.3981, 56.3709: 0.3450, 68.9637: 0.2702, 79.4770: 0.2279}]

        red_rms = {0.0143: 0.0020, 0.1913: 0.0021, 0.3424: 0.0021, 0.4977: 0.0023, 0.6272: 0.0023, 0.7179: 0.0023,
                   0.8409: 0.0026, 0.9617: 0.0032, 1.0588: 0.0039, 1.1581: 0.0051, 1.2488: 0.0062, 1.3437: 0.0065,
                   1.4603: 0.0064, 1.5725: 0.0060, 1.6566: 0.0054, 1.7494: 0.0048, 1.8617: 0.0047, 2.0904: 0.0047,
                   2.4400: 0.0047, 2.5954: 0.0047, 2.7940: 0.0048, 3.0184: 0.0045, 3.4457: 0.0039, 3.8040: 0.0035,
                   4.1773: 0.0030, 4.4169: 0.0027, 4.6931: 0.0025, 4.7751: 0.0024, 4.9176: 0.0024, 5.0578: 0.0025}
        green_rms = {0.0100: 0.0019, 0.1697: 0.0019, 0.3208: 0.0021, 0.4503: 0.0023, 0.5409: 0.0024, 0.6574: 0.0023,
                     0.7481: 0.0024, 0.8474: 0.0028, 0.9509: 0.0037, 1.0761: 0.0049, 1.1754: 0.0060, 1.2617: 0.0067,
                     1.3329: 0.0068, 1.4085: 0.0063, 1.5466: 0.0055, 1.7797: 0.0052, 2.0041: 0.0048, 2.2329: 0.0047,
                     2.5113: 0.0044, 2.7810: 0.0044, 3.0486: 0.0047, 3.2558: 0.0046, 3.5234: 0.0048, 3.7738: 0.0048,
                     4.0068: 0.0045, 4.1385: 0.0041, 4.2788: 0.0037, 4.4730: 0.0037, 4.7039: 0.0038, 4.7838: 0.0037,
                     4.8874: 0.0035, 5.0622: 0.0031}
        blue_rms = {0.0122: 0.0034, 0.2064: 0.0036, 0.3575: 0.0040, 0.5150: 0.0046, 0.6618: 0.0057, 0.7848: 0.0071,
                    0.8970: 0.0093, 0.9747: 0.0112, 1.0502: 0.0123, 1.1840: 0.0122, 1.2984: 0.0114, 1.3847: 0.0105,
                    1.4603: 0.0097, 1.5509: 0.0093, 1.7581: 0.0101, 2.0084: 0.0105, 2.2026: 0.0099, 2.3947: 0.0093,
                    2.6127: 0.0087, 2.7379: 0.0083, 2.9407: 0.0086, 3.0961: 0.0088, 3.3313: 0.0083, 3.5105: 0.0084,
                    3.8709: 0.0072, 4.2356: 0.0062, 4.4859: 0.0057, 4.5787: 0.0055, 4.6759: 0.0051, 4.7751: 0.0047,
                    4.8658: 0.0046, 4.9715: 0.0046, 5.0514: 0.0047}
        red_rms_density = {0.0078: 0.1768, 0.5145: 0.1793, 0.7602: 0.1819, 0.9198: 0.1883, 1.0383: 0.2037,
                           1.1569: 0.2331, 1.2992: 0.2844, 1.4760: 0.3843, 1.7433: 0.5329, 2.4612: 0.9056,
                           3.1295: 1.2746, 3.5606: 1.5128, 3.9983: 1.7447, 4.3001: 1.8612, 4.5113: 1.9202,
                           4.7355: 1.9637, 4.9123: 1.9855, 5.0546: 1.9996}
        green_rms_density = {0.0143: 0.6149, 0.4282: 0.6187, 0.6869: 0.6174, 0.9025: 0.6277, 1.0534: 0.6558,
                             1.2129: 0.7225, 1.4436: 0.8403, 1.9934: 1.1477, 2.4892: 1.4398, 2.7350: 1.5769,
                             3.0389: 1.7767, 3.3300: 1.9599, 3.6598: 2.1558, 3.8991: 2.2904, 4.1319: 2.4082,
                             4.2915: 2.4799, 4.4380: 2.5260, 4.6105: 2.5722, 4.7787: 2.6003, 4.9166: 2.6208,
                             5.0568: 2.6324}
        blue_rms_density = {0.0143: 0.9031, 0.3075: 0.9082, 0.5101: 0.9095, 0.7430: 0.9249, 0.9499: 0.9607,
                            1.1052: 1.0196, 1.3294: 1.1311, 1.5449: 1.2246, 1.9459: 1.4321, 2.5884: 1.8138,
                            3.1726: 2.1571, 3.6124: 2.4018, 3.8905: 2.5568, 4.1233: 2.6746, 4.3497: 2.7592,
                            4.5243: 2.8053, 4.6967: 2.8399, 4.8908: 2.8668, 5.0525: 2.8834}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        # computed rms of 2.47

        self.calibrate()
