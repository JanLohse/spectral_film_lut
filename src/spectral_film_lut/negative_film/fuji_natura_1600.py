from spectral_film_lut.film_spectral import *


class FujiNatura1600(FilmSpectral):
    def __init__(self):
        super().__init__()

        self.iso = 1600
        self.density_measure = 'status_m'
        self.manufacturer = 'Fujifilm'
        self.stage = 'camera'
        self.type = 'negative'
        self.medium = 'photo'

        # spectral sensitivity
        red_log_sensitivity = {559.0706: 1.2566, 563.3437: 1.3328, 566.6673: 1.4094, 569.7534: 1.4871, 572.6022: 1.5641,
                               575.4509: 1.6422, 578.2997: 1.7215, 581.1485: 1.7992, 583.9972: 1.8773, 587.0834: 1.9539,
                               590.8817: 2.0321, 595.1548: 2.1105, 599.6654: 2.1867, 604.8881: 2.2639, 611.5352: 2.3326,
                               619.1319: 2.3829, 626.7286: 2.4238, 634.3253: 2.4546, 641.9219: 2.4691, 649.5186: 2.4435,
                               654.5039: 2.3507, 656.6405: 2.2603, 658.3023: 2.1750, 659.6317: 2.0848, 660.9137: 2.0029,
                               662.3380: 1.9132, 663.7624: 1.8191, 665.1868: 1.7203, 666.6112: 1.6195, 668.0355: 1.5174,
                               669.4599: 1.4138, 670.8843: 1.3134, 672.3087: 1.2086, 673.7331: 1.1081, 675.3270: 1.0066,
                               677.0566: 0.9475, }
        green_log_sensitivity = {471.2339: 1.0264, 475.7444: 1.1081, 478.3558: 1.1838, 480.4924: 1.2608,
                                 482.3915: 1.3391, 484.2907: 1.4234, 486.1899: 1.5095, 488.0891: 1.5926,
                                 490.2256: 1.6745, 492.8370: 1.7574, 496.6353: 1.8373, 502.0954: 1.9138,
                                 508.2678: 1.9883, 514.6775: 2.0620, 521.0872: 2.1358, 526.5473: 2.2137,
                                 531.2952: 2.2957, 536.2805: 2.3720, 542.6902: 2.4455, 550.2869: 2.4932,
                                 557.8836: 2.4939, 565.4803: 2.4604, 571.8900: 2.3994, 576.1631: 2.3262,
                                 579.2493: 2.2468, 582.0980: 2.1623, 584.9468: 2.0762, 587.5582: 1.9997,
                                 590.1695: 1.9180, 592.7809: 1.8390, 595.1548: 1.7629, 597.5288: 1.6874,
                                 599.9028: 1.6104, 602.2767: 1.5329, 604.6507: 1.4525, 607.0247: 1.3693,
                                 609.3986: 1.2832, 611.5352: 1.2010, 613.6718: 1.1120, }
        blue_log_sensitivity = {386.7999: 1.1360, 388.3351: 1.2106, 389.3321: 1.2805, 390.2817: 1.3445,
                                391.2313: 1.4114, 392.1809: 1.4784, 393.1305: 1.5441, 394.0801: 1.6075,
                                395.0297: 1.6703, 395.9792: 1.7348, 396.9288: 1.7970, 397.9259: 1.8615,
                                399.3028: 1.9359, 400.4898: 2.0033, 401.9142: 2.0746, 403.5759: 2.1378,
                                406.4247: 2.2074, 411.4100: 2.2469, 417.5823: 2.2553, 423.7546: 2.2461,
                                429.9269: 2.2303, 436.0992: 2.2171, 442.2715: 2.2140, 448.4439: 2.2263,
                                454.6162: 2.2542, 460.0763: 2.3017, 463.8746: 2.3623, 466.7234: 2.4353,
                                471.2339: 2.4750, 475.5070: 2.4248, 477.4062: 2.3703, 478.8306: 2.2998,
                                480.0176: 2.2308, 481.3945: 2.1546, 482.3915: 2.0869, 483.3411: 2.0200,
                                484.2907: 1.9524, 485.2403: 1.8843, 485.9525: 1.8195, 486.9021: 1.7510,
                                487.8517: 1.6762, 489.4660: 1.5405, 490.2256: 1.4712, 491.3651: 1.4028,
                                492.1248: 1.3572, 493.7866: 1.2835, 495.6857: 1.2177, 498.0597: 1.1508,
                                501.6207: 1.0828, 503.9946: 1.0527, }
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry - characteristic curve
        red_curve = {-3.6214: 0.1787, -3.4902: 0.1878, -3.3590: 0.2010, -3.2279: 0.2180, -3.0967: 0.2409,
                     -2.9656: 0.2713, -2.8344: 0.3096, -2.7033: 0.3569, -2.5721: 0.4196, -2.4409: 0.4964,
                     -2.3098: 0.5780, -2.1786: 0.6633, -2.0475: 0.7504, -1.9163: 0.8395, -1.7852: 0.9297,
                     -1.6540: 1.0206, -1.5228: 1.1121, -1.3917: 1.2046, -1.2605: 1.2976, -1.1294: 1.3907,
                     -0.9982: 1.4842, -0.8671: 1.5785, -0.7359: 1.6728, -0.6047: 1.7669, -0.4736: 1.8618,
                     -0.3424: 1.9567, -0.2113: 2.0515, -0.0801: 2.1462, 0.0510: 2.2408, 0.1822: 2.3351,
                     0.2728: 2.4001, }
        green_curve = {-3.6276: 0.3526, -3.4964: 0.3614, -3.3653: 0.3771, -3.2341: 0.4026, -3.1030: 0.4377,
                       -2.9718: 0.4855, -2.8407: 0.5476, -2.7095: 0.6232, -2.5783: 0.7070, -2.4472: 0.7999,
                       -2.3160: 0.8951, -2.1849: 0.9911, -2.0537: 1.0870, -1.9226: 1.1829, -1.7914: 1.2795,
                       -1.6602: 1.3766, -1.5291: 1.4740, -1.3979: 1.5712, -1.2668: 1.6683, -1.1356: 1.7654,
                       -1.0045: 1.8626, -0.8733: 1.9599, -0.7421: 2.0570, -0.6110: 2.1541, -0.4798: 2.2514,
                       -0.3487: 2.3489, -0.2175: 2.4466, -0.0864: 2.5445, 0.0448: 2.6422, 0.1760: 2.7396,
                       0.2977: 2.8302, }
        blue_curve = {-3.6214: 0.7419, -3.4902: 0.7492, -3.3590: 0.7616, -3.2279: 0.7809, -3.0967: 0.8073,
                      -2.9656: 0.8424, -2.8344: 0.8875, -2.7033: 0.9445, -2.5721: 1.0138, -2.4409: 1.0919,
                      -2.3098: 1.1816, -2.1786: 1.2784, -2.0475: 1.3777, -1.9163: 1.4781, -1.7852: 1.5794,
                      -1.6540: 1.6813, -1.5228: 1.7839, -1.3917: 1.8865, -1.2605: 1.9898, -1.1294: 2.0935,
                      -0.9982: 2.1969, -0.8671: 2.3004, -0.7359: 2.4039, -0.6047: 2.5074, -0.4736: 2.6108,
                      -0.3424: 2.7146, -0.2113: 2.8188, -0.0801: 2.9230, 0.0510: 3.0270, 0.1822: 3.1313,
                      0.2759: 3.2057, }
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        midscale_sd = {403.8387: 1.5490, 410.7573: 1.5494, 415.8905: 1.6318, 419.4614: 1.7035, 423.2555: 1.7761,
                       427.9423: 1.8513, 434.1913: 1.9237, 441.3331: 1.9690, 448.4749: 1.9766, 455.6167: 1.9504,
                       462.5353: 1.8921, 468.3380: 1.8167, 473.0248: 1.7405, 477.2653: 1.6640, 481.5057: 1.5894,
                       487.3084: 1.5115, 494.4502: 1.4746, 501.5920: 1.4700, 508.7338: 1.4798, 515.8756: 1.5047,
                       523.0174: 1.5388, 530.1592: 1.5751, 537.3010: 1.6020, 544.4428: 1.5962, 551.1382: 1.5436,
                       556.7178: 1.4716, 561.4046: 1.3977, 565.6450: 1.3239, 569.6623: 1.2506, 573.6795: 1.1764,
                       577.6968: 1.1038, 581.9372: 1.0304, 586.6240: 0.9569, 591.9804: 0.8845, 598.4526: 0.8196,
                       605.5944: 0.7815, 612.7362: 0.7818, 619.8780: 0.8076, 627.0198: 0.8511, 634.1616: 0.9089,
                       641.3034: 0.9754, 648.4452: 1.0430, 655.5870: 1.1076, 662.7288: 1.1635, 669.8706: 1.2088,
                       677.0123: 1.2426, 684.1541: 1.2643, 691.2959: 1.2743, 698.4377: 1.2727, 705.5795: 1.2551,
                       712.7213: 1.2174, 717.4081: 1.1833, }
        minimum_sd = {403.4782: 0.9928, 400.9374: 1.0541, 410.0878: 0.9258, 417.2296: 0.9186, 424.3714: 0.9257,
                      431.5132: 0.9295, 438.6550: 0.9231, 445.7968: 0.9069, 452.9386: 0.8837, 460.0803: 0.8563,
                      467.2221: 0.8249, 474.3639: 0.7932, 481.5057: 0.7632, 488.6475: 0.7397, 495.7893: 0.7279,
                      502.9311: 0.7189, 510.0729: 0.7060, 517.2147: 0.6871, 524.3565: 0.6666, 531.4983: 0.6497,
                      538.6401: 0.6406, 545.7819: 0.6362, 552.9237: 0.6276, 559.8423: 0.5982, 565.8682: 0.5494,
                      571.2245: 0.5010, 576.5809: 0.4508, 581.9372: 0.4005, 587.2936: 0.3526, 593.3194: 0.3030,
                      600.2381: 0.2577, 607.3799: 0.2358, 614.5216: 0.2274, 621.6634: 0.2249, 628.8052: 0.2249,
                      635.9470: 0.2249, 643.0888: 0.2269, 650.2306: 0.2295, 657.3724: 0.2328, 664.5142: 0.2344,
                      671.6560: 0.2371, 678.7978: 0.2387, 685.9396: 0.2380, 693.0814: 0.2348, 700.2232: 0.2288,
                      707.3650: 0.2188, 712.9445: 0.2079, }
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)
        self.d_min_sd = colour.SpectralDistribution(minimum_sd)

        self.mtf = [{3.2299: 1.1400, 3.8506: 1.1345, 4.5904: 1.1275, 5.4724: 1.1146, 6.5239: 1.0973, 7.7775: 1.0745,
                     9.2719: 1.0451, 11.0534: 1.0124, 13.1773: 0.9732, 15.7093: 0.9281, 18.7277: 0.8779,
                     22.3261: 0.8236, 26.6160: 0.7655, 31.7301: 0.7045, 37.8269: 0.6377, 45.0952: 0.5597,
                     53.7600: 0.4883, 62.7626: 0.4218, 72.0566: 0.3586, 82.0374: 0.3015, 91.4668: 0.2544,
                     97.8005: 0.2267, }]

        # copied from kodak 5207
        red_rms = {0.0161: 0.0049, 0.1713: 0.0050, 0.3747: 0.0051, 0.5514: 0.0050, 0.7388: 0.0054, 0.9261: 0.0055,
                   1.0546: 0.0062, 1.1563: 0.0074, 1.2580: 0.0085, 1.3651: 0.0096, 1.4775: 0.0100, 1.5685: 0.0099,
                   1.7238: 0.0088, 1.8308: 0.0084, 1.9165: 0.0082, 2.0664: 0.0077, 2.2698: 0.0070, 2.3769: 0.0066,
                   2.5589: 0.0061, 2.9443: 0.0056, 3.3191: 0.0053, 3.4850: 0.0054, 3.6724: 0.0050, 3.8330: 0.0048,
                   4.0739: 0.0046, 4.2666: 0.0045, 4.4968: 0.0046, 4.6306: 0.0043, 4.8233: 0.0042, 5.0000: 0.0043}
        green_rms = {0.0000: 0.0051, 0.1392: 0.0056, 0.2730: 0.0059, 0.4711: 0.0057, 0.7334: 0.0055, 0.9315: 0.0063,
                     1.1510: 0.0079, 1.2794: 0.0089, 1.4186: 0.0103, 1.5418: 0.0107, 1.6435: 0.0103, 1.8201: 0.0092,
                     1.9486: 0.0080, 2.1734: 0.0074, 2.3448: 0.0068, 2.5321: 0.0062, 2.7730: 0.0063, 3.0835: 0.0065,
                     3.3779: 0.0069, 3.5278: 0.0071, 3.7420: 0.0066, 4.0739: 0.0061, 4.3148: 0.0058, 4.5343: 0.0053,
                     4.7430: 0.0051, 5.0054: 0.0046}
        blue_rms = {0.0000: 0.0112, 0.0857: 0.0114, 0.1606: 0.0123, 0.2409: 0.0126, 0.3158: 0.0123, 0.3961: 0.0118,
                    0.5139: 0.0115, 0.6531: 0.0116, 0.8030: 0.0125, 0.9315: 0.0140, 1.0493: 0.0154, 1.1938: 0.0165,
                    1.3169: 0.0164, 1.4507: 0.0156, 1.5578: 0.0155, 1.6863: 0.0157, 1.7934: 0.0153, 1.9245: 0.0140,
                    2.0610: 0.0129, 2.2645: 0.0124, 2.4732: 0.0127, 2.6552: 0.0128, 2.8747: 0.0135, 3.0246: 0.0138,
                    3.2976: 0.0133, 3.6403: 0.0121, 4.1649: 0.0101, 4.4700: 0.0088, 4.8073: 0.0069, 5.0054: 0.0060}
        red_rms_density = {0.0000: 0.2286, 0.7369: 0.2286, 1.0380: 0.2429, 1.2520: 0.2714, 1.4659: 0.3429,
                           1.7829: 0.4976, 3.7837: 1.5857, 4.0967: 1.7381, 4.4176: 1.8762, 4.7385: 1.9714,
                           5.0000: 2.0238}
        green_rms_density = {0.0079: 0.5952, 0.5784: 0.5952, 0.9509: 0.6048, 1.1648: 0.6333, 1.3312: 0.6714,
                             1.5610: 0.7762, 1.9810: 1.0524, 2.9160: 1.6429, 3.8629: 2.2500, 4.1125: 2.4000,
                             4.3502: 2.5190, 4.5761: 2.6071, 4.7425: 2.6524, 4.8732: 2.6810, 4.9960: 2.7000}
        blue_rms_density = {0.0000: 1.0071, 0.6418: 1.0119, 0.9350: 1.0310, 1.1648: 1.0810, 1.4342: 1.1762,
                            1.7868: 1.3452, 2.2464: 1.6452, 2.9279: 2.0452, 3.8788: 2.6119, 4.2353: 2.7881,
                            4.5840: 2.9190, 4.8732: 2.9929}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        self.rms = 7

        self.calibrate()
