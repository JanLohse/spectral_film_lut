from spectral_film_lut.film_spectral import *


class KodakPortra800(FilmSpectral):
    def __init__(self, iso=800, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.iso = iso
        self.density_measure = 'status_m'
        self.exposure_kelvin = 5500
        self.projection_kelvin = None

        # spectral sensitivity
        red_log_sensitivity = {490.0709: 0.2449, 495.3014: 0.3447, 500.0887: 0.3655, 510.5496: 0.5736, 517.8191: 0.7177,
                               526.7730: 0.7827, 540.6028: 0.8072, 546.3652: 0.8289, 555.1418: 1.0276, 561.8794: 1.1868,
                               564.7163: 1.2405, 566.7553: 1.2471, 569.4149: 1.2593, 575.8865: 1.6201, 587.0567: 2.2097,
                               591.1348: 2.3190, 596.0106: 2.3736, 605.3191: 2.5168, 614.1844: 2.5611, 623.2270: 2.6261,
                               630.4965: 2.6807, 635.9929: 2.7702, 643.6170: 2.8597, 650.9752: 2.9011, 654.6986: 2.8728,
                               657.6241: 2.9237, 659.5745: 2.9388, 661.3475: 2.8870, 666.7553: 2.5196, 674.9113: 2.2465,
                               683.3333: 1.8932, 689.1844: 1.6578, 695.0355: 1.1774, 699.8227: 0.6546, 705.2305: 0.2214}
        green_log_sensitivity = {389.8936: 0.9231, 394.3262: 1.2245, 399.7340: 1.3554, 404.8759: 1.3922,
                                 412.9433: 1.3469, 424.4681: 1.2810, 432.8901: 1.2527, 437.2340: 1.1972,
                                 443.2624: 1.1783, 453.7234: 1.2198, 461.7021: 1.2716, 470.5674: 1.2622,
                                 476.0638: 1.3611, 482.2695: 1.8556, 485.8156: 2.0986, 489.8936: 2.1089,
                                 498.5816: 2.3049, 504.9645: 2.3510, 514.0071: 2.4396, 522.3404: 2.5130,
                                 537.9433: 2.7221, 547.6950: 2.8257, 558.6879: 2.7843, 565.9574: 2.6845,
                                 570.7447: 2.5950, 573.5816: 2.5950, 577.4823: 2.5243, 586.2589: 2.0440,
                                 593.0851: 1.2810, 600.1773: 0.5859, 604.7872: 0.2392}
        blue_log_sensitivity = {369.8582: 1.2480, 384.1312: 1.8179, 390.3369: 2.1240, 396.2766: 2.4914,
                                403.1915: 2.6703, 410.2837: 2.7108, 415.7801: 2.6788, 420.9220: 2.6421,
                                428.0142: 2.6421, 435.9929: 2.6091, 443.0851: 2.5620, 447.5177: 2.5338,
                                459.0426: 2.5620, 467.0213: 2.6279, 471.8972: 2.6656, 475.7092: 2.6421,
                                478.5461: 2.4961, 491.4894: 1.8462, 500.7092: 1.3422, 505.9397: 0.9702,
                                514.8050: 0.5369, 519.7695: 0.2449, 524.8227: 0.0744}
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry - characteristic curve
        red_curve = {
            800: {-3.7283: 0.3071, -3.4606: 0.3039, -3.2559: 0.3095, -3.0611: 0.3327, -2.8714: 0.3799, -2.6117: 0.4719,
                  -2.1722: 0.6871, -1.6528: 0.9510, -1.0835: 1.2494, -0.5162: 1.5429, -0.1147: 1.7532, 0.1001: 1.8596,
                  0.2549: 1.9300},
            1600: {-3.7411: 0.2382, -3.4567: 0.2553, -3.2087: 0.2813, -3.0499: 0.3227, -2.8444: 0.4032, -2.6197: 0.5283,
                   -2.4133: 0.6558, -1.9649: 0.9361, -1.5378: 1.2108, -1.1695: 1.4326, -0.7575: 1.7055, -0.4205: 1.9184,
                   -0.0855: 2.1166, 0.1047: 2.2215, 0.2565: 2.3011},
            3200: {-3.7397: 0.2970, -3.4663: 0.3204, -3.2393: 0.3454, -3.0930: 0.3785, -2.8791: 0.4696, -2.6622: 0.5963,
                   -2.3525: 0.8069, -1.9197: 1.0999, -1.4475: 1.4186, -1.0127: 1.7244, -0.6566: 1.9722, -0.2641: 2.2312,
                   0.0476: 2.4095, 0.2595: 2.5225}}[self.iso]
        green_curve = {
            800: {-3.7263: 0.7047, -3.5366: 0.7031, -3.3508: 0.7063, -3.2109: 0.7183, -3.0511: 0.7471, -2.9113: 0.7870,
                  -2.6566: 0.8974, -2.1472: 1.1718, -1.7327: 1.3949, -1.1434: 1.7037, -0.7199: 1.9284, -0.3144: 2.1468,
                  0.0202: 2.3051, 0.2509: 2.4067},
            1600: {-3.7289: 0.6640, -3.4719: 0.6697, -3.2391: 0.6867, -3.0063: 0.7485, -2.7918: 0.8541, -2.5600: 1.0141,
                   -2.3343: 1.1636, -2.0570: 1.3367, -1.6623: 1.6089, -1.2899: 1.8445, -0.9013: 2.0728, -0.5268: 2.2840,
                   -0.2738: 2.4343, 0.0298: 2.5822, 0.2586: 2.6716},
            3200: {-3.7337: 0.6932, -3.4562: 0.7085, -3.2191: 0.7287, -3.0960: 0.7618, -2.9316: 0.8376, -2.6642: 1.0184,
                   -2.3697: 1.2524, -2.0912: 1.4412, -1.7663: 1.6978, -1.3638: 1.9810, -0.9189: 2.2788, -0.6374: 2.4450,
                   -0.3590: 2.6153, -0.1451: 2.7210, 0.0648: 2.8033, 0.2665: 2.8759}}[self.iso]
        blue_curve = {
            800: {-3.7253: 1.0198, -3.3907: 1.0198, -3.2259: 1.0278, -3.0641: 1.0534, -2.9063: 1.0958, -2.6746: 1.1942,
                  -2.2331: 1.4357, -1.6109: 1.8020, -0.9926: 2.1788, -0.4363: 2.5251, -0.0358: 2.7602, 0.1161: 2.8522,
                  0.2449: 2.9434},
            1600: {-3.7914: 1.0136, -3.6419: 1.0251, -3.4743: 1.0415, -3.3593: 1.0628, -3.2066: 1.1154, -3.0702: 1.1860,
                   -2.9010: 1.3060, -2.6612: 1.5129, -2.5248: 1.6329, -2.3179: 1.8037, -2.0780: 2.0140, -1.8316: 2.2472,
                   -1.5984: 2.4739, -1.3963: 2.6595, -1.1745: 2.8550, -0.9955: 3.0094, -0.8296: 3.1277, -0.6949: 3.2181,
                   -0.5864: 3.2887},
            3200: {-3.7417: 1.0474, -3.4461: 1.0765, -3.2191: 1.1007, -3.0517: 1.1426, -2.8812: 1.2193, -2.6501: 1.3532,
                   -2.3979: 1.5493, -2.0357: 1.8245, -1.6513: 2.1142, -1.2690: 2.4176, -0.9370: 2.6968, -0.6445: 2.9268,
                   -0.5002: 3.0333, -0.2873: 3.1576, 0.0254: 3.3432, 0.2665: 3.4860}}[self.iso]
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        self.exposure_base = 10

        # spectral dye density
        midscale_sd = {399.6496: 1.3339, 404.6952: 1.3415, 409.7407: 1.4075, 416.6083: 1.5137, 423.3357: 1.6182,
                       430.2733: 1.7064, 439.2432: 1.7402, 450.9460: 1.7215, 461.4576: 1.6678, 468.4653: 1.6036,
                       476.0336: 1.5207, 484.5830: 1.4227, 489.4884: 1.3818, 497.7575: 1.3631, 506.1668: 1.3888,
                       518.4303: 1.4215, 527.1899: 1.4413, 536.2999: 1.4600, 545.1296: 1.4542, 551.1563: 1.4133,
                       557.6734: 1.3339, 571.3385: 1.0946, 581.6398: 0.9078, 587.7365: 0.8050, 595.1647: 0.7151,
                       605.6762: 0.6708, 618.2901: 0.7087, 640.2943: 0.8646, 658.2341: 1.0128, 672.1093: 1.0957,
                       684.1626: 1.1512, 693.9734: 1.1658, 700.0000: 1.1617}
        minimum_sd = {400.3504: 0.8435, 403.8542: 0.8260, 406.6573: 0.8272, 412.3336: 0.8663, 421.3735: 0.9393,
                      431.5347: 0.9866, 441.3455: 0.9866, 451.1563: 0.9574, 465.5221: 0.8786, 479.5375: 0.7910,
                      488.6475: 0.7210, 498.4583: 0.6824, 508.9699: 0.6696, 518.0799: 0.6451, 529.9930: 0.6013,
                      548.9138: 0.5791, 563.2796: 0.5517, 573.4408: 0.4991, 580.8690: 0.4326, 588.0168: 0.3532,
                      596.0757: 0.2703, 604.4149: 0.2201, 617.9397: 0.1956, 637.9117: 0.2002, 657.1829: 0.2189,
                      674.3518: 0.2364, 688.0168: 0.2469, 699.8598: 0.2423}
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)
        self.d_min_sd = colour.SpectralDistribution(minimum_sd)

        red_mtf = {2.4957: 1.0541, 3.4286: 1.0606, 5.1209: 1.0541, 6.4855: 1.0464, 8.4083: 1.0375, 11.0233: 0.9893,
                   14.4194: 0.9040, 18.6527: 0.8012, 22.8212: 0.7015, 24.9770: 0.6449, 29.0967: 0.5899, 38.9186: 0.4198,
                   52.6982: 0.2814, 64.6191: 0.2070, 80.2140: 0.1453}
        green_mtf = {2.4818: 1.0867, 3.9411: 1.1314, 6.1546: 1.1836, 9.5579: 1.2277, 14.9262: 1.1764, 21.3690: 1.1028,
                     27.2148: 0.9550, 36.4015: 0.7630, 47.1411: 0.6142, 52.2305: 0.5483, 56.3422: 0.4783,
                     65.6352: 0.4042, 79.5020: 0.3421}
        blue_mtf = {2.4957: 1.0477, 3.7068: 1.0606, 5.7565: 1.0503, 7.6399: 1.0503, 9.5792: 1.0841, 14.4354: 1.0749,
                    19.5029: 1.0350, 22.7197: 0.9643, 27.5505: 0.9218, 36.1993: 0.8464, 44.7356: 0.7447,
                    52.1142: 0.6528, 57.1643: 0.5907, 66.2229: 0.5338, 79.4135: 0.4754}
        self.mtf = [red_mtf, green_mtf, blue_mtf]

        # copied from kodak 5207
        red_rms = {0.0161: 0.0049, 0.1713: 0.0050, 0.3747: 0.0051, 0.5514: 0.0050, 0.7388: 0.0054, 0.9261: 0.0055,
                   1.0546: 0.0062, 1.1563: 0.0074, 1.2580: 0.0085, 1.3651: 0.0096, 1.4775: 0.0100, 1.5685: 0.0099,
                   1.7238: 0.0088, 1.8308: 0.0084, 1.9165: 0.0082, 2.0664: 0.0077, 2.2698: 0.0070, 2.3769: 0.0066,
                   2.5589: 0.0061, 2.9443: 0.0056, 3.3191: 0.0053, 3.4850: 0.0054, 3.6724: 0.0050, 3.8330: 0.0048,
                   4.0739: 0.0046, 4.2666: 0.0045, 4.4968: 0.0046, 4.6306: 0.0043, 4.8233: 0.0042, 5.0000: 0.0043}
        green_rms = {0.0000: 0.0051, 0.1392: 0.0056, 0.2730: 0.0059, 0.4711: 0.0057, 0.7334: 0.0055, 0.9315: 0.0063,
                     1.1510: 0.0079, 1.2794: 0.0089, 1.4186: 0.0103, 1.5418: 0.0107, 1.6435: 0.0103, 1.8201: 0.0092,
                     1.9486: 0.0080, 2.1734: 0.0074, 2.3448: 0.0068, 2.5321: 0.0062, 2.7730: 0.0063, 3.0835: 0.0065,
                     3.3779: 0.0069, 3.5278: 0.0071, 3.7420: 0.0066, 4.0739: 0.0061, 4.3148: 0.0058, 4.5343: 0.0053,
                     4.7430: 0.0051, 5.0054: 0.0046}
        blue_rms = {0.0000: 0.0112, 0.0857: 0.0114, 0.1606: 0.0123, 0.2409: 0.0126, 0.3158: 0.0123, 0.3961: 0.0118,
                    0.5139: 0.0115, 0.6531: 0.0116, 0.8030: 0.0125, 0.9315: 0.0140, 1.0493: 0.0154, 1.1938: 0.0165,
                    1.3169: 0.0164, 1.4507: 0.0156, 1.5578: 0.0155, 1.6863: 0.0157, 1.7934: 0.0153, 1.9245: 0.0140,
                    2.0610: 0.0129, 2.2645: 0.0124, 2.4732: 0.0127, 2.6552: 0.0128, 2.8747: 0.0135, 3.0246: 0.0138,
                    3.2976: 0.0133, 3.6403: 0.0121, 4.1649: 0.0101, 4.4700: 0.0088, 4.8073: 0.0069, 5.0054: 0.0060}
        red_rms_density = {0.0000: 0.2286, 0.7369: 0.2286, 1.0380: 0.2429, 1.2520: 0.2714, 1.4659: 0.3429,
                           1.7829: 0.4976, 3.7837: 1.5857, 4.0967: 1.7381, 4.4176: 1.8762, 4.7385: 1.9714,
                           5.0000: 2.0238}
        green_rms_density = {0.0079: 0.5952, 0.5784: 0.5952, 0.9509: 0.6048, 1.1648: 0.6333, 1.3312: 0.6714,
                             1.5610: 0.7762, 1.9810: 1.0524, 2.9160: 1.6429, 3.8629: 2.2500, 4.1125: 2.4000,
                             4.3502: 2.5190, 4.5761: 2.6071, 4.7425: 2.6524, 4.8732: 2.6810, 4.9960: 2.7000}
        blue_rms_density = {0.0000: 1.0071, 0.6418: 1.0119, 0.9350: 1.0310, 1.1648: 1.0810, 1.4342: 1.1762,
                            1.7868: 1.3452, 2.2464: 1.6452, 2.9279: 2.0452, 3.8788: 2.6119, 4.2353: 2.7881,
                            4.5840: 2.9190, 4.8732: 2.9929}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        # guessed value:
        self.rms = 7

        self.calibrate()


class KodakPortra800At1600(KodakPortra800):
    def __init__(self, *args, **kwargs):
        super().__init__(1600, *args, **kwargs)


class KodakPortra800At3200(KodakPortra800):
    def __init__(self, *args, **kwargs):
        super().__init__(3200, *args, **kwargs)
