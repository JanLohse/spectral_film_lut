from spectral_film_lut.film_spectral import *


class KodakPortra160(FilmSpectral):
    def __init__(self):
        super().__init__()

        self.iso = 160
        self.density_measure = 'status_m'

        # spectral sensitivity
        red_log_sensitivity = {490.3818: 0.0424, 498.5499: 0.0734, 505.6526: 0.1402, 512.5777: 0.2174, 521.3673: 0.2946,
                               531.0447: 0.3106, 538.0586: 0.2927, 544.7174: 0.3332, 552.0864: 0.4414, 561.5863: 0.6626,
                               571.7964: 0.9186, 580.2308: 1.2809, 591.1512: 1.5962, 603.8473: 1.8052, 615.5667: 1.9228,
                               624.8002: 1.9784, 629.6833: 1.9859, 634.6552: 1.9398, 639.7159: 1.8287, 645.7532: 1.4428,
                               651.5241: 1.1539, 657.4726: 1.0616, 661.3791: 0.9139, 669.9023: 0.3548}
        green_log_sensitivity = {390.0000: 0.6812, 393.1034: 0.8015, 395.8621: 0.9107, 397.2846: 0.9735,
                                 399.6132: 1.0341, 401.9417: 1.0604, 405.9779: 1.0407, 409.0826: 1.0112,
                                 414.0501: 1.0013, 418.3967: 0.9882, 422.1224: 0.9521, 425.8481: 0.8997,
                                 428.9528: 0.8685, 434.0756: 0.8505, 439.1984: 0.8537, 443.2345: 0.8341,
                                 446.9602: 0.8045, 451.6173: 0.7881, 459.0686: 0.8062, 464.6571: 0.8111,
                                 469.9351: 0.8373, 473.6608: 0.8997, 481.4226: 1.0505, 493.8415: 1.2637,
                                 500.5166: 1.3605, 507.5022: 1.4113, 516.3507: 1.4851, 527.0620: 1.5852,
                                 533.4266: 1.6524, 538.5494: 1.7213, 543.6722: 1.7836, 548.4845: 1.8410,
                                 551.5893: 1.8443, 555.6254: 1.8115, 559.9720: 1.7590, 565.8710: 1.7131,
                                 570.3728: 1.6491, 576.1166: 1.4966, 580.4632: 1.3080, 584.9650: 1.0145,
                                 588.2250: 0.7357, 589.7773: 0.6061}
        blue_log_sensitivity = {379.9349: 1.0306, 393.7851: 1.6056, 399.4673: 1.8551, 403.5513: 1.9068,
                                409.5886: 1.8927, 419.7988: 1.9162, 430.0089: 1.8786, 440.2190: 1.9416,
                                450.4291: 1.8852, 460.9056: 1.9605, 468.1859: 2.0395, 474.4007: 1.9445,
                                481.1483: 1.6433, 487.8958: 1.0268, 492.3350: 0.7256, 500.3255: 0.3586,
                                509.9142: 0.0066}
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry - characteristic curve
        red_curve = {-3.0271: 0.2019, -2.7803: 0.2027, -2.6004: 0.2126, -2.4307: 0.2217, -2.3052: 0.2406,
                     -2.1592: 0.2802, -2.0101: 0.3395, -1.8188: 0.4326, -1.6131: 0.5323, -1.3920: 0.6477,
                     -1.0475: 0.8290, -0.7215: 0.9996, -0.3996: 1.1784, -0.0654: 1.3646, 0.2225: 1.4981, 0.4899: 1.6119,
                     0.7367: 1.7042, 0.9589: 1.7792}
        green_curve = {-3.0179: 0.6156, -2.8009: 0.6180, -2.5952: 0.6255, -2.4410: 0.6345, -2.2949: 0.6625,
                       -2.1458: 0.7161, -1.9885: 0.7919, -1.7828: 0.9073, -1.5514: 1.0309, -1.2635: 1.1875,
                       -0.6392: 1.5278, -0.2012: 1.7701, 0.2431: 2.0074, 0.6030: 2.1945, 0.9506: 2.3692}
        blue_curve = {-3.0269: 0.8302, -2.8948: 0.8484, -2.7587: 0.8534, -2.6679: 0.8501, -2.5193: 0.8567,
                      -2.4430: 0.8732, -2.3728: 0.8914, -2.2758: 0.9294, -2.1500: 0.9939, -1.8198: 1.1924,
                      -1.5764: 1.3346, -1.1616: 1.5711, -0.6665: 1.8688, -0.3178: 2.0987, 0.1651: 2.4063,
                      0.5365: 2.6312, 0.7964: 2.7933, 0.9533: 2.8908}
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        midscale_sd = {400.1235: 1.2500, 401.7291: 1.2387, 403.4582: 1.2392, 409.3866: 1.3041, 414.5121: 1.3928,
                       422.4784: 1.5464, 429.8271: 1.6716, 438.4726: 1.7629, 445.1420: 1.7948, 449.7736: 1.8005,
                       456.9370: 1.7799, 471.2021: 1.7031, 479.7242: 1.6273, 485.7143: 1.5433, 490.2841: 1.4794,
                       494.4833: 1.4423, 499.1766: 1.4165, 501.9555: 1.4165, 507.9457: 1.4433, 513.9975: 1.4567,
                       523.8781: 1.4593, 530.0535: 1.4567, 536.2289: 1.4732, 541.7867: 1.4763, 548.2091: 1.4593,
                       554.8168: 1.4010, 563.8946: 1.2613, 573.6517: 1.0500, 584.5821: 0.8180, 591.6838: 0.7098,
                       600.7616: 0.6340, 616.4471: 0.6407, 638.3697: 0.7897, 668.1968: 1.0526, 688.7608: 1.1784,
                       695.5537: 1.1959, 700.0000: 1.1990}
        minimum_sd = {400.3705: 0.6711, 402.5319: 0.6557, 407.4722: 0.6515, 411.4862: 0.6608, 418.6497: 0.7129,
                      433.2853: 0.7943, 443.1042: 0.8247, 450.6999: 0.8227, 456.5665: 0.8057, 462.1243: 0.7969,
                      475.7102: 0.8015, 480.0329: 0.7959, 485.0967: 0.7649, 493.6188: 0.7124, 500.1029: 0.6933,
                      506.6488: 0.7129, 510.9098: 0.7206, 518.0115: 0.7057, 526.1630: 0.6691, 530.6711: 0.6479,
                      542.4043: 0.6299, 555.3726: 0.6093, 561.5480: 0.5887, 570.8110: 0.5242, 581.0004: 0.4108,
                      594.2157: 0.2598, 602.3055: 0.2005, 610.6422: 0.1711, 623.3018: 0.1582, 646.1507: 0.1711,
                      675.1750: 0.2005, 693.3923: 0.2124, 700.1853: 0.2134}
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)
        self.d_min_sd = colour.SpectralDistribution(minimum_sd)

        red_mtf = {2.5343: 1.0256, 3.1724: 1.0063, 4.2554: 0.9912, 5.4826: 0.9875, 6.8238: 1.0140, 8.4443: 1.0191,
                   9.6959: 0.9887, 12.3489: 0.9962, 14.7626: 1.0025, 17.7294: 0.9353, 21.9650: 0.8070, 29.6336: 0.5999,
                   38.4000: 0.4516, 45.9052: 0.3531, 50.9191: 0.2978, 57.7967: 0.2659, 67.7534: 0.2105, 80.2530: 0.1615}
        green_mtf = {2.5343: 1.0584, 3.0647: 1.0438, 4.0405: 1.0386, 5.7081: 1.0692, 7.4824: 1.1288, 9.7519: 1.1489,
                     14.3435: 1.1708, 19.6885: 1.1203, 26.5623: 0.9813, 34.6188: 0.8434, 47.2463: 0.7113,
                     53.3198: 0.6430, 65.4523: 0.5111, 79.5169: 0.4047}
        blue_mtf = {2.5489: 1.0191, 3.8808: 0.9875, 4.9713: 0.9862, 6.2952: 1.0000, 8.0641: 1.0127, 9.8082: 1.0544,
                    12.4920: 1.0412, 17.9554: 0.9690, 24.5048: 0.8595, 29.4635: 0.7529, 37.5255: 0.6512,
                    50.0469: 0.5562, 59.4851: 0.4750, 79.3339: 0.3645}
        self.mtf = [red_mtf, green_mtf, blue_mtf]

        # copied from kodak 5207
        red_rms = {0.0161: 0.0049, 0.1713: 0.0050, 0.3747: 0.0051, 0.5514: 0.0050, 0.7388: 0.0054, 0.9261: 0.0055,
                   1.0546: 0.0062, 1.1563: 0.0074, 1.2580: 0.0085, 1.3651: 0.0096, 1.4775: 0.0100, 1.5685: 0.0099,
                   1.7238: 0.0088, 1.8308: 0.0084, 1.9165: 0.0082, 2.0664: 0.0077, 2.2698: 0.0070, 2.3769: 0.0066,
                   2.5589: 0.0061, 2.9443: 0.0056, 3.3191: 0.0053, 3.4850: 0.0054, 3.6724: 0.0050, 3.8330: 0.0048,
                   4.0739: 0.0046, 4.2666: 0.0045, 4.4968: 0.0046, 4.6306: 0.0043, 4.8233: 0.0042, 5.0000: 0.0043}
        green_rms = {0.0000: 0.0051, 0.1392: 0.0056, 0.2730: 0.0059, 0.4711: 0.0057, 0.7334: 0.0055, 0.9315: 0.0063,
                     1.1510: 0.0079, 1.2794: 0.0089, 1.4186: 0.0103, 1.5418: 0.0107, 1.6435: 0.0103, 1.8201: 0.0092,
                     1.9486: 0.0080, 2.1734: 0.0074, 2.3448: 0.0068, 2.5321: 0.0062, 2.7730: 0.0063, 3.0835: 0.0065,
                     3.3779: 0.0069, 3.5278: 0.0071, 3.7420: 0.0066, 4.0739: 0.0061, 4.3148: 0.0058, 4.5343: 0.0053,
                     4.7430: 0.0051, 5.0054: 0.0046}
        blue_rms = {0.0000: 0.0112, 0.0857: 0.0114, 0.1606: 0.0123, 0.2409: 0.0126, 0.3158: 0.0123, 0.3961: 0.0118,
                    0.5139: 0.0115, 0.6531: 0.0116, 0.8030: 0.0125, 0.9315: 0.0140, 1.0493: 0.0154, 1.1938: 0.0165,
                    1.3169: 0.0164, 1.4507: 0.0156, 1.5578: 0.0155, 1.6863: 0.0157, 1.7934: 0.0153, 1.9245: 0.0140,
                    2.0610: 0.0129, 2.2645: 0.0124, 2.4732: 0.0127, 2.6552: 0.0128, 2.8747: 0.0135, 3.0246: 0.0138,
                    3.2976: 0.0133, 3.6403: 0.0121, 4.1649: 0.0101, 4.4700: 0.0088, 4.8073: 0.0069, 5.0054: 0.0060}
        red_rms_density = {0.0000: 0.2286, 0.7369: 0.2286, 1.0380: 0.2429, 1.2520: 0.2714, 1.4659: 0.3429,
                           1.7829: 0.4976, 3.7837: 1.5857, 4.0967: 1.7381, 4.4176: 1.8762, 4.7385: 1.9714,
                           5.0000: 2.0238}
        green_rms_density = {0.0079: 0.5952, 0.5784: 0.5952, 0.9509: 0.6048, 1.1648: 0.6333, 1.3312: 0.6714,
                             1.5610: 0.7762, 1.9810: 1.0524, 2.9160: 1.6429, 3.8629: 2.2500, 4.1125: 2.4000,
                             4.3502: 2.5190, 4.5761: 2.6071, 4.7425: 2.6524, 4.8732: 2.6810, 4.9960: 2.7000}
        blue_rms_density = {0.0000: 1.0071, 0.6418: 1.0119, 0.9350: 1.0310, 1.1648: 1.0810, 1.4342: 1.1762,
                            1.7868: 1.3452, 2.2464: 1.6452, 2.9279: 2.0452, 3.8788: 2.6119, 4.2353: 2.7881,
                            4.5840: 2.9190, 4.8732: 2.9929}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        # guessed value:
        self.rms = 2.5

        self.calibrate()
