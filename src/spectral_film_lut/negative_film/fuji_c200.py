from spectral_film_lut.film_spectral import *


class FujiC200(FilmSpectral):
    def __init__(self):
        super().__init__()

        self.iso = 200
        self.density_measure = 'status_m'

        # spectral sensitivity
        red_log_sensitivity = {566.1169: 1.0538, 568.3541: 1.1669, 570.5913: 1.2794, 573.1480: 1.4012, 576.0244: 1.5256,
                               578.9008: 1.6347, 584.6535: 1.8359, 589.1279: 1.9456, 594.8806: 2.0482, 603.1901: 2.1573,
                               613.4172: 2.2151, 623.6443: 2.2373, 633.8714: 2.2606, 644.0985: 2.2594, 650.4904: 2.1649,
                               653.0472: 2.0456, 655.2844: 1.9304, 657.2020: 1.8260, 659.1196: 1.7126, 661.0371: 1.5984,
                               662.9547: 1.4810, 664.8723: 1.3702, 666.7899: 1.2654, 668.7075: 1.1619, 670.9446: 1.0538,
                               673.8210: 0.9614, }
        green_log_sensitivity = {461.9284: 0.8033, 464.4852: 0.9231, 467.3615: 1.0261, 470.8771: 1.1416,
                                 474.7123: 1.2585, 478.5474: 1.3583, 482.3826: 1.4570, 486.8569: 1.5629,
                                 491.0117: 1.6518, 501.2388: 1.8121, 510.1875: 1.9124, 519.4558: 2.0074,
                                 527.1261: 2.1209, 533.5181: 2.2262, 540.5492: 2.3250, 549.4979: 2.4243,
                                 559.7250: 2.4693, 568.0345: 2.4180, 572.5089: 2.3146, 574.7460: 2.2025,
                                 576.6636: 2.0691, 578.2616: 1.9643, 579.8596: 1.8517, 582.4164: 1.6344,
                                 584.0143: 1.5082, 585.2927: 1.3965, 586.4646: 1.2659, 587.7430: 1.1297,
                                 589.1279: 1.0405, 590.7259: 0.9217, 594.2414: 0.8025, 597.4374: 0.7440, }
        blue_log_sensitivity = {405.6794: 2.2946, 415.9065: 2.3460, 426.1336: 2.3730, 436.3607: 2.3850,
                                446.5878: 2.3944, 456.8149: 2.4401, 467.0419: 2.5513, 476.6298: 2.5499,
                                482.7022: 2.4305, 485.5786: 2.3226, 488.1353: 2.2073, 490.3725: 2.0843,
                                491.9705: 1.9800, 493.4087: 1.8484, 495.1665: 1.6538, 496.1252: 1.5561,
                                497.7232: 1.4410, 499.3212: 1.3337, 501.5584: 1.2029, 504.4348: 1.0799,
                                506.6719: 1.0146, }
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry - characteristic curve
        red_curve = {-3.5388: 0.1429, -3.3604: 0.1469, -3.1820: 0.1592, -3.0035: 0.1767, -2.8251: 0.2048,
                     -2.6467: 0.2455, -2.4683: 0.3139, -2.2877: 0.3945, -2.1114: 0.4754, -1.9330: 0.5597,
                     -1.7546: 0.6493, -1.5761: 0.7450, -1.3977: 0.8480, -1.2193: 0.9549, -1.0409: 1.0669,
                     -0.8624: 1.1833, -0.6840: 1.2990, -0.5056: 1.4095, -0.3272: 1.5168, -0.1487: 1.6231,
                     0.0297: 1.7311, 0.2081: 1.8361, }
        green_curve = {-3.5473: 0.4326, -3.3689: 0.4336, -3.1904: 0.4361, -3.0120: 0.4485, -2.8336: 0.4670,
                       -2.6552: 0.5065, -2.4768: 0.5845, -2.2983: 0.6806, -2.1199: 0.7808, -1.9415: 0.8838,
                       -1.7631: 0.9913, -1.5846: 1.1003, -1.4062: 1.2124, -1.2278: 1.3259, -1.0494: 1.4411,
                       -0.8709: 1.5570, -0.6925: 1.6742, -0.5141: 1.7913, -0.3357: 1.9080, -0.1572: 2.0289,
                       0.0212: 2.1513, 0.1996: 2.2739, 0.3271: 2.3630, }
        blue_curve = {-3.5473: 0.7329, -3.3689: 0.7356, -3.1904: 0.7474, -3.0120: 0.7625, -2.8336: 0.7893,
                      -2.6552: 0.8325, -2.4768: 0.9054, -2.2983: 1.0021, -2.1199: 1.1023, -1.9415: 1.2108,
                      -1.7631: 1.3314, -1.5846: 1.4574, -1.4062: 1.5824, -1.2278: 1.7023, -1.0494: 1.8164,
                      -0.8709: 1.9310, -0.6925: 2.0473, -0.5141: 2.1645, -0.3357: 2.2814, -0.1572: 2.4024,
                      0.0212: 2.5253, 0.1741: 2.6326, }
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        midscale_sd = {406.3292: 1.5322, 415.7198: 1.5955, 422.6870: 1.7094, 428.1396: 1.8130, 436.0156: 1.9045,
                       445.7091: 1.9531, 455.4026: 1.9452, 464.7931: 1.8790, 472.9720: 1.7784, 479.9392: 1.6780,
                       488.1181: 1.5812, 497.8116: 1.5277, 507.5051: 1.5475, 517.1986: 1.6058, 526.8921: 1.6659,
                       536.5856: 1.7120, 546.2791: 1.7391, 555.9726: 1.7271, 564.7573: 1.6507, 571.7245: 1.5514,
                       577.4800: 1.4530, 582.9326: 1.3501, 588.3852: 1.2471, 595.6553: 1.1372, 605.0459: 1.0899,
                       614.7394: 1.1277, 624.4329: 1.2127, 634.1264: 1.3102, 643.8199: 1.4092, 653.5134: 1.5045,
                       663.2069: 1.5924, 672.9004: 1.6674, 682.5939: 1.7255, 692.2874: 1.7581, 701.9808: 1.7604,
                       711.6743: 1.7317, 717.4299: 1.7007, }
        minimum_sd = {404.5117: 0.9028, 414.2052: 0.8712, 423.8987: 0.8819, 433.5922: 0.8997, 443.2857: 0.8985,
                      452.9792: 0.8792, 462.6727: 0.8511, 471.1545: 0.8222, 483.2714: 0.7788, 492.9649: 0.7422,
                      502.6583: 0.7108, 512.3518: 0.6897, 522.0453: 0.6717, 531.7388: 0.6531, 541.4323: 0.6306,
                      551.1258: 0.6066, 560.8193: 0.5797, 570.5128: 0.5250, 580.2063: 0.4454, 589.8998: 0.3643,
                      599.5933: 0.2947, 609.2868: 0.2536, 618.9803: 0.2422, 628.6738: 0.2426, 638.3673: 0.2513,
                      648.0608: 0.2651, 657.7543: 0.2792, 667.4478: 0.2860, 677.1413: 0.2757, 686.8348: 0.2620,
                      696.5283: 0.2465, 706.2218: 0.2318, 714.4006: 0.2190, }
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)
        self.d_min_sd = colour.SpectralDistribution(minimum_sd)

        self.mtf = [{2.9170: 1.1823, 3.6999: 1.1823, 4.6929: 1.1807, 5.9524: 1.1786, 7.5500: 1.1712, 9.5763: 1.1527,
                     12.1465: 1.1191, 15.4064: 1.0658, 19.5413: 0.9935, 24.7860: 0.8989, 31.4383: 0.7927,
                     39.8759: 0.6834, 50.5782: 0.5691, 63.0725: 0.4577, 76.0268: 0.3610, 89.0844: 0.2834,
                     98.6399: 0.2395, }]

        # copied from kodak 5207
        red_rms = {0.0161: 0.0049, 0.1713: 0.0050, 0.3747: 0.0051, 0.5514: 0.0050, 0.7388: 0.0054, 0.9261: 0.0055,
                   1.0546: 0.0062, 1.1563: 0.0074, 1.2580: 0.0085, 1.3651: 0.0096, 1.4775: 0.0100, 1.5685: 0.0099,
                   1.7238: 0.0088, 1.8308: 0.0084, 1.9165: 0.0082, 2.0664: 0.0077, 2.2698: 0.0070, 2.3769: 0.0066,
                   2.5589: 0.0061, 2.9443: 0.0056, 3.3191: 0.0053, 3.4850: 0.0054, 3.6724: 0.0050, 3.8330: 0.0048,
                   4.0739: 0.0046, 4.2666: 0.0045, 4.4968: 0.0046, 4.6306: 0.0043, 4.8233: 0.0042, 5.0000: 0.0043}
        green_rms = {0.0000: 0.0051, 0.1392: 0.0056, 0.2730: 0.0059, 0.4711: 0.0057, 0.7334: 0.0055, 0.9315: 0.0063,
                     1.1510: 0.0079, 1.2794: 0.0089, 1.4186: 0.0103, 1.5418: 0.0107, 1.6435: 0.0103, 1.8201: 0.0092,
                     1.9486: 0.0080, 2.1734: 0.0074, 2.3448: 0.0068, 2.5321: 0.0062, 2.7730: 0.0063, 3.0835: 0.0065,
                     3.3779: 0.0069, 3.5278: 0.0071, 3.7420: 0.0066, 4.0739: 0.0061, 4.3148: 0.0058, 4.5343: 0.0053,
                     4.7430: 0.0051, 5.0054: 0.0046}
        blue_rms = {0.0000: 0.0112, 0.0857: 0.0114, 0.1606: 0.0123, 0.2409: 0.0126, 0.3158: 0.0123, 0.3961: 0.0118,
                    0.5139: 0.0115, 0.6531: 0.0116, 0.8030: 0.0125, 0.9315: 0.0140, 1.0493: 0.0154, 1.1938: 0.0165,
                    1.3169: 0.0164, 1.4507: 0.0156, 1.5578: 0.0155, 1.6863: 0.0157, 1.7934: 0.0153, 1.9245: 0.0140,
                    2.0610: 0.0129, 2.2645: 0.0124, 2.4732: 0.0127, 2.6552: 0.0128, 2.8747: 0.0135, 3.0246: 0.0138,
                    3.2976: 0.0133, 3.6403: 0.0121, 4.1649: 0.0101, 4.4700: 0.0088, 4.8073: 0.0069, 5.0054: 0.0060}
        red_rms_density = {0.0000: 0.2286, 0.7369: 0.2286, 1.0380: 0.2429, 1.2520: 0.2714, 1.4659: 0.3429,
                           1.7829: 0.4976, 3.7837: 1.5857, 4.0967: 1.7381, 4.4176: 1.8762, 4.7385: 1.9714,
                           5.0000: 2.0238}
        green_rms_density = {0.0079: 0.5952, 0.5784: 0.5952, 0.9509: 0.6048, 1.1648: 0.6333, 1.3312: 0.6714,
                             1.5610: 0.7762, 1.9810: 1.0524, 2.9160: 1.6429, 3.8629: 2.2500, 4.1125: 2.4000,
                             4.3502: 2.5190, 4.5761: 2.6071, 4.7425: 2.6524, 4.8732: 2.6810, 4.9960: 2.7000}
        blue_rms_density = {0.0000: 1.0071, 0.6418: 1.0119, 0.9350: 1.0310, 1.1648: 1.0810, 1.4342: 1.1762,
                            1.7868: 1.3452, 2.2464: 1.6452, 2.9279: 2.0452, 3.8788: 2.6119, 4.2353: 2.7881,
                            4.5840: 2.9190, 4.8732: 2.9929}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        self.rms = 4

        self.calibrate()
