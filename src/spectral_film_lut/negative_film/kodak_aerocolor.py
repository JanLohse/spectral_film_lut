from spectral_film_lut.film_spectral import *


class KodakAerocolor(FilmSpectral):
    def __init__(self, contrast="mid"):
        super().__init__()

        self.iso = 125
        self.density_measure = 'status_m'
        self.manufacturer = 'Kodak'
        self.stage = 'camera'
        self.type = 'negative'
        self.medium = 'photo'

        # spectral sensitivity
        red_log_sensitivity = {580.6654: 1.1723, 582.3916: 1.2569, 583.9851: 1.3450, 588.6328: 1.5261, 593.9444: 1.6132,
                               601.8170: 1.6879, 608.5514: 1.7323, 615.8549: 1.7852, 623.1583: 1.8493, 629.4659: 1.9120,
                               634.7301: 1.9930, 640.7531: 2.0654, 646.3967: 2.1299, 655.0281: 2.1454, 660.0077: 2.0666,
                               662.3316: 1.9853, 664.3234: 1.9077, 666.3153: 1.8208, 668.3071: 1.7291, 670.2990: 1.6446,
                               672.2909: 1.5647, 674.6147: 1.4789, 677.2705: 1.3908, 680.5903: 1.3056, 684.5740: 1.2287,
                               687.8937: 1.1494, 689.8856: 1.1000, }
        green_log_sensitivity = {390.7749: 1.0695, 392.5011: 1.1568, 394.5689: 1.2428, 396.0865: 1.3097,
                                 406.7097: 1.4299, 414.0132: 1.4042, 421.3167: 1.3764, 428.6202: 1.3414,
                                 435.9237: 1.2815, 443.2271: 1.2351, 451.6925: 1.2366, 457.8341: 1.2383,
                                 465.1376: 1.2200, 472.1091: 1.2315, 476.9939: 1.3183, 478.8150: 1.4133,
                                 480.9776: 1.5041, 486.6497: 1.7055, 493.6876: 1.7855, 502.1529: 1.8499,
                                 508.2945: 1.8663, 515.5980: 1.9195, 522.5695: 1.9593, 531.5329: 2.0502,
                                 538.5044: 2.1105, 544.8119: 2.1822, 556.0991: 2.1662, 562.4067: 2.1111,
                                 567.3863: 2.0448, 575.6857: 1.9394, 578.9391: 1.8447, 580.6654: 1.7638,
                                 582.3252: 1.6789, 583.6532: 1.6005, 584.9811: 1.5291, 586.9729: 1.3688,
                                 588.2344: 1.2801, 589.6951: 1.2005, }
        blue_log_sensitivity = {385.4632: 1.2351, 387.4551: 1.3273, 389.1814: 1.4190, 391.0404: 1.5085,
                                392.5011: 1.6072, 394.4266: 1.6951, 396.4185: 1.7908, 404.3859: 1.9322,
                                411.3574: 1.9630, 418.6609: 1.9592, 425.5955: 1.9778, 431.6080: 1.9794,
                                440.5713: 2.0108, 445.8829: 2.0019, 455.8422: 2.0396, 462.4818: 2.1012,
                                469.1213: 2.1755, 474.4329: 2.1436, 476.6904: 2.0619, 478.6822: 1.9315,
                                480.0765: 1.8534, 481.7364: 1.7580, 481.4044: 1.7115, 484.7906: 1.5092,
                                486.7160: 1.4055, 488.9450: 1.2986, 491.9170: 1.2122, 496.0114: 1.1441,
                                506.3027: 1.0257, 513.6061: 0.9896, 520.9096: 0.9755, 528.2131: 1.0117,
                                535.5166: 1.0531, 542.8201: 1.0960, 549.2383: 1.0771, 557.4270: 1.0228,
                                564.7305: 0.9938, 569.7101: 0.9767, }
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry - characteristic curve
        red_curve = {"mid": {-3.0851: 0.2052, -2.9519: 0.2066, -2.8187: 0.2110, -2.6855: 0.2166, -2.5522: 0.2320,
                             -2.4190: 0.2633, -2.2858: 0.3101, -2.1526: 0.3730, -2.0193: 0.4556, -1.8861: 0.5424,
                             -1.7529: 0.6257, -1.6197: 0.7152, -1.4864: 0.8049, -1.3532: 0.8902, -1.2200: 0.9708,
                             -1.0868: 1.0551, -0.9535: 1.1477, -0.8203: 1.2368, -0.6871: 1.3288, -0.5539: 1.4296,
                             -0.4206: 1.5239, -0.2874: 1.6176, -0.1542: 1.7119, -0.0210: 1.8064, 0.1123: 1.8930,
                             0.2455: 1.9673, 0.3787: 2.0252, 0.5119: 2.0762, 0.6452: 2.1222, 0.7784: 2.1578,
                             0.8575: 2.1750, },
            "low": {-3.0806: 0.1375, -2.9474: 0.1434, -2.8143: 0.1492, -2.6811: 0.1546, -2.5480: 0.1688,
                    -2.4148: 0.1892, -2.2816: 0.2246, -2.1485: 0.2765, -2.0153: 0.3379, -1.8822: 0.4043,
                    -1.7490: 0.4708, -1.6158: 0.5351, -1.4827: 0.5960, -1.3495: 0.6518, -1.2163: 0.7076,
                    -1.0832: 0.7647, -0.9500: 0.8278, -0.8169: 0.8994, -0.6837: 0.9688, -0.5505: 1.0335,
                    -0.4174: 1.1031, -0.2842: 1.1756, -0.1511: 1.2497, -0.0179: 1.3320, 0.1153: 1.4130, 0.2484: 1.4876,
                    0.3816: 1.5488, 0.5147: 1.6048, 0.6479: 1.6569, 0.7811: 1.7006, 0.8601: 1.7232, },
            "high": {-3.0838: 0.2930, -2.9507: 0.2967, -2.7468: 0.2945, -2.4930: 0.3234, -2.3598: 0.3565,
                     -2.2267: 0.4173, -2.0935: 0.4955, -1.9604: 0.5823, -1.8272: 0.6714, -1.6940: 0.7636,
                     -1.5609: 0.8604, -1.4277: 0.9639, -1.2946: 1.0705, -1.1614: 1.1744, -1.0283: 1.2720,
                     -0.8993: 1.3702, -0.7786: 1.4742, -0.6663: 1.5778, -0.5539: 1.6824, -0.4291: 1.7899,
                     -0.2959: 1.8960, -0.1628: 1.9947, -0.0296: 2.0959, 0.1035: 2.1848, 0.2367: 2.2510, 0.3698: 2.3132,
                     0.5030: 2.3638, 0.6361: 2.3967, 0.7693: 2.4192, 0.8525: 2.4302, }}[contrast]
        green_curve = {"mid": {-3.0851: 0.2694, -2.9519: 0.2754, -2.8187: 0.2814, -2.6855: 0.2959, -2.5522: 0.3263,
                               -2.4190: 0.3802, -2.2858: 0.4479, -2.1526: 0.5251, -2.0193: 0.6057, -1.8861: 0.6977,
                               -1.7529: 0.7907, -1.6197: 0.8871, -1.4864: 0.9841, -1.3532: 1.0809, -1.2200: 1.1744,
                               -1.0868: 1.2674, -0.9535: 1.3638, -0.8203: 1.4656, -0.6871: 1.5722, -0.5539: 1.6752,
                               -0.4206: 1.7772, -0.2874: 1.8742, -0.1542: 1.9656, -0.0210: 2.0520, 0.1123: 2.1334,
                               0.2455: 2.2115, 0.3787: 2.2804, 0.5119: 2.3386, 0.6452: 2.3874, 0.7784: 2.4234,
                               0.8575: 2.4404, },
            "low": {-3.0806: 0.2450, -2.9474: 0.2440, -2.8143: 0.2485, -2.6811: 0.2556, -2.5480: 0.2821,
                    -2.4148: 0.3188, -2.2816: 0.3700, -2.1485: 0.4308, -2.0153: 0.4908, -1.8822: 0.5518,
                    -1.7490: 0.6164, -1.6158: 0.6799, -1.4827: 0.7430, -1.3495: 0.8055, -1.2163: 0.8646,
                    -1.0832: 0.9302, -0.9500: 1.0031, -0.8169: 1.0725, -0.6837: 1.1423, -0.5505: 1.2139,
                    -0.4174: 1.2849, -0.2842: 1.3614, -0.1511: 1.4447, -0.0179: 1.5259, 0.1153: 1.6007, 0.2484: 1.6688,
                    0.3816: 1.7350, 0.5147: 1.7966, 0.6479: 1.8510, 0.7811: 1.8962, 0.8601: 1.9209, },
            "high": {-3.0838: 0.2922, -2.8800: 0.2945, -2.6178: 0.3397, -2.4847: 0.3790, -2.3515: 0.4489,
                     -2.2183: 0.5436, -2.0852: 0.6379, -1.9520: 0.7410, -1.8230: 0.8418, -1.6940: 0.9466,
                     -1.5651: 1.0496, -1.4444: 1.1575, -1.3320: 1.2644, -1.2238: 1.3710, -1.1073: 1.4790,
                     -0.9825: 1.5807, -0.8618: 1.6895, -0.7453: 1.7975, -0.6247: 1.9020, -0.4957: 2.0060,
                     -0.3625: 2.1048, -0.2294: 2.2037, -0.0962: 2.2990, 0.0370: 2.3856, 0.1701: 2.4558, 0.3033: 2.5164,
                     0.4364: 2.5721, 0.5696: 2.6179, 0.7027: 2.6494, 0.8192: 2.6669, }}[contrast]
        blue_curve = {"mid": {-3.0851: 0.2694, -2.9519: 0.2754, -2.8187: 0.2814, -2.6855: 0.2959, -2.5522: 0.3263,
                              -2.4190: 0.3802, -2.2858: 0.4479, -2.1526: 0.5251, -2.0193: 0.6057, -1.8861: 0.6977,
                              -1.7529: 0.7907, -1.6197: 0.8871, -1.4864: 0.9841, -1.3532: 1.0809, -1.2200: 1.1744,
                              -1.0868: 1.2674, -0.9535: 1.3638, -0.8203: 1.4656, -0.6871: 1.5722, -0.5539: 1.6752,
                              -0.4206: 1.7772, -0.2874: 1.8742, -0.1542: 1.9656, -0.0210: 2.0520, 0.1123: 2.1334,
                              0.2455: 2.2115, 0.3787: 2.2804, 0.5119: 2.3386, 0.6452: 2.3874, 0.7784: 2.4234,
                              0.8575: 2.4404, },
            "low": {-3.0889: 0.2706, -3.0099: 0.2692, -2.8226: 0.2771, -2.6894: 0.2860, -2.5563: 0.3092,
                    -2.4231: 0.3539, -2.2900: 0.4068, -2.1568: 0.4655, -2.0236: 0.5408, -1.8905: 0.6199,
                    -1.7573: 0.6995, -1.6242: 0.7744, -1.4910: 0.8500, -1.3578: 0.9300, -1.2247: 1.0067,
                    -1.0915: 1.0848, -0.9583: 1.1641, -0.8252: 1.2391, -0.6920: 1.3147, -0.5589: 1.3936,
                    -0.4257: 1.4682, -0.2925: 1.5440, -0.1594: 1.6238, -0.0262: 1.6992, 0.1069: 1.7731, 0.2401: 1.8500,
                    0.3733: 1.9206, 0.5064: 1.9847, 0.6396: 2.0420, 0.7727: 2.0932, 0.8560: 2.1220, },
            "high": {-3.0922: 0.3218, -2.9507: 0.3280, -2.8175: 0.3430, -2.6844: 0.3700, -2.5512: 0.4077,
                     -2.4181: 0.4608, -2.2849: 0.5372, -2.1518: 0.6329, -2.0228: 0.7388, -1.9021: 0.8442,
                     -1.7898: 0.9488, -1.6816: 1.0528, -1.5734: 1.1589, -1.4652: 1.2634, -1.3528: 1.3700,
                     -1.2363: 1.4747, -1.1240: 1.5767, -1.0116: 1.6838, -0.8951: 1.7923, -0.7745: 1.8982,
                     -0.6455: 2.0020, -0.5123: 2.1009, -0.3792: 2.1983, -0.2460: 2.2915, -0.1128: 2.3802,
                     0.0203: 2.4660, 0.1535: 2.5522, 0.2866: 2.6300, 0.4198: 2.6923, 0.5529: 2.7416, 0.6861: 2.7784,
                     0.8109: 2.8029, }}[contrast]
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        midscale_sd = {407.8577: 1.1139, 416.0204: 1.1858, 423.0170: 1.2544, 431.1796: 1.3083, 440.5084: 1.3088,
                       449.8371: 1.2986, 459.1658: 1.2776, 468.4946: 1.2329, 477.8233: 1.1745, 487.1521: 1.1155,
                       496.4808: 1.1016, 505.8096: 1.1516, 515.1383: 1.2009, 524.4671: 1.2129, 533.7958: 1.2505,
                       543.1246: 1.2854, 552.4533: 1.2645, 560.6160: 1.2069, 567.0295: 1.1395, 572.5684: 1.0741,
                       577.5243: 1.0106, 582.1887: 0.9421, 586.5615: 0.8767, 591.2259: 0.8042, 598.5140: 0.7349,
                       607.8427: 0.7067, 617.1715: 0.7323, 626.2087: 0.7867, 634.3713: 0.8510, 641.9510: 0.9187,
                       649.5306: 0.9875, 657.1102: 1.0568, 664.9813: 1.1255, 673.7270: 1.1910, 683.0557: 1.2457,
                       692.3845: 1.2778, 701.7132: 1.2838, 711.0420: 1.2580, 720.0792: 1.2061, 727.9503: 1.1353,
                       734.3638: 1.0695, 739.9028: 1.0037, 745.1502: 0.9368, }
        minimum_sd = {406.1086: 0.4254, 415.4374: 0.4058, 424.7661: 0.3989, 434.0948: 0.3735, 443.4236: 0.3419,
                      452.7523: 0.3227, 462.0811: 0.3145, 471.4098: 0.3164, 480.7386: 0.3186, 490.0673: 0.3156,
                      499.3961: 0.3342, 508.7248: 0.3722, 518.0536: 0.3484, 527.3823: 0.2917, 536.7110: 0.2768,
                      546.0398: 0.2703, 555.3685: 0.2650, 564.6973: 0.2738, 574.0260: 0.2881, 583.3548: 0.2740,
                      592.6835: 0.2187, 602.0123: 0.1797, 611.3410: 0.1693, 620.6698: 0.1731, 629.9985: 0.1821,
                      639.3272: 0.1947, 648.6560: 0.2101, 657.9847: 0.2253, 667.3135: 0.2401, 676.6422: 0.2549,
                      685.9710: 0.2657, 695.2997: 0.2720, 704.6285: 0.2741, 713.9572: 0.2706, 723.2860: 0.2622,
                      732.6147: 0.2456, 741.9434: 0.2284, 747.1909: 0.2153, }
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)
        self.d_min_sd = colour.SpectralDistribution(minimum_sd)

        red_mtf = {3.2063: 0.6006, 3.6378: 0.6077, 4.3778: 0.6187, 4.7422: 0.6217, 8.0248: 0.6294, 9.1816: 0.6299,
                   10.7487: 0.6323, 12.0196: 0.6305, 13.7523: 0.6274, 15.7347: 0.6221, 18.0029: 0.6094, 21.1249: 0.5722,
                   23.5675: 0.5368, 27.4226: 0.4854, 30.3370: 0.4465, 36.3547: 0.3564, 40.5963: 0.3131, 46.0161: 0.2685,
                   51.3368: 0.2263, 54.9124: 0.1984, 59.4834: 0.1705, 65.5288: 0.1465, 73.4140: 0.1262, 81.9026: 0.1105,
                   93.8408: 0.0940}
        green_mtf = {3.2883: 0.6032, 3.6995: 0.6110, 4.3594: 0.6183, 6.3935: 0.6548, 7.3152: 0.6582, 8.3697: 0.6641,
                     9.6119: 0.6652, 10.8852: 0.6680, 12.5362: 0.6839, 14.3433: 0.6806, 16.4110: 0.6745,
                     18.3858: 0.6720, 21.8482: 0.6591, 24.9977: 0.6411, 28.6013: 0.6120, 32.7243: 0.5666,
                     36.8339: 0.5195, 42.8390: 0.4635, 48.2775: 0.4217, 56.0801: 0.3616, 62.8812: 0.3149,
                     71.2829: 0.2674, 81.2161: 0.2336, 92.9238: 0.2061, 100.2362: 0.2003}
        blue_mtf = {3.2883: 0.5683, 3.6995: 0.5712, 4.4148: 0.5762, 5.0677: 0.5795, 5.7793: 0.5819, 6.6125: 0.5819,
                    7.5657: 0.5819, 8.6563: 0.5819, 9.6301: 0.5823, 11.3319: 0.5839, 12.9654: 0.5780, 14.8345: 0.5666,
                    16.9729: 0.5527, 18.9798: 0.5393, 21.6651: 0.5189, 26.2925: 0.4655, 29.5806: 0.4292,
                    38.0772: 0.3707, 43.5662: 0.3323, 49.5775: 0.3003, 57.0321: 0.2683, 65.2536: 0.2403,
                    73.4140: 0.2161, 85.4228: 0.1798, 94.5013: 0.1593}
        self.mtf = [red_mtf, green_mtf, blue_mtf]
        self.mtf = [{a: b * 1.8 for a, b in x.items()} for x in self.mtf]

        # copied from kodak 5207
        red_rms = {0.0161: 0.0049, 0.1713: 0.0050, 0.3747: 0.0051, 0.5514: 0.0050, 0.7388: 0.0054, 0.9261: 0.0055,
                   1.0546: 0.0062, 1.1563: 0.0074, 1.2580: 0.0085, 1.3651: 0.0096, 1.4775: 0.0100, 1.5685: 0.0099,
                   1.7238: 0.0088, 1.8308: 0.0084, 1.9165: 0.0082, 2.0664: 0.0077, 2.2698: 0.0070, 2.3769: 0.0066,
                   2.5589: 0.0061, 2.9443: 0.0056, 3.3191: 0.0053, 3.4850: 0.0054, 3.6724: 0.0050, 3.8330: 0.0048,
                   4.0739: 0.0046, 4.2666: 0.0045, 4.4968: 0.0046, 4.6306: 0.0043, 4.8233: 0.0042, 5.0000: 0.0043}
        green_rms = {0.0000: 0.0051, 0.1392: 0.0056, 0.2730: 0.0059, 0.4711: 0.0057, 0.7334: 0.0055, 0.9315: 0.0063,
                     1.1510: 0.0079, 1.2794: 0.0089, 1.4186: 0.0103, 1.5418: 0.0107, 1.6435: 0.0103, 1.8201: 0.0092,
                     1.9486: 0.0080, 2.1734: 0.0074, 2.3448: 0.0068, 2.5321: 0.0062, 2.7730: 0.0063, 3.0835: 0.0065,
                     3.3779: 0.0069, 3.5278: 0.0071, 3.7420: 0.0066, 4.0739: 0.0061, 4.3148: 0.0058, 4.5343: 0.0053,
                     4.7430: 0.0051, 5.0054: 0.0046}
        blue_rms = {0.0000: 0.0112, 0.0857: 0.0114, 0.1606: 0.0123, 0.2409: 0.0126, 0.3158: 0.0123, 0.3961: 0.0118,
                    0.5139: 0.0115, 0.6531: 0.0116, 0.8030: 0.0125, 0.9315: 0.0140, 1.0493: 0.0154, 1.1938: 0.0165,
                    1.3169: 0.0164, 1.4507: 0.0156, 1.5578: 0.0155, 1.6863: 0.0157, 1.7934: 0.0153, 1.9245: 0.0140,
                    2.0610: 0.0129, 2.2645: 0.0124, 2.4732: 0.0127, 2.6552: 0.0128, 2.8747: 0.0135, 3.0246: 0.0138,
                    3.2976: 0.0133, 3.6403: 0.0121, 4.1649: 0.0101, 4.4700: 0.0088, 4.8073: 0.0069, 5.0054: 0.0060}
        red_rms_density = {0.0000: 0.2286, 0.7369: 0.2286, 1.0380: 0.2429, 1.2520: 0.2714, 1.4659: 0.3429,
                           1.7829: 0.4976, 3.7837: 1.5857, 4.0967: 1.7381, 4.4176: 1.8762, 4.7385: 1.9714,
                           5.0000: 2.0238}
        green_rms_density = {0.0079: 0.5952, 0.5784: 0.5952, 0.9509: 0.6048, 1.1648: 0.6333, 1.3312: 0.6714,
                             1.5610: 0.7762, 1.9810: 1.0524, 2.9160: 1.6429, 3.8629: 2.2500, 4.1125: 2.4000,
                             4.3502: 2.5190, 4.5761: 2.6071, 4.7425: 2.6524, 4.8732: 2.6810, 4.9960: 2.7000}
        blue_rms_density = {0.0000: 1.0071, 0.6418: 1.0119, 0.9350: 1.0310, 1.1648: 1.0810, 1.4342: 1.1762,
                            1.7868: 1.3452, 2.2464: 1.6452, 2.9279: 2.0452, 3.8788: 2.6119, 4.2353: 2.7881,
                            4.5840: 2.9190, 4.8732: 2.9929}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        # guessed value:
        self.rms = {"mid": 13, "low": 8.5, "high": 15.5}[contrast] * 0.575

        self.color_masking = 0

        self.calibrate()


class KodakAerocolorLow(KodakAerocolor):
    def __init__(self):
        super().__init__("low")


class KodakAerocolorHigh(KodakAerocolor):
    def __init__(self):
        super().__init__("high")
