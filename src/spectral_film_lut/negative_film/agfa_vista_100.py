from spectral_film_lut.film_spectral import *


class AgfaVista100(FilmSpectral):
    def __init__(self):
        super().__init__()

        self.iso = 100
        self.density_measure = 'status_m'

        # spectral sensitivity
        red_log_sensitivity = {395.4257: -0.8081, 407.4637: -0.7544, 415.4416: -0.8774, 418.5931: -0.9294,
                               514.6693: -0.8942, 518.4169: -0.8203, 527.9564: -0.6520, 534.0889: -0.5231,
                               543.7647: -0.4375, 550.7830: -0.3906, 554.8714: -0.2661, 558.2784: -0.1345,
                               561.3446: -0.0248, 564.4109: 0.0798, 568.4992: 0.2047, 572.2469: 0.3144,
                               574.9724: 0.4101, 578.0387: 0.5450, 585.1933: 0.7960, 588.9410: 0.9169, 592.0072: 1.0410,
                               594.3921: 1.1323, 596.7770: 1.2392, 603.2502: 1.4761, 606.9979: 1.5863, 613.8118: 1.7175,
                               624.4415: 1.6357, 631.1873: 1.5253, 638.6144: 1.4295, 646.8593: 1.3645, 649.9255: 1.2321,
                               651.9016: 1.0882, 653.9457: 0.8571, 655.0360: 0.6917, 656.3988: 0.5443, 658.1022: 0.3520,
                               660.3168: 0.1799, 662.5313: 0.0739, 663.8941: -0.0541, 665.5294: -0.1958,
                               666.6196: -0.3283, 667.9824: -0.4418, 668.6638: -0.5525, 670.2991: -0.6975,
                               671.7301: -0.8554, 672.7522: -0.9175, }
        green_log_sensitivity = {381.4572: 0.0813, 387.9304: 0.1875, 393.3816: 0.2963, 406.6687: 0.4070,
                                 414.8454: 0.2820, 421.3186: 0.1738, 428.8139: 0.0737, 440.0569: -0.0659,
                                 450.9592: -0.1337, 461.8614: -0.1198, 470.7195: -0.0499, 476.1707: 0.0819,
                                 479.5776: 0.2176, 481.9625: 0.3443, 484.3474: 0.4690, 486.7322: 0.5602,
                                 491.5020: 0.7857, 495.9310: 0.9000, 508.1961: 1.0788, 518.7576: 1.1645,
                                 526.5936: 1.2718, 531.3634: 1.3817, 535.1110: 1.5058, 538.5180: 1.6272,
                                 542.9470: 1.7405, 551.1237: 1.7914, 559.3004: 1.6638, 564.4109: 1.5459,
                                 568.4992: 1.4315, 571.5655: 1.3204, 573.9504: 1.1789, 575.5857: 1.0634,
                                 577.0166: 0.9233, 578.7201: 0.7943, 579.4015: 0.7068, 582.4678: 0.5338,
                                 583.4898: 0.4205, 584.8526: 0.2918, 586.2154: 0.1350, 587.4419: -0.0483,
                                 588.5321: -0.2006, 589.4520: -0.3269, 590.5763: -0.4658, 591.4962: -0.5902,
                                 592.6205: -0.7235, 593.5404: -0.8467, 594.3921: -0.9328, }
        blue_log_sensitivity = {378.7316: 0.7052, 381.7979: 0.8404, 385.2049: 0.9516, 388.9525: 1.0755,
                                392.7002: 1.2059, 396.1071: 1.3252, 408.1101: 1.5886, 418.7066: 1.5914,
                                429.3818: 1.5530, 439.6543: 1.5181, 451.3485: 1.5169, 460.1579: 1.6207,
                                465.7614: 1.7424, 471.2077: 1.8078, 475.6937: 1.6108, 477.4653: 1.4825,
                                478.8962: 1.3470, 480.2590: 1.2272, 481.9625: 1.0934, 483.5978: 0.9537,
                                486.0508: 0.8031, 491.1613: 0.5301, 493.5461: 0.4253, 495.5903: 0.3353,
                                497.6345: 0.2364, 503.0856: 0.0651, 506.8333: -0.0658, 510.2402: -0.1951,
                                512.6251: -0.3108, 514.6693: -0.4175, 516.7135: -0.5158, 519.0983: -0.6372,
                                521.1425: -0.7112, 523.8681: -0.8580, 526.2529: -0.9521, }
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry - characteristic curve
        red_curve = {-3.7189: 0.2423, -3.5029: 0.2385, -3.2907: 0.2396, -3.1022: 0.2423, -2.9142: 0.2439,
                     -2.7943: 0.2491, -2.5848: 0.2630, -2.3653: 0.2995, -2.1590: 0.3678, -1.8874: 0.5085,
                     -1.7131: 0.6151, -1.5321: 0.7296, -1.3580: 0.8442, -1.2021: 0.9478, -1.0112: 1.0741,
                     -0.8171: 1.1979, -0.6401: 1.3155, -0.4670: 1.4277, -0.2809: 1.5367, -0.1030: 1.6307,
                     0.1241: 1.7448, 0.3121: 1.8389, 0.5136: 1.9274, 0.7199: 2.0043, 0.9111: 2.0616, }
        green_curve = {-3.7811: 0.6163, -3.6436: 0.6163, -3.5061: 0.6163, -3.3686: 0.6163, -3.2311: 0.6163,
                       -3.0936: 0.6163, -2.9327: 0.6197, -2.8186: 0.6252, -2.6811: 0.6411, -2.5436: 0.6663,
                       -2.4061: 0.7002, -2.2686: 0.7451, -2.1311: 0.8020, -1.9970: 0.8686, -1.8690: 0.9398,
                       -1.6585: 1.0742, -1.5210: 1.1624, -1.3835: 1.2543, -1.2460: 1.3475, -1.1085: 1.4416,
                       -0.9877: 1.5264, -0.8335: 1.6327, -0.6960: 1.7219, -0.5585: 1.8038, -0.4210: 1.8799,
                       -0.2964: 1.9449, -0.0858: 2.0556, 0.1204: 2.1564, 0.2579: 2.2174, 0.3954: 2.2722, 0.5329: 2.3225,
                       0.6704: 2.3692, 0.8079: 2.4144, 0.9068: 2.4449, }
        blue_curve = {-3.6510: 0.8817, -3.5233: 0.8829, -3.3956: 0.8829, -3.2659: 0.8825, -3.1237: 0.8786,
                      -2.9604: 0.8798, -2.8100: 0.8897, -2.6553: 0.9142, -2.5049: 0.9491, -2.2378: 1.0494,
                      -2.1090: 1.1111, -1.9597: 1.2125, -1.8300: 1.3175, -1.6846: 1.4405, -1.5431: 1.5596,
                      -1.4016: 1.6793, -1.2619: 1.7929, -1.1207: 1.9049, -0.9881: 2.0019, -0.8397: 2.1106,
                      -0.6877: 2.2168, -0.5502: 2.3090, -0.4107: 2.4020, -0.2749: 2.4884, -0.1374: 2.5734,
                      -0.0013: 2.6562, 0.1413: 2.7380, 0.2751: 2.8073, 0.4098: 2.8664, 0.5444: 2.9252, 0.6661: 2.9744,
                      0.8910: 3.0374, 0.9712: 3.0542, }
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        midscale_sd = {384.3709: 1.9065, 387.7721: 1.7858, 390.4930: 1.6833, 393.2140: 1.5790, 396.2750: 1.4670,
                       402.3353: 1.3523, 412.6007: 1.3936, 419.6298: 1.5092, 427.1949: 1.6232, 436.6707: 1.7126,
                       447.6329: 1.7804, 458.2900: 1.7923, 469.1127: 1.7044, 478.6971: 1.5995, 487.9834: 1.4756,
                       497.9705: 1.3848, 509.5345: 1.3528, 521.7788: 1.3538, 534.3632: 1.3774, 547.0448: 1.3635,
                       557.6482: 1.2712, 565.1682: 1.1578, 571.3227: 1.0426, 578.1251: 0.9359, 585.3130: 0.8263,
                       594.6614: 0.7128, 605.9118: 0.6593, 616.1050: 0.6704, 626.7621: 0.7063, 637.7069: 0.7587,
                       648.3029: 0.8105, 658.9600: 0.8532, 669.0502: 0.8928, 680.9543: 0.9115, 693.1986: 0.9059,
                       705.1027: 0.8712, 716.3267: 0.8128, 727.8645: 0.7387, 738.9053: 0.6596, 746.2571: 0.6078, }
        minimum_sd = {380.2895: 1.6724, 384.3709: 1.5432, 388.1122: 1.4321, 391.1732: 1.3176, 393.8942: 1.1929,
                      396.9553: 1.0740, 401.3768: 0.9504, 409.5397: 0.8807, 420.4235: 0.9008, 431.3072: 0.9317,
                      442.1910: 0.9460, 453.0748: 0.9339, 463.9586: 0.9072, 474.8424: 0.8717, 485.7262: 0.8335,
                      496.6100: 0.7953, 507.4938: 0.7611, 518.3776: 0.7318, 529.2614: 0.7058, 540.1452: 0.6641,
                      551.0290: 0.6362, 561.9128: 0.6253, 572.7966: 0.5885, 582.6600: 0.4974, 591.8432: 0.3853,
                      602.0468: 0.3007, 612.9306: 0.2706, 623.8144: 0.2635, 634.6982: 0.2663, 645.5820: 0.2761,
                      656.4658: 0.2870, 667.3496: 0.2874, 678.2334: 0.2810, 689.1172: 0.2735, 700.0010: 0.2684,
                      710.8848: 0.2603, 721.7686: 0.2464, 732.6523: 0.2298, 742.1757: 0.2122, }
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)
        self.d_min_sd = colour.SpectralDistribution(minimum_sd)

        self.mtf = [{2.3330: 1.0876, 2.6796: 1.0943, 3.0777: 1.0993, 3.5350: 1.1032, 4.0603: 1.1050, 4.6635: 1.1050,
                     5.3564: 1.1048, 6.1523: 1.0976, 7.0664: 1.0873, 8.1163: 1.0736, 9.3222: 1.0552, 10.7072: 1.0351,
                     12.2981: 1.0086, 14.1253: 0.9896, 16.2240: 0.9642, 18.6346: 0.9314, 21.4033: 0.8943,
                     24.5833: 0.8418, 28.2359: 0.7825, 32.4311: 0.7183, 37.2497: 0.6544, 42.7842: 0.5898,
                     49.1410: 0.5253, 55.7026: 0.4636, 61.9030: 0.4047, 67.6685: 0.3504, 72.7611: 0.3047,
                     77.2115: 0.2644, 79.8006: 0.2423, }]

        # copied from kodak 5207
        red_rms = {0.0161: 0.0049, 0.1713: 0.0050, 0.3747: 0.0051, 0.5514: 0.0050, 0.7388: 0.0054, 0.9261: 0.0055,
                   1.0546: 0.0062, 1.1563: 0.0074, 1.2580: 0.0085, 1.3651: 0.0096, 1.4775: 0.0100, 1.5685: 0.0099,
                   1.7238: 0.0088, 1.8308: 0.0084, 1.9165: 0.0082, 2.0664: 0.0077, 2.2698: 0.0070, 2.3769: 0.0066,
                   2.5589: 0.0061, 2.9443: 0.0056, 3.3191: 0.0053, 3.4850: 0.0054, 3.6724: 0.0050, 3.8330: 0.0048,
                   4.0739: 0.0046, 4.2666: 0.0045, 4.4968: 0.0046, 4.6306: 0.0043, 4.8233: 0.0042, 5.0000: 0.0043}
        green_rms = {0.0000: 0.0051, 0.1392: 0.0056, 0.2730: 0.0059, 0.4711: 0.0057, 0.7334: 0.0055, 0.9315: 0.0063,
                     1.1510: 0.0079, 1.2794: 0.0089, 1.4186: 0.0103, 1.5418: 0.0107, 1.6435: 0.0103, 1.8201: 0.0092,
                     1.9486: 0.0080, 2.1734: 0.0074, 2.3448: 0.0068, 2.5321: 0.0062, 2.7730: 0.0063, 3.0835: 0.0065,
                     3.3779: 0.0069, 3.5278: 0.0071, 3.7420: 0.0066, 4.0739: 0.0061, 4.3148: 0.0058, 4.5343: 0.0053,
                     4.7430: 0.0051, 5.0054: 0.0046}
        blue_rms = {0.0000: 0.0112, 0.0857: 0.0114, 0.1606: 0.0123, 0.2409: 0.0126, 0.3158: 0.0123, 0.3961: 0.0118,
                    0.5139: 0.0115, 0.6531: 0.0116, 0.8030: 0.0125, 0.9315: 0.0140, 1.0493: 0.0154, 1.1938: 0.0165,
                    1.3169: 0.0164, 1.4507: 0.0156, 1.5578: 0.0155, 1.6863: 0.0157, 1.7934: 0.0153, 1.9245: 0.0140,
                    2.0610: 0.0129, 2.2645: 0.0124, 2.4732: 0.0127, 2.6552: 0.0128, 2.8747: 0.0135, 3.0246: 0.0138,
                    3.2976: 0.0133, 3.6403: 0.0121, 4.1649: 0.0101, 4.4700: 0.0088, 4.8073: 0.0069, 5.0054: 0.0060}
        red_rms_density = {0.0000: 0.2286, 0.7369: 0.2286, 1.0380: 0.2429, 1.2520: 0.2714, 1.4659: 0.3429,
                           1.7829: 0.4976, 3.7837: 1.5857, 4.0967: 1.7381, 4.4176: 1.8762, 4.7385: 1.9714,
                           5.0000: 2.0238}
        green_rms_density = {0.0079: 0.5952, 0.5784: 0.5952, 0.9509: 0.6048, 1.1648: 0.6333, 1.3312: 0.6714,
                             1.5610: 0.7762, 1.9810: 1.0524, 2.9160: 1.6429, 3.8629: 2.2500, 4.1125: 2.4000,
                             4.3502: 2.5190, 4.5761: 2.6071, 4.7425: 2.6524, 4.8732: 2.6810, 4.9960: 2.7000}
        blue_rms_density = {0.0000: 1.0071, 0.6418: 1.0119, 0.9350: 1.0310, 1.1648: 1.0810, 1.4342: 1.1762,
                            1.7868: 1.3452, 2.2464: 1.6452, 2.9279: 2.0452, 3.8788: 2.6119, 4.2353: 2.7881,
                            4.5840: 2.9190, 4.8732: 2.9929}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        self.rms = 4

        self.calibrate()
