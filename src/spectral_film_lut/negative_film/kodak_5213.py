from spectral_film_lut.film_spectral import *


class Kodak5213(FilmSpectral):
    def __init__(self):
        super().__init__()

        self.iso = 200
        self.density_measure = 'status_m'
        self.exposure_kelvin = 3200

        # spectral sensitivity
        red_log_sensitivity = {559.9786: 0.3296, 564.5939: 0.4107, 567.2313: 0.4706, 569.8686: 0.5482, 574.0443: 0.7491,
                               581.5167: 1.1994, 588.6595: 1.5334, 591.1869: 1.6197, 597.6703: 1.7422, 605.9120: 1.8929,
                               612.3954: 2.0004, 617.5601: 2.0621, 621.5161: 2.0938, 628.9885: 2.1203, 636.3511: 2.1617,
                               642.3949: 2.1811, 647.2300: 2.1864, 653.1640: 2.1467, 657.3397: 2.0868, 660.1968: 2.0128,
                               666.3506: 1.6673, 674.5922: 1.0099, 677.3394: 0.7455, 679.7570: 0.5464}
        green_log_sensitivity = {479.9799: 0.9588, 486.5732: 1.3395, 490.9687: 1.5739, 498.2213: 1.8224,
                                 501.9575: 1.9088, 508.4410: 1.9881, 514.5947: 2.0736, 520.0891: 2.1370,
                                 527.0121: 2.1890, 530.7483: 2.2313, 537.5614: 2.3300, 543.2756: 2.4181,
                                 547.4513: 2.4692, 550.4183: 2.4772, 553.6051: 2.4587, 558.4402: 2.4023,
                                 564.5939: 2.3370, 569.9785: 2.2665, 574.2641: 2.1996, 578.1102: 2.1167,
                                 580.7475: 2.0092, 584.8134: 1.7431, 590.7474: 1.2091, 594.4836: 0.8231,
                                 597.2308: 0.5341, 599.7582: 0.2785}
        blue_log_sensitivity = {380.4210: 2.3265, 387.2341: 2.4481, 392.9483: 2.5538, 397.0141: 2.6446,
                                399.7613: 2.6807, 402.1789: 2.6913, 405.4755: 2.6825, 408.1129: 2.6719,
                                411.4095: 2.6772, 416.6841: 2.7142, 426.2444: 2.7803, 434.8157: 2.8402,
                                438.0025: 2.8587, 440.8596: 2.8587, 442.8376: 2.8429, 447.8925: 2.7918,
                                449.7606: 2.7794, 451.9583: 2.7715, 456.2440: 2.7741, 460.8593: 2.7829,
                                462.5076: 2.7944, 465.6944: 2.8252, 468.1119: 2.8305, 470.5295: 2.8059,
                                476.2437: 2.6684, 481.7381: 2.4075, 486.1336: 2.0533, 489.6500: 1.7907,
                                494.4851: 1.5369, 499.2103: 1.3342, 504.3751: 1.1668, 508.6607: 1.0364,
                                511.4079: 0.9147, 515.0343: 0.7350, 517.7815: 0.5746, 519.6496: 0.4688}
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry - characteristic curve
        red_curve = {-3.6794: 0.1795, -3.4338: 0.1824, -3.2068: 0.1897, -2.9937: 0.1998, -2.8547: 0.2085,
                     -2.7342: 0.2302, -2.5906: 0.2650, -2.4469: 0.3156, -2.2176: 0.4097, -1.8493: 0.5878,
                     -1.3929: 0.8079, -0.7280: 1.1250, -0.1628: 1.3929, 0.1708: 1.5434, 0.4233: 1.6404, 0.6110: 1.7027,
                     0.8287: 1.7650, 0.9677: 1.7968, 1.0975: 1.8214}
        green_curve = {-3.6747: 0.5806, -3.4431: 0.5864, -3.2207: 0.5936, -3.0354: 0.6009, -2.8825: 0.6081,
                       -2.7713: 0.6240, -2.6647: 0.6515, -2.4979: 0.7066, -2.3404: 0.7775, -2.0438: 0.9324,
                       -1.6106: 1.1815, -1.0384: 1.5000, -0.5937: 1.7461, -0.2323: 1.9488, 0.1175: 2.1400,
                       0.3932: 2.2761, 0.5832: 2.3586, 0.7361: 2.4165, 0.8612: 2.4599, 0.9909: 2.4976, 1.1044: 2.5251}
        blue_curve = {-3.6562: 0.8485, -3.4060: 0.8514, -3.1743: 0.8600, -2.9659: 0.8716, -2.8454: 0.8832,
                      -2.6925: 0.9151, -2.5489: 0.9556, -2.3774: 1.0222, -2.2014: 1.1091, -2.0276: 1.2003,
                      -1.7427: 1.3552, -1.4462: 1.5174, -1.1937: 1.6491, -0.8994: 1.8069, -0.5311: 2.0024,
                      -0.0840: 2.2413, 0.2264: 2.4035, 0.4720: 2.5106, 0.6851: 2.5903, 0.8612: 2.6467, 0.9979: 2.6829,
                      1.1091: 2.7090}
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        red_sd = {400.1940: 0.2185, 421.6401: 0.1280, 439.5118: 0.0719, 472.1916: 0.0349, 497.9779: 0.0375,
                  516.6156: 0.0496, 534.1044: 0.0808, 553.5080: 0.1458, 576.6136: 0.2421, 593.4641: 0.3785,
                  609.0380: 0.5302, 624.4843: 0.6781, 636.1009: 0.7763, 647.3346: 0.8592, 657.1640: 0.9204,
                  666.2275: 0.9644, 674.6528: 0.9930, 680.7802: 1.0026, 687.4183: 1.0007, 696.0989: 0.9816,
                  704.0135: 0.9459, 713.8429: 0.8764, 731.9700: 0.7055, 747.5439: 0.5309, 759.2882: 0.4104,
                  772.4367: 0.2931, 780.6066: 0.2293, 792.6062: 0.1580, 800.2655: 0.1242}
        green_sd = {400.9600: 0.0050, 416.2786: 0.0145, 426.1080: 0.0330, 430.3207: 0.0368, 436.7034: 0.0241,
                    442.0650: 0.0177, 450.3625: 0.0247, 460.5750: 0.0744, 476.5319: 0.2166, 495.6801: 0.4984,
                    507.6797: 0.6909, 516.1050: 0.8158, 523.2537: 0.9025, 527.8493: 0.9510, 532.5725: 0.9848,
                    537.5511: 1.0026, 541.1254: 0.9994, 545.9763: 0.9720, 551.8484: 0.9153, 560.0184: 0.7878,
                    576.3583: 0.4856, 584.2729: 0.3594, 593.4641: 0.2497, 604.1871: 0.1707, 616.8250: 0.1114,
                    629.2075: 0.0776, 649.1217: 0.0502, 678.2271: 0.0311, 705.2900: 0.0260, 754.3096: 0.0203,
                    783.4150: 0.0132, 800.0102: 0.0069}
        blue_sd = {399.9387: 0.4958, 410.2788: 0.6507, 419.2147: 0.7859, 424.0656: 0.8522, 430.0654: 0.9242,
                   436.1928: 0.9714, 440.7884: 0.9930, 444.3627: 1.0032, 448.1924: 1.0032, 453.8092: 0.9854,
                   459.1708: 0.9446, 467.0854: 0.8451, 476.7872: 0.6832, 488.5315: 0.4843, 495.0419: 0.3811,
                   504.3607: 0.2574, 514.0625: 0.1643, 522.8707: 0.1076, 535.2533: 0.0591, 551.8484: 0.0285,
                   570.4861: 0.0113, 601.1234: 0.0037, 647.0792: -0.0001, 710.9069: 0.0011, 748.4375: 0.0050,
                   778.8194: 0.0024}
        midscale_sd = {400.1838: 1.1053, 409.7682: 1.2429, 417.0445: 1.3589, 422.5337: 1.4437, 427.6399: 1.5056,
                       430.9589: 1.5394, 435.2992: 1.5687, 439.5118: 1.5859, 444.8734: 1.5923, 451.7667: 1.5782,
                       456.3623: 1.5502, 463.8940: 1.5132, 473.4681: 1.4686, 479.3403: 1.4418, 482.6593: 1.4125,
                       486.4890: 1.3679, 492.1058: 1.3290, 496.9567: 1.3156, 502.3182: 1.3315, 506.5308: 1.3634,
                       510.9988: 1.3857, 515.8497: 1.3844, 522.7431: 1.3768, 529.8917: 1.3704, 537.0404: 1.3768,
                       542.6573: 1.3666, 552.4867: 1.3118, 562.9545: 1.1996, 572.0180: 1.0810, 579.1667: 0.9867,
                       584.9112: 0.8898, 589.8897: 0.8094, 595.8895: 0.7419, 600.8681: 0.7036, 606.4849: 0.6934,
                       612.9953: 0.7055, 617.4632: 0.7310, 622.3141: 0.7508, 629.9734: 0.7686, 635.3350: 0.7725,
                       640.4412: 0.7788, 648.3558: 0.8075, 659.8448: 0.8471, 671.8444: 0.8783, 682.5674: 0.8898,
                       691.7586: 0.8821, 703.2475: 0.8502, 714.7365: 0.7910, 724.5660: 0.7247, 735.7996: 0.6303,
                       757.6287: 0.4384, 773.5856: 0.3218, 785.3299: 0.2491, 794.9040: 0.2013}
        minimum_sd = {400.4493: 0.6042, 408.0874: 0.6568, 412.0234: 0.6913, 421.4912: 0.7651, 426.8102: 0.7917,
                      431.3845: 0.8135, 436.0652: 0.8369, 440.7458: 0.8496, 445.6393: 0.8496, 452.6603: 0.8358,
                      457.1283: 0.8145, 461.5962: 0.8007, 470.7448: 0.7991, 478.1914: 0.7922, 480.5317: 0.7827,
                      484.5741: 0.7529, 488.1910: 0.7200, 494.1483: 0.6860, 499.2545: 0.6732, 501.1693: 0.6722,
                      505.8500: 0.6860, 510.2116: 0.6897, 514.0412: 0.6738, 519.0411: 0.6398, 525.6366: 0.5946,
                      529.4662: 0.5702, 536.4873: 0.5553, 545.6359: 0.5468, 559.2525: 0.5436, 567.9756: 0.5426,
                      577.0178: 0.5176, 581.3794: 0.4894, 585.8473: 0.4342, 592.2301: 0.3471, 595.9533: 0.3009,
                      605.1020: 0.2366, 614.3570: 0.2228, 618.6121: 0.2249, 625.8459: 0.2164, 634.9946: 0.1888,
                      639.4625: 0.1750, 653.2918: 0.1627, 673.2911: 0.1611, 700.5242: 0.1553, 716.6939: 0.1500,
                      735.6294: 0.1367, 754.5650: 0.1192, 773.2877: 0.1022, 789.0319: 0.0884}
        self.spectral_density = [colour.SpectralDistribution(x) for x in (red_sd, green_sd, blue_sd)]
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)
        self.d_min_sd = colour.SpectralDistribution(minimum_sd)

        self.mtf = [{2.4773: 1.0338, 3.9182: 1.0153, 4.9857: 1.0111, 5.9933: 1.0167, 7.2771: 1.0281, 8.4315: 1.0055,
                     9.7365: 0.9727, 11.6260: 0.9917, 13.7896: 1.0083, 15.0936: 0.9972, 16.6875: 0.9754,
                     18.7612: 0.9126, 22.3272: 0.8283, 26.6602: 0.7455, 30.1743: 0.6655, 32.5886: 0.6057,
                     46.7766: 0.3709, 62.7949: 0.2503, 79.6367: 0.1830},
                    {2.5275: 1.0167, 3.4735: 1.0224, 5.0868: 1.0338, 7.1803: 1.0717, 10.3064: 1.0836, 14.9929: 1.0897,
                     17.1117: 1.0732, 19.1417: 1.0482, 23.0871: 0.9862, 28.0796: 0.9038, 31.7808: 0.8340,
                     36.3329: 0.7404, 44.0421: 0.6158, 53.7456: 0.5136, 68.5034: 0.4155, 79.5035: 0.3653},
                    {2.5275: 1.0167, 3.4735: 1.0224, 5.0868: 1.0338, 7.1803: 1.0717, 10.3064: 1.0836, 14.9929: 1.0897,
                     17.1117: 1.0732, 19.1417: 1.0482, 23.0871: 0.9862, 28.0796: 0.9038, 31.7808: 0.8340,
                     36.3329: 0.7404, 44.0421: 0.6158, 53.7456: 0.5136, 68.5034: 0.4155, 79.5035: 0.3653}]

        red_rms = {0.0083: 0.0030, 0.3164: 0.0030, 0.5287: 0.0030, 0.7202: 0.0032, 0.9242: 0.0037, 1.0866: 0.0048,
                   1.2614: 0.0067, 1.3988: 0.0084, 1.5196: 0.0094, 1.6486: 0.0094, 1.8193: 0.0082, 1.9067: 0.0074,
                   1.9900: 0.0067, 2.1399: 0.0065, 2.3272: 0.0062, 2.5437: 0.0056, 2.7519: 0.0051, 3.0475: 0.0052,
                   3.3847: 0.0053, 3.6928: 0.0053, 3.9092: 0.0051, 4.3381: 0.0047, 4.5920: 0.0045, 4.9042: 0.0045,
                   5.0042: 0.0044}
        green_rms = {0.0062: 0.0032, 0.2748: 0.0032, 0.5037: 0.0033, 0.6703: 0.0033, 0.8285: 0.0036, 1.0366: 0.0046,
                     1.2323: 0.0064, 1.3780: 0.0083, 1.4613: 0.0096, 1.5529: 0.0100, 1.6819: 0.0094, 1.8110: 0.0085,
                     1.9734: 0.0078, 2.0899: 0.0078, 2.2148: 0.0079, 2.3480: 0.0075, 2.5062: 0.0067, 2.6436: 0.0063,
                     2.7227: 0.0061, 2.9184: 0.0064, 3.0974: 0.0066, 3.4055: 0.0067, 3.6636: 0.0065, 3.9092: 0.0060,
                     4.0175: 0.0058, 4.2256: 0.0058, 4.3797: 0.0054, 4.5545: 0.0050, 4.7960: 0.0048, 4.9958: 0.0046}
        blue_rms = {0.0000: 0.0109, 0.2123: 0.0119, 0.3539: 0.0119, 0.5204: 0.0114, 0.7327: 0.0120, 0.9409: 0.0141,
                    1.1699: 0.0180, 1.3572: 0.0214, 1.4738: 0.0226, 1.5841: 0.0216, 1.7007: 0.0193, 1.8651: 0.0170,
                    2.1232: 0.0151, 2.4188: 0.0147, 2.7227: 0.0151, 2.9559: 0.0158, 3.2723: 0.0158, 3.4888: 0.0162,
                    3.8301: 0.0153, 4.2132: 0.0140, 4.5795: 0.0130, 4.8210: 0.0125, 4.9979: 0.0122}
        red_rms_density = {0.0062: 0.2026, 0.4557: 0.2001, 0.8843: 0.2013, 1.1049: 0.2126, 1.2838: 0.2376,
                           1.4544: 0.2951, 1.7104: 0.4439, 2.3117: 0.7728, 3.0191: 1.1480, 3.3666: 1.3293,
                           3.7661: 1.5544, 4.1157: 1.7470, 4.3362: 1.8495, 4.6088: 1.9483, 4.8127: 2.0083,
                           4.9938: 2.0509}
        green_rms_density = {0.0104: 0.6128, 0.4390: 0.6153, 0.9010: 0.6215, 1.0799: 0.6290, 1.2339: 0.6478,
                             1.3754: 0.6878, 1.4711: 0.7253, 1.5710: 0.7816, 1.8851: 0.9917, 2.2867: 1.2380,
                             2.6841: 1.4694, 3.0108: 1.6682, 3.3146: 1.8558, 3.5393: 2.0258, 3.8951: 2.2347,
                             4.2052: 2.4123, 4.3799: 2.4973, 4.5963: 2.5748, 4.7836: 2.6223, 4.9043: 2.6461,
                             4.9938: 2.6661}
        blue_rms_density = {0.0104: 0.9004, 0.2851: 0.9054, 0.6055: 0.9054, 0.8718: 0.9179, 1.1257: 0.9479,
                            1.2817: 0.9867, 1.4211: 1.0479, 1.6355: 1.1692, 1.9122: 1.3318, 2.3242: 1.5757,
                            2.8277: 1.8683, 3.1960: 2.0571, 3.4290: 2.2072, 3.8431: 2.4498, 4.2114: 2.6524,
                            4.4632: 2.7687, 4.6921: 2.8549, 4.8585: 2.9125, 4.9875: 2.9512}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        # computed rms of 4.17

        self.calibrate()
