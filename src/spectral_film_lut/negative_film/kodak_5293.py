from spectral_film_lut.film_spectral import *


class Kodak5293(FilmSpectral):
    def __init__(self):
        super().__init__()

        self.iso = 250
        self.density_measure = 'status_m'
        self.exposure_kelvin = 3200
        self.year = 1982
        self.manufacturer = 'Kodak'
        self.stage = 'camera'
        self.type = 'negative'
        self.medium = 'cine'
        self.alias = 'EASTMAN EXR 200T Film 5293/7293'

        # spectral sensitivity
        red_log_sensitivity = {525.8391: -0.2687, 532.8983: -0.1782, 548.5650: -0.0141, 557.1673: 0.1065,
                               568.6389: 0.2506, 577.0047: 0.5119, 582.4968: 0.7901, 591.0776: 1.1051, 598.5687: 1.2860,
                               607.3901: 1.4234, 618.4272: 1.5004, 635.6523: 1.5556, 643.1676: 1.5170, 649.1378: 1.4667,
                               657.7716: 1.3024, 665.3171: 0.9907, 670.4259: 0.7393, 674.2180: 0.4075, 675.5794: 0.0824,
                               680.4858: -0.3366, 687.5931: -0.6818, 696.2439: -1.0003}
        green_log_sensitivity = {450.6520: 0.4255, 474.7010: 0.7019, 491.2471: 0.9045, 507.5750: 1.0821,
                                 519.9177: 1.3401, 526.5266: 1.5076, 534.9031: 1.6718, 540.1969: 1.7455,
                                 546.3806: 1.7622, 555.2164: 1.7689, 565.8236: 1.7386, 577.7573: 1.6984,
                                 581.7460: 1.5877, 585.7631: 1.2190, 590.6758: 0.7431, 598.5018: -0.1082,
                                 602.2910: -0.4132, 610.7272: -0.7886, 616.4904: -0.9646}
        blue_log_sensitivity = {370.9762: 1.7565, 382.0027: 1.9307, 393.9197: 2.0412, 410.2540: 2.1618,
                                416.4374: 2.1819, 425.7220: 2.1248, 439.8712: 2.0276, 450.9283: 1.9236,
                                460.6533: 1.8800, 472.1564: 1.7392, 485.8765: 1.5263, 496.5105: 1.2531,
                                514.0282: 0.6597, 525.7951: 0.1301, 533.8001: -0.3425, 538.6928: -0.6374,
                                543.5918: -0.9893}
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry - characteristic curve
        red_curve = {0.0053: 0.1617, 0.1028: 0.1590, 0.1978: 0.1663, 0.3178: 0.1837, 0.4654: 0.2162, 0.5929: 0.2538,
                     0.7230: 0.3002, 0.8581: 0.3567, 1.0182: 0.4334, 1.2009: 0.5277, 1.4011: 0.6511, 1.6213: 0.7920,
                     1.8165: 0.9078, 2.0342: 1.0248, 2.2582: 1.1405, 2.4646: 1.2360, 2.6497: 1.3139, 2.7398: 1.3503,
                     2.8173: 1.3804}
        green_curve = {0.0059: 0.5510, 0.0859: 0.5419, 0.1609: 0.5430, 0.2634: 0.5503, 0.3760: 0.5702, 0.4760: 0.5953,
                       0.5761: 0.6279, 0.6886: 0.6731, 0.8150: 0.7296, 0.9439: 0.7963, 1.1215: 0.8994, 1.3318: 1.0392,
                       1.5520: 1.1890, 1.7335: 1.3162, 1.9475: 1.4610, 2.1226: 1.5742, 2.3078: 1.6926, 2.4743: 1.7907,
                       2.5831: 1.8473, 2.6582: 1.8838, 2.7307: 1.9177, 2.7945: 1.9453, 2.8596: 1.9667}
        blue_curve = {0.0091: 0.9629, 0.0766: 0.9640, 0.1616: 0.9714, 0.2567: 0.9812, 0.3567: 1.0012, 0.4817: 1.0312,
                      0.6593: 1.0876, 0.8833: 1.1856, 1.0722: 1.2774, 1.2686: 1.3894, 1.4575: 1.5127, 1.7103: 1.6890,
                      1.9106: 1.8225, 2.0795: 1.9345, 2.2184: 2.0188, 2.3560: 2.1044, 2.4561: 2.1598, 2.5412: 2.2050,
                      2.6325: 2.2490, 2.7013: 2.2779, 2.7801: 2.3081, 2.8452: 2.3294}
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype) - 3.35
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype) - 3.35
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype) - 3.35
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        red_sd = {362.0374: 0.1576, 368.3500: 0.2042, 379.1868: 0.2294, 393.7847: 0.2124, 406.6109: 0.1712,
                  424.9659: 0.1017, 437.7882: 0.0502, 451.1203: 0.0151, 471.2626: 0.0111, 510.2910: 0.0100,
                  535.7267: 0.0207, 550.4716: 0.0596, 563.8388: 0.1176, 574.0634: 0.1883, 580.6278: 0.2349,
                  595.0344: 0.3781, 600.3495: 0.4506, 606.7987: 0.5256, 615.6468: 0.6187, 623.7363: 0.7033,
                  632.1980: 0.7732, 643.8133: 0.8595, 654.5376: 0.9199, 669.7942: 0.9804, 679.6229: 1.0030,
                  693.7191: 0.9911, 705.5336: 0.9379, 714.6992: 0.8717, 725.8721: 0.7866, 734.7798: 0.7041,
                  743.8137: 0.6224, 754.2250: 0.5209, 765.3875: 0.4082, 778.6896: 0.2939, 790.8706: 0.2113,
                  799.6651: 0.1624}
        green_sd = {361.0296: 0.1559, 381.6495: 0.0830, 404.2904: 0.0273, 424.6796: 0.0104, 447.3390: 0.0039,
                    458.0487: 0.0256, 467.7579: 0.0653, 477.7294: 0.1326, 486.0704: 0.2163, 492.9035: 0.3077,
                    498.2251: 0.3974, 502.4130: 0.4853, 509.0144: 0.6301, 517.8808: 0.7715, 523.7028: 0.8525,
                    530.2795: 0.9319, 535.5839: 0.9759, 542.8955: 1.0010, 550.6981: 0.9925, 558.1105: 0.9512,
                    569.8973: 0.8248, 574.6473: 0.7344, 580.6359: 0.5898, 587.7666: 0.4693, 598.7935: 0.3308,
                    606.3237: 0.2681, 624.1625: 0.1650, 655.6059: 0.0819, 689.3348: 0.0496, 711.2345: 0.0319,
                    733.6385: 0.0158, 751.7642: 0.0058, 762.5897: 0.0008}
        blue_sd = {360.8571: 0.3661, 365.7536: 0.3300, 371.4090: 0.3033, 376.9460: 0.2965, 382.8695: 0.3130,
                   393.1032: 0.4079, 403.3512: 0.5407, 411.3264: 0.6562, 417.9116: 0.7579, 423.7343: 0.8407,
                   429.1772: 0.9183, 434.3557: 0.9623, 440.9142: 0.9934, 447.9695: 1.0065, 456.1449: 0.9850,
                   465.3053: 0.9051, 480.0926: 0.7227, 490.9886: 0.5713, 504.6466: 0.3992, 519.9671: 0.2952,
                   540.8417: 0.2300, 569.0209: 0.1710, 596.1837: 0.0879, 616.5636: 0.0460, 644.2518: 0.0205,
                   665.9021: 0.0088}
        self.spectral_density = [colour.SpectralDistribution(x) for x in (red_sd, green_sd, blue_sd)]

        self.mtf = [{2.5169: 1.1164, 3.8776: 1.0740, 6.5367: 1.0546, 10.2234: 1.0052, 14.6123: 0.9404, 21.6103: 0.8260,
                     30.5088: 0.6550, 41.1812: 0.4986, 48.6258: 0.4157, 56.3525: 0.3408, 69.9071: 0.2547,
                     80.1243: 0.2001, 88.0918: 0.1668}]

        # copied from kodak exr 5248
        red_rms = {0.0081: 0.0074, 0.5625: 0.0078, 1.2141: 0.0083, 1.4852: 0.0084, 1.9061: 0.0075, 2.2541: 0.0065,
                   2.7357: 0.0054, 3.1364: 0.0047, 3.6301: 0.0044, 4.0753: 0.0044, 4.5326: 0.0044, 4.9939: 0.0044}
        green_rms = {0.0121: 0.0086, 0.6151: 0.0093, 1.0643: 0.0103, 1.3395: 0.0115, 1.4852: 0.0117, 1.7159: 0.0104,
                     1.9547: 0.0083, 2.1773: 0.0068, 2.4444: 0.0061, 2.6993: 0.0061, 3.0554: 0.0065, 3.3144: 0.0063,
                     3.6463: 0.0060, 4.0550: 0.0059, 4.5245: 0.0059, 4.9980: 0.0063}
        blue_rms = {0.0202: 0.0111, 0.3399: 0.0091, 0.5868: 0.0094, 0.7770: 0.0113, 1.0279: 0.0157, 1.2546: 0.0190,
                    1.5217: 0.0201, 1.8495: 0.0180, 2.1327: 0.0153, 2.4605: 0.0134, 2.7398: 0.0130, 3.0231: 0.0129,
                    3.2821: 0.0122, 3.5208: 0.0115, 3.9417: 0.0113, 4.5892: 0.0112, 4.9960: 0.0112}
        red_rms_density = {0.0182: 0.2203, 0.4518: 0.2284, 0.7840: 0.2382, 0.9542: 0.2495, 1.1933: 0.2835,
                           1.5904: 0.3791, 2.4048: 0.6221, 3.4704: 0.9332, 4.1917: 1.1373, 5.0041: 1.3625}
        green_rms_density = {0.0122: 0.6237, 0.5166: 0.6189, 0.9988: 0.6529, 1.4972: 0.7647, 2.0199: 0.9883,
                             3.5069: 1.5326, 4.0174: 1.7173, 4.4854: 1.8566, 5.0020: 2.0608}
        blue_rms_density = {0.0162: 1.0239, 0.6179: 1.0304, 0.9947: 1.0595, 1.3169: 1.1260, 1.7545: 1.2847,
                            2.7087: 1.6671, 3.6244: 2.0381, 4.4246: 2.3248, 5.0000: 2.5095}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        # read from curve
        self.rms = 5.5

        self.calibrate()
