from spectral_film_lut.film_spectral import *


class KodakEktar100(FilmSpectral):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.iso = 100
        self.density_measure = 'status_m'
        self.exposure_kelvin = 5500
        self.projection_kelvin = None

        # spectral sensitivity
        self.red_log_sensitivity = {554.7585: 0.1914, 559.3798: 0.2841, 562.2572: 0.3312, 565.1347: 0.3588,
                                    569.3200: 0.3485, 572.5462: 0.4793, 581.1785: 1.1263, 586.3230: 1.4135,
                                    590.5955: 1.5207, 596.4376: 1.6176, 603.4132: 1.7304, 606.8138: 1.7595,
                                    610.6504: 1.7657, 614.9229: 1.7588, 626.5198: 1.8107, 631.3155: 1.8418,
                                    635.8497: 1.9062, 645.2667: 1.9940, 648.6673: 2.0397, 653.0270: 2.0536,
                                    656.4276: 2.0231, 663.9264: 1.8183, 667.8502: 1.5795, 681.8013: 1.0017,
                                    687.9922: 0.8045, 692.5263: 0.4966, 694.9677: 0.2993}
        self.green_log_sensitivity = {394.9304: 0.8391, 399.6389: 0.9346, 404.4346: 0.9692, 408.8815: 0.9567,
                                      415.8571: 0.9118, 419.9553: 0.8599, 427.1925: 0.7976, 432.2498: 0.7491,
                                      437.1327: 0.6813, 443.0619: 0.6190, 450.2991: 0.6149, 455.5308: 0.6073,
                                      464.6862: 0.6107, 468.6100: 0.6038, 473.4057: 0.6523, 478.5502: 0.7893,
                                      485.9618: 1.1007, 493.8965: 1.2854, 501.7440: 1.3941, 510.5507: 1.4612,
                                      518.2238: 1.5436, 527.8153: 1.6716, 535.8372: 1.7553, 540.5457: 1.7927,
                                      544.2079: 1.8356, 549.7012: 1.8217, 555.5432: 1.7754, 559.7286: 1.7788,
                                      564.2627: 1.7539, 567.2273: 1.7076, 570.8895: 1.6570, 574.2029: 1.6418,
                                      578.0395: 1.5138, 582.4864: 1.1643, 587.0206: 0.6869, 590.0724: 0.3768}
        self.blue_log_sensitivity = {379.5841: 1.0931, 385.3389: 1.3235, 390.1347: 1.5622, 394.4944: 1.7802,
                                     399.0285: 1.9207, 403.3883: 2.0072, 406.4401: 2.0383, 410.7998: 2.0459,
                                     415.8571: 2.0293, 419.0833: 2.0100, 423.7047: 2.0224, 430.6803: 2.0432,
                                     435.9119: 2.0639, 438.8766: 2.0840, 442.5387: 2.0681, 447.7704: 2.0266,
                                     453.5253: 2.0176, 460.8497: 2.0702, 465.5582: 2.1193, 468.3484: 2.1491,
                                     471.6618: 2.1401, 474.8880: 2.0895, 476.8935: 1.9864, 483.6075: 1.4619,
                                     489.2752: 0.8529, 494.8556: 0.3561}

        # sensiometry - characteristic curve
        red_curve = {-2.8373: 0.2103, -2.4238: 0.2250, -2.2808: 0.2364, -2.1225: 0.2634, -2.0214: 0.2911,
                     -1.9285: 0.3246, -1.7478: 0.4087, -1.4946: 0.5386, -0.9646: 0.8546, -0.3407: 1.2091,
                     0.3057: 1.5545, 0.8366: 1.8052, 1.1593: 1.9343}
        green_curve = {-2.8383: 0.6366, -2.4258: 0.6431, -2.2553: 0.6611, -2.1072: 0.6905, -1.9735: 0.7313,
                       -1.7805: 0.8252, -1.3414: 1.0866, -0.5194: 1.5643, 0.1035: 1.9073, 0.7049: 2.2029,
                       1.1532: 2.4104}
        blue_curve = {-2.8353: 0.8473, -2.7250: 0.8612, -2.6229: 0.8710, -2.5003: 0.8702, -2.3676: 0.8832,
                      -2.1909: 0.9249, -1.9683: 1.0384, -1.7845: 1.1552, -1.5558: 1.2989, -1.4721: 1.3650,
                      -1.3853: 1.4238, -1.0851: 1.6182, -0.5449: 1.9726, -0.0997: 2.2756, 0.3332: 2.5394,
                      0.7733: 2.7991, 1.1583: 3.0670}
        self.red_log_exposure = np.array(list(red_curve.keys()))
        self.red_density_curve = np.array(list(red_curve.values()))
        self.green_log_exposure = np.array(list(green_curve.keys()))
        self.green_density_curve = np.array(list(green_curve.values()))
        self.blue_log_exposure = np.array(list(blue_curve.keys()))
        self.blue_density_curve = np.array(list(blue_curve.values()))

        self.exposure_base = 10

        # spectral dye density
        midscale_spectral_density = {400.3221: 1.4313, 407.0508: 1.5034, 415.7838: 1.6835, 423.8010: 1.8623,
                                     430.1002: 1.9821, 434.4667: 2.0322, 439.9069: 2.0733, 445.1324: 2.0924,
                                     450.0716: 2.0918, 456.5140: 2.0668, 462.2405: 2.0203, 468.6113: 1.9428,
                                     476.9864: 1.8092, 485.7910: 1.6775, 491.0165: 1.6119, 495.9556: 1.5785,
                                     502.4696: 1.5726, 505.9771: 1.5857, 512.8490: 1.5940, 520.0072: 1.6012,
                                     529.6707: 1.6036, 535.3973: 1.6095, 540.7659: 1.6203, 545.5619: 1.6054,
                                     551.5032: 1.5654, 561.2384: 1.4516, 572.9778: 1.2602, 582.1403: 1.0802,
                                     589.5848: 0.9395, 596.3851: 0.8501, 603.1854: 0.8024, 610.5583: 0.7940,
                                     617.2870: 0.8137, 627.7380: 0.8787, 643.3429: 1.0092, 660.0931: 1.1547,
                                     674.2663: 1.2542, 684.8604: 1.3168}
        minimum_spectral_density = {400.3221: 0.7326, 404.4590: 0.7110, 408.7153: 0.7173, 414.9120: 0.7590,
                                    425.4275: 0.8319, 433.1263: 0.8601, 440.6374: 0.8653, 450.9651: 0.8491,
                                    464.4225: 0.8027, 481.1346: 0.7386, 491.3371: 0.7016, 497.2834: 0.6896,
                                    502.6038: 0.6964, 508.5500: 0.7084, 514.8092: 0.7001, 519.1907: 0.6818,
                                    524.5111: 0.6505, 532.6480: 0.6250, 541.4110: 0.6130, 551.4257: 0.5974,
                                    562.6923: 0.5937, 572.7071: 0.5755, 580.8441: 0.5160, 589.9200: 0.3993,
                                    599.4966: 0.2883, 609.6366: 0.2278, 628.4142: 0.2017, 643.4364: 0.2106,
                                    660.0234: 0.2283, 677.2362: 0.2476, 684.7473: 0.2512}

        self.red_mtf = {2.5128: 1.0790, 4.5284: 1.1262, 7.2251: 1.1403, 9.6834: 1.1461, 13.7449: 1.0981,
                        18.2949: 1.0093, 24.2673: 0.8067, 30.3233: 0.6162, 38.2405: 0.4556, 47.0215: 0.3260,
                        61.0957: 0.2096, 79.7478: 0.1486}
        self.green_mtf = {2.4975: 1.0844, 4.0224: 1.1218, 6.4784: 1.1635, 7.9660: 1.1857, 9.6279: 1.2053,
                          11.9069: 1.1842, 15.5064: 1.1504, 18.8494: 1.1247, 22.2390: 1.0402, 28.3368: 0.8591,
                          34.6442: 0.7518, 46.2185: 0.5823, 58.8236: 0.4443, 69.2426: 0.3454, 80.0230: 0.2692}
        self.blue_mtf = {2.5090: 1.0601, 3.6067: 1.0601, 5.1489: 1.0654, 7.1017: 1.0694, 8.7828: 1.0844,
                         10.8618: 1.0816, 14.5573: 1.0389, 20.4272: 0.9609, 24.4912: 0.8689, 27.8529: 0.7798,
                         33.0888: 0.6998, 44.0928: 0.5949, 51.7835: 0.5332, 57.4220: 0.4803, 68.5306: 0.4283,
                         79.7478: 0.3922}

        # copied from kodak 5207
        self.red_rms = {0.0161: 0.0049, 0.1713: 0.0050, 0.3747: 0.0051, 0.5514: 0.0050, 0.7388: 0.0054, 0.9261: 0.0055,
                        1.0546: 0.0062, 1.1563: 0.0074, 1.2580: 0.0085, 1.3651: 0.0096, 1.4775: 0.0100, 1.5685: 0.0099,
                        1.7238: 0.0088, 1.8308: 0.0084, 1.9165: 0.0082, 2.0664: 0.0077, 2.2698: 0.0070, 2.3769: 0.0066,
                        2.5589: 0.0061, 2.9443: 0.0056, 3.3191: 0.0053, 3.4850: 0.0054, 3.6724: 0.0050, 3.8330: 0.0048,
                        4.0739: 0.0046, 4.2666: 0.0045, 4.4968: 0.0046, 4.6306: 0.0043, 4.8233: 0.0042, 5.0000: 0.0043}
        self.green_rms = {0.0000: 0.0051, 0.1392: 0.0056, 0.2730: 0.0059, 0.4711: 0.0057, 0.7334: 0.0055,
                          0.9315: 0.0063, 1.1510: 0.0079, 1.2794: 0.0089, 1.4186: 0.0103, 1.5418: 0.0107,
                          1.6435: 0.0103, 1.8201: 0.0092, 1.9486: 0.0080, 2.1734: 0.0074, 2.3448: 0.0068,
                          2.5321: 0.0062, 2.7730: 0.0063, 3.0835: 0.0065, 3.3779: 0.0069, 3.5278: 0.0071,
                          3.7420: 0.0066, 4.0739: 0.0061, 4.3148: 0.0058, 4.5343: 0.0053, 4.7430: 0.0051,
                          5.0054: 0.0046}
        self.blue_rms = {0.0000: 0.0112, 0.0857: 0.0114, 0.1606: 0.0123, 0.2409: 0.0126, 0.3158: 0.0123, 0.3961: 0.0118,
                         0.5139: 0.0115, 0.6531: 0.0116, 0.8030: 0.0125, 0.9315: 0.0140, 1.0493: 0.0154, 1.1938: 0.0165,
                         1.3169: 0.0164, 1.4507: 0.0156, 1.5578: 0.0155, 1.6863: 0.0157, 1.7934: 0.0153, 1.9245: 0.0140,
                         2.0610: 0.0129, 2.2645: 0.0124, 2.4732: 0.0127, 2.6552: 0.0128, 2.8747: 0.0135, 3.0246: 0.0138,
                         3.2976: 0.0133, 3.6403: 0.0121, 4.1649: 0.0101, 4.4700: 0.0088, 4.8073: 0.0069, 5.0054: 0.0060}
        self.red_rms_density = {0.0000: 0.2286, 0.7369: 0.2286, 1.0380: 0.2429, 1.2520: 0.2714, 1.4659: 0.3429,
                                1.7829: 0.4976, 3.7837: 1.5857, 4.0967: 1.7381, 4.4176: 1.8762, 4.7385: 1.9714,
                                5.0000: 2.0238}
        self.green_rms_density = {0.0079: 0.5952, 0.5784: 0.5952, 0.9509: 0.6048, 1.1648: 0.6333, 1.3312: 0.6714,
                                  1.5610: 0.7762, 1.9810: 1.0524, 2.9160: 1.6429, 3.8629: 2.2500, 4.1125: 2.4000,
                                  4.3502: 2.5190, 4.5761: 2.6071, 4.7425: 2.6524, 4.8732: 2.6810, 4.9960: 2.7000}
        self.blue_rms_density = {0.0000: 1.0071, 0.6418: 1.0119, 0.9350: 1.0310, 1.1648: 1.0810, 1.4342: 1.1762,
                                 1.7868: 1.3452, 2.2464: 1.6452, 2.9279: 2.0452, 3.8788: 2.6119, 4.2353: 2.7881,
                                 4.5840: 2.9190, 4.8732: 2.9929}
        # guessed value:
        self.rms = 4

        self.d_ref_sd = colour.SpectralDistribution(midscale_spectral_density)
        self.d_min_sd = colour.SpectralDistribution(minimum_spectral_density)

        self.calibrate()
