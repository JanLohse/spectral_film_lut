from spectral_film_lut.film_spectral import *


class Kodak5384(FilmSpectral):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.lad = [1.08, 1.04, 1.03]
        self.density_measure = 'status_a'
        self.exposure_kelvin = 2854
        self.projection_kelvin = 6500

        # spectral sensitivity
        red_log_sensitivity = {354.5344: -0.9133, 361.2592: -1.0027, 371.4311: -1.0373, 386.4388: -1.0976,
                               400.6495: -1.2384, 420.0954: -1.5064, 428.6481: -1.7314, 434.1496: -2.1170,
                               444.7820: -2.4670, 462.6645: -2.8598, 488.1769: -3.1347, 514.8028: -3.2424,
                               536.6811: -3.2207, 566.0038: -3.0133, 598.8995: -2.6030, 616.5878: -2.3673,
                               629.8324: -2.2158, 653.2614: -2.0842, 678.8853: -1.9421, 693.8102: -1.8141,
                               711.3834: -1.7138, 728.8935: -1.6876, 743.8778: -1.7754, 757.0415: -2.0050,
                               772.0474: -2.3531, 784.9538: -2.5996, 794.0354: -2.7738, 800.8034: -2.8124}
        green_log_sensitivity = {353.7644: -0.1048, 359.4962: -0.2195, 364.2601: -0.3299, 382.6571: -0.4032,
                                 401.0237: -0.5125, 413.2554: -0.6954, 423.9454: -0.9776, 439.5611: -1.4655,
                                 444.8180: -1.5675, 452.5467: -1.6188, 459.8400: -1.6109, 469.1519: -1.5142,
                                 499.5163: -1.2244, 524.4871: -0.9934, 548.7204: -0.7729, 563.6417: -0.6491,
                                 574.8606: -0.5949, 584.0897: -0.5956, 592.2898: -0.6639, 598.8779: -0.9141,
                                 605.6261: -1.2617, 619.7217: -2.1093, 630.8830: -2.6942, 637.9101: -2.9995,
                                 641.1808: -3.1521, 649.3125: -3.3008, 658.4841: -3.3692}
        blue_log_sensitivity = {355.2360: 0.4835, 362.4430: 0.3898, 367.7106: 0.3005, 377.9220: 0.3125,
                                386.1149: 0.2357, 393.3039: 0.1209, 405.9189: 0.1031, 417.1486: 0.1700,
                                434.3115: 0.3592, 447.5561: 0.5106, 458.3468: 0.6326, 464.2333: 0.6999,
                                468.6554: 0.7588, 473.0235: 0.7543, 476.8627: 0.6990, 480.6407: 0.5717,
                                487.2216: 0.3130, 495.1626: -0.0600, 503.7387: -0.5432, 513.6748: -1.1407,
                                520.5688: -1.6026, 532.5469: -2.3696, 541.8984: -2.7978, 562.0333: -3.1125,
                                581.8247: -3.2600, 608.4633: -3.3529, 626.8783: -3.4050, 647.6970: -3.4870,
                                660.2579: -3.5683}
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry
        red_curve = {0.0793: 0.1008, 0.6773: 0.0948, 0.9156: 0.0924, 1.0329: 0.1155, 1.1786: 0.1627, 1.2900: 0.2123,
                     1.3954: 0.2924, 1.4808: 0.3868, 1.5581: 0.4915, 1.6131: 0.5924, 1.6662: 0.6973, 1.7398: 0.8710,
                     1.8177: 1.0934, 1.9550: 1.4774, 2.0433: 1.7645, 2.1215: 2.0436, 2.2099: 2.3510, 2.2900: 2.6220,
                     2.3701: 2.8768, 2.4541: 3.1072, 2.5299: 3.3052, 2.6136: 3.4950, 2.6728: 3.6121, 2.7482: 3.7371,
                     2.8316: 3.8457, 2.8987: 3.9282, 2.9880: 4.0085, 3.0690: 4.0644}
        green_curve = {0.0753: 0.0968, 0.5238: 0.1004, 0.8995: 0.0966, 1.0127: 0.1157, 1.1180: 0.1552, 1.2071: 0.2030,
                       1.2680: 0.2511, 1.3451: 0.3274, 1.4041: 0.3978, 1.4468: 0.4602, 1.5201: 0.5771, 1.5773: 0.6982,
                       1.6428: 0.8720, 1.7330: 1.1348, 1.8398: 1.4704, 1.9364: 1.8102, 2.0372: 2.1581, 2.1362: 2.5587,
                       2.2187: 2.8946, 2.2972: 3.2386, 2.3777: 3.5826, 2.4499: 3.8740, 2.5361: 4.1408, 2.6078: 4.3470,
                       2.6712: 4.5005, 2.7467: 4.6499, 2.8404: 4.7990, 2.9258: 4.9036, 2.9826: 4.9517, 3.0252: 4.9797}
        blue_curve = {0.0753: 0.0968, 0.4228: 0.1014, 0.6450: 0.1134, 0.7987: 0.1422, 0.9789: 0.2154, 1.1168: 0.3297,
                      1.2083: 0.4342, 1.2897: 0.5510, 1.3794: 0.7063, 1.4733: 0.9021, 1.6207: 1.2982, 1.7605: 1.7633,
                      1.8755: 2.1475, 1.9741: 2.4711, 2.0422: 2.7503, 2.1678: 3.2115, 2.2478: 3.4561, 2.3253: 3.6034,
                      2.4028: 3.7466, 2.5044: 3.8673, 2.5958: 3.9577, 2.7053: 4.0418, 2.8228: 4.1034, 2.9320: 4.1388,
                      3.0291: 4.1602}
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)  # - 0.4
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)  # - 0.3
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)  # - 0.1
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        self.exposure_base = 10

        # spectral dye density
        midscale_sd = {359.8039: 0.7147, 366.2516: 0.6651, 374.9857: 0.6485, 381.8919: 0.6616, 388.9556: 0.6940,
                       398.0271: 0.7795, 409.7694: 0.9141, 424.2183: 1.0863, 430.9299: 1.1626, 437.0380: 1.2235,
                       441.2759: 1.2572, 445.5893: 1.2663, 452.9813: 1.2626, 461.2813: 1.2460, 469.1709: 1.2217,
                       477.9606: 1.1870, 484.7749: 1.1594, 491.1193: 1.1434, 501.1200: 1.1384, 512.3794: 1.1478,
                       520.5681: 1.1673, 527.9005: 1.1830, 537.0051: 1.1871, 545.3130: 1.1679, 549.7814: 1.1267,
                       560.9641: 1.0197, 570.4103: 0.9127, 577.1644: 0.8341, 582.5288: 0.7839, 588.6601: 0.7666,
                       598.4358: 0.7642, 607.6920: 0.7896, 616.2434: 0.8325, 627.0990: 0.9025, 634.1150: 0.9504,
                       642.6703: 0.9920, 648.2663: 1.0076, 658.2233: 1.0169, 668.6660: 1.0094, 676.8005: 0.9760,
                       685.8986: 0.9116, 706.8426: 0.7364, 725.2374: 0.5431, 737.8813: 0.3845}
        red_sd = {359.2346: 0.2645, 365.2686: 0.2788, 375.6836: 0.2804, 383.1391: 0.2560, 392.8328: 0.2097,
                  405.6090: 0.1493, 423.1526: 0.0916, 437.5760: 0.0603, 465.4491: 0.0319, 489.7520: 0.0351,
                  504.0323: 0.0503, 519.5634: 0.0823, 536.3670: 0.1240, 546.6708: 0.1617, 556.0904: 0.2046,
                  573.5796: 0.3057, 589.2607: 0.4301, 607.7425: 0.6320, 617.8436: 0.7356, 626.0746: 0.8120,
                  632.6248: 0.8703, 637.2730: 0.9117, 644.1078: 0.9481, 650.9782: 0.9728, 660.0551: 0.9859,
                  671.3621: 0.9797, 680.3530: 0.9502, 687.0137: 0.9019, 703.9334: 0.7648, 721.6293: 0.5869,
                  733.3614: 0.4425, 737.8932: 0.3807}
        green_sd = {360.6629: 0.0824, 374.1405: 0.0762, 389.5261: 0.0850, 406.5765: 0.1170, 415.1795: 0.1431,
                    429.3904: 0.1809, 436.0279: 0.2108, 440.5385: 0.2264, 447.5123: 0.2175, 454.8804: 0.2215,
                    462.6350: 0.2411, 469.2249: 0.2865, 480.8177: 0.3991, 489.5569: 0.5220, 499.9532: 0.6708,
                    507.0075: 0.7769, 512.8191: 0.8636, 518.7181: 0.9219, 525.0988: 0.9646, 529.7947: 0.9906,
                    535.3946: 1.0049, 543.2286: 0.9986, 548.1073: 0.9652, 554.3995: 0.8956, 564.5644: 0.7666,
                    575.0537: 0.6028, 586.2974: 0.4055, 592.6650: 0.3113, 598.2941: 0.2456, 606.5160: 0.1838,
                    615.5824: 0.1297, 629.8661: 0.0733, 639.9383: 0.0451, 653.4517: 0.0273, 676.9260: 0.0175,
                    693.0004: 0.0140, 706.4781: 0.0079, 722.1025: 0.0096, 730.7889: 0.0085, 738.6150: 0.0048}
        blue_sd = {359.7295: 0.3859, 364.1819: 0.3498, 370.7851: 0.3203, 378.5596: 0.3334, 386.1196: 0.4162,
                   399.2701: 0.5871, 413.9043: 0.7695, 425.0629: 0.8822, 433.5269: 0.9534, 438.8601: 0.9839,
                   444.2389: 0.9995, 449.8686: 1.0042, 455.9980: 0.9875, 461.7488: 0.9528, 468.9251: 0.8781,
                   478.0087: 0.7478, 489.6548: 0.5608, 499.0389: 0.4034, 513.1004: 0.2074, 529.9704: 0.0864,
                   549.2743: 0.0210, 574.0650: 0.0067, 621.8283: 0.0046, 664.8103: 0.0043, 737.3087: 0.0060}
        self.spectral_density = [colour.SpectralDistribution(x) for x in (red_sd, green_sd, blue_sd)]
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)

        self.calibrate()

