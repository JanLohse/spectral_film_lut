from spectral_film_lut.film_spectral import *


class Kodak2383(FilmSpectral):
    def __init__(self):
        super().__init__()

        self.lad = [1.09, 1.06, 1.03]
        self.density_measure = 'status_a'
        self.exposure_kelvin = 3200
        self.manufacturer = 'Kodak'
        self.stage = 'print'
        self.type = 'negative'
        self.medium = 'cine'
        self.year = 1998
        self.alias = 'VISION Color Print Film 2383/3383'

        # spectral sensitivity
        red_log_sensitivity = {583.6181: -3.0050, 587.4146: -2.5975, 588.8383: -2.4818, 591.2111: -2.4365,
                               594.5330: -2.3912, 599.2787: -2.3711, 604.4989: -2.2956, 614.1800: -2.1316,
                               624.4305: -1.9484, 629.6507: -1.8629, 638.6674: -1.7874, 647.6841: -1.7723,
                               656.7008: -1.7019, 666.6667: -1.4956, 675.2088: -1.3094, 684.4153: -1.1454,
                               689.9203: -1.0931, 693.7168: -1.0830, 700.3607: -1.1384, 707.4791: -1.3497,
                               713.2688: -1.5479, 717.4450: -1.7371, 722.1906: -2.1296, 725.9871: -2.5623,
                               727.8853: -2.8189, 729.7836: -2.9950}

        green_log_sensitivity = {448.8421: -2.9950, 449.3166: -1.7572, 451.6894: -1.6969, 458.1435: -1.6264,
                                 463.4586: -1.5499, 470.5771: -1.4392, 477.9803: -1.3517, 485.5733: -1.1937,
                                 492.9765: -1.0730, 504.3660: -0.9623, 510.2506: -0.9260, 516.7046: -0.9119,
                                 521.9248: -0.9099, 529.5178: -0.8465, 538.5345: -0.6302, 542.3311: -0.4692,
                                 544.7039: -0.3082, 546.6021: -0.2025, 549.4495: -0.1723, 552.2969: -0.2679,
                                 556.7578: -0.5255, 558.1815: -0.6453, 564.4457: -0.9824, 569.1913: -1.2289,
                                 576.0251: -1.5862, 581.2453: -1.8679, 584.0926: -2.0843, 586.4655: -2.4616,
                                 588.5535: -2.7384, 589.7874: -2.9950}

        blue_log_sensitivity = {360.5733: 0.0340, 370.0645: -0.0164, 377.6576: -0.0818, 385.7251: -0.1874,
                                391.8945: -0.2780, 398.0638: -0.3535, 400.4366: -0.3585, 406.6059: -0.3082,
                                411.3516: -0.2579, 416.5718: -0.1824, 421.7920: -0.0969, 425.1139: -0.0063,
                                428.9104: 0.0591, 433.6560: 0.1195, 439.8254: 0.1748, 445.9947: 0.2956,
                                451.2149: 0.4013, 455.9605: 0.5220, 460.2316: 0.5975, 468.2043: 0.6347,
                                473.0448: 0.4616, 481.5869: -0.0969, 489.6545: -0.9673, 500.5695: -2.0239,
                                509.8709: -2.9970}
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        red_curve = {-0.7036: 0.0523, -0.2759: 0.0565, -0.1875: 0.0619, -0.1094: 0.0698, -0.0338: 0.0812,
                     0.0429: 0.0984, 0.1196: 0.1233, 0.1962: 0.1512, 0.2729: 0.1922, 0.3496: 0.2451, 0.4263: 0.3154,
                     0.4993: 0.4040, 0.5628: 0.5020, 0.6186: 0.5957, 0.6581: 0.6917, 0.6928: 0.7908, 0.7239: 0.8890,
                     0.7515: 0.9873, 0.7802: 1.0878, 0.8043: 1.1877, 0.8296: 1.2841, 0.8535: 1.3832, 0.8774: 1.4796,
                     0.9028: 1.5811, 0.9268: 1.6838, 0.9507: 1.7851, 0.9754: 1.8873, 0.9968: 1.9870, 1.0160: 2.0906,
                     1.0292: 2.1967, 1.0511: 2.2941, 1.0730: 2.3907, 1.0949: 2.4865, 1.1186: 2.5876, 1.1442: 2.6936,
                     1.1697: 2.7972, 1.1953: 2.8963, 1.2209: 2.9932, 1.2483: 3.0913, 1.2775: 3.1909, 1.3085: 3.2901,
                     1.3414: 3.3885, 1.3760: 3.4852, 1.4161: 3.5822, 1.4581: 3.6767, 1.5091: 3.7662, 1.5674: 3.8577,
                     1.6385: 3.9474, 1.7152: 4.0183, 1.7919: 4.0652, 1.8686: 4.0952, 1.9453: 4.1128, 2.0219: 4.1229,
                     2.0986: 4.1301, 2.1753: 4.1337, 2.2502: 4.1367, }
        green_curve = {-0.6655: 0.0519, -0.5888: 0.0555, -0.5121: 0.0567, -0.4355: 0.0609, -0.3588: 0.0645,
                       -0.2821: 0.0689, -0.2054: 0.0744, -0.1287: 0.0819, -0.0521: 0.0929, 0.0246: 0.1095,
                       0.1013: 0.1352, 0.1780: 0.1735, 0.2547: 0.2271, 0.3313: 0.3002, 0.4044: 0.3902, 0.4664: 0.4851,
                       0.5176: 0.5775, 0.5748: 0.6771, 0.6148: 0.7733, 0.6523: 0.8706, 0.6855: 0.9695, 0.7166: 1.0663,
                       0.7458: 1.1626, 0.7734: 1.2611, 0.8024: 1.3641, 0.8298: 1.4685, 0.8553: 1.5684, 0.8809: 1.6711,
                       0.9064: 1.7764, 0.9320: 1.8841, 0.9576: 1.9929, 0.9830: 2.0981, 1.0052: 2.2001, 1.0306: 2.3055,
                       1.0561: 2.4138, 1.0817: 2.5210, 1.1073: 2.6255, 1.1328: 2.7274, 1.1600: 2.8296, 1.1858: 2.9292,
                       1.2116: 3.0251, 1.2405: 3.1227, 1.2713: 3.2222, 1.3026: 3.3213, 1.3359: 3.4190, 1.3752: 3.5213,
                       1.4078: 3.6164, 1.4523: 3.7244, 1.5016: 3.8207, 1.5600: 3.9171, 1.6312: 4.0103, 1.7079: 4.0844,
                       1.7846: 4.1367, 1.8613: 4.1704, 1.9380: 4.1898, 2.0146: 4.1993, 2.0913: 4.2036, 2.1680: 4.2054,
                       2.2447: 4.2080, }
        blue_curve = {-0.6937: 0.0600, -0.5494: 0.0646, -0.3705: 0.0676, -0.1746: 0.0858, -0.1053: 0.0956,
                      -0.0286: 0.1124, 0.0481: 0.1366, 0.1248: 0.1699, 0.2015: 0.2153, 0.2781: 0.2755, 0.3548: 0.3539,
                      0.4260: 0.4470, 0.4967: 0.5404, 0.5277: 0.5962, 0.6844: 0.9830, 0.8134: 1.4233, 0.9300: 1.8919,
                      0.9510: 1.9837, 0.9729: 2.0807, 0.9948: 2.1785, 1.0150: 2.2778, 1.0991: 2.6703, 1.1415: 2.8706,
                      1.1632: 2.9685, 1.1858: 3.0730, 1.2132: 3.1729, 1.2438: 3.2766, 1.2752: 3.3768, 1.3099: 3.4742,
                      1.3391: 3.5747, 1.3811: 3.6712, 1.4338: 3.7604, 1.4760: 3.8252, 1.6225: 3.9756, 1.7882: 4.0763,
                      1.8613: 4.1036, 1.9446: 4.1226, 2.0183: 4.1351, 2.0950: 4.1430, 2.1716: 4.1454, 2.2483: 4.1487, }
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        red_sd = {349.1999: 0.2560, 356.9782: 0.2550, 366.8778: 0.2688, 378.5452: 0.2866, 385.8285: 0.2945,
                  393.6775: 0.2929, 400.8193: 0.2837, 406.4763: 0.2639, 411.7796: 0.2382, 419.2044: 0.1977,
                  428.0433: 0.1463, 438.2965: 0.1028, 450.6710: 0.0643, 463.0456: 0.0406, 477.8950: 0.0307,
                  493.8051: 0.0303, 525.2718: 0.0613, 512.1901: 0.0396, 539.7676: 0.1097, 554.2635: 0.1799,
                  572.6485: 0.3212, 589.9729: 0.5030, 601.9231: 0.6483, 617.1968: 0.8271, 629.3592: 0.9517,
                  637.4911: 1.0109, 645.4815: 1.0574, 652.5526: 1.0793, 658.2096: 1.0870, 666.5535: 1.0833,
                  674.5439: 1.0613, 681.5444: 1.0228, 694.5553: 0.9230, 702.6872: 0.8410, 710.5361: 0.7511,
                  720.0822: 0.6364, 727.2241: 0.5534, 734.5074: 0.4704, 742.0735: 0.3904, 749.3568: 0.3281}
        green_sd = {349.5534: 0.0791, 361.2209: 0.0564, 373.2418: 0.0396, 386.6770: 0.0425, 404.0014: 0.0663,
                    416.8709: 0.0769, 422.0328: 0.0831, 427.4069: 0.0943, 430.5182: 0.0947, 436.5287: 0.0761,
                    444.6605: 0.0682, 458.8029: 0.1038, 471.5309: 0.1769, 482.8448: 0.2797, 495.5729: 0.4566,
                    501.6541: 0.5404, 508.6545: 0.6473, 516.1500: 0.7202, 525.2718: 0.8064, 531.2822: 0.8499,
                    537.9291: 0.8758, 543.3032: 0.8775, 551.8593: 0.8422, 559.3547: 0.7708, 569.8201: 0.6117,
                    585.0231: 0.3647, 596.6905: 0.2283, 608.0043: 0.1453, 616.1362: 0.1028, 627.0965: 0.0718,
                    644.4208: 0.0416, 666.2707: 0.0238, 682.2515: 0.0169, 710.5361: 0.0121}
        blue_sd = {349.5534: 0.2688, 358.6752: 0.2352, 365.4636: 0.2056, 370.0598: 0.1898, 377.4845: 0.1987,
                   384.9092: 0.2372, 393.7482: 0.3242, 402.5871: 0.4240, 412.1332: 0.5524, 418.4972: 0.6364,
                   427.0534: 0.7333, 432.2153: 0.7714, 436.7408: 0.7951, 441.1957: 0.8086, 445.7212: 0.8119,
                   453.4288: 0.7985, 450.1760: 0.8072, 459.5100: 0.7659, 465.5205: 0.7135, 474.9251: 0.5949,
                   481.9963: 0.4951, 492.8858: 0.3449, 503.0683: 0.2313, 514.8772: 0.1364, 528.2416: 0.0791,
                   552.8493: 0.0396, 587.4980: 0.0188, 650.0777: 0.0119, 748.1547: 0.0089}
        midscale_sd = {349.4624: 1.1599, 358.7459: 1.0050, 364.7564: 0.9022, 370.4134: 0.8212, 376.4238: 0.7511,
                       379.6059: 0.7372, 383.4950: 0.7343, 387.0306: 0.7422, 391.9804: 0.7698, 401.5265: 0.8627,
                       408.2441: 0.9270, 418.1437: 1.0218, 425.5684: 1.0712, 427.4069: 1.0841, 432.8517: 1.0943,
                       437.9429: 1.0841, 450.6710: 1.0406, 459.0857: 1.0030, 470.1167: 0.9388, 478.2485: 0.8924,
                       483.1276: 0.8726, 487.0875: 0.8647, 491.6838: 0.8647, 497.2700: 0.8771, 501.0884: 0.8916,
                       508.7252: 0.9349, 518.9077: 0.9922, 528.6659: 1.0515, 537.4342: 1.0989, 544.6467: 1.1238,
                       550.1622: 1.1250, 556.6677: 1.1021, 567.5573: 1.0189, 576.1841: 0.9437, 579.5783: 0.9177,
                       583.1138: 0.8999, 587.6394: 0.8847, 594.0034: 0.8819, 600.5796: 0.9003, 606.1658: 0.9299,
                       614.7926: 0.9912, 628.7935: 1.0930, 638.9053: 1.1562, 645.4815: 1.1849, 652.6233: 1.2005,
                       660.4723: 1.2023, 668.3213: 1.1888, 673.1297: 1.1750, 683.4536: 1.1088, 701.7679: 0.9319,
                       720.2943: 0.7105, 748.6497: 0.4020}
        self.spectral_density = [colour.SpectralDistribution(x) for x in (red_sd, green_sd, blue_sd)]
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)

        self.calibrate()
