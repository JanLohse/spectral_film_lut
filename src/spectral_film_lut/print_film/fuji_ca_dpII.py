from spectral_film_lut.film_spectral import *


class FujiCrystalArchiveDPII(FilmSpectral):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

        self.lad = [0.7, 0.7, 0.7]
        self.density_measure = 'status_a'
        self.white_xy = [0.44758, 0.40745]
        self.white_sd = colour.SDS_ILLUMINANTS['A']

        # spectral sensitivity
        self.red_log_sensitivity = {590.1800: -0.5984, 608.9201: -0.4395, 623.6898: -0.2960, 634.6480: -0.2153,
                                    642.9063: -0.1960, 652.2763: -0.1798, 660.2170: -0.1444, 668.3166: -0.0637,
                                    681.7364: 0.1210, 692.7740: 0.2927, 699.1265: 0.3702, 703.7321: 0.4040,
                                    707.7025: 0.4169, 713.4992: 0.3815, 717.2313: 0.3089, 721.5987: 0.2040,
                                    725.2515: 0.0887}
        self.green_log_sensitivity = {437.3213: -0.1306, 446.3737: -0.0355, 458.2054: 0.1492, 467.2578: 0.3073,
                                      472.6575: 0.3694, 480.9158: 0.4347, 484.6480: 0.4895, 493.7004: 0.7081,
                                      502.1175: 0.8927, 506.1673: 0.9565, 510.3759: 0.9895, 516.6490: 0.9798,
                                      522.4457: 0.9710, 527.9248: 0.9935, 535.3097: 1.1556, 546.5855: 1.5992,
                                      548.5707: 1.6581, 551.0323: 1.6919, 554.2880: 1.6669, 556.6702: 1.5887,
                                      558.9730: 1.3815, 563.1816: 0.8089, 567.4696: 0.2847, 572.5516: -0.1589,
                                      577.4749: -0.4331, 583.6686: -0.6298}
        self.blue_log_sensitivity = {376.5749: 0.2040, 385.3097: 0.6718, 394.1239: 0.9460, 401.3499: 1.0855,
                                     406.9878: 1.1411, 411.1170: 1.1573, 415.0873: 1.1355, 419.0577: 1.1073,
                                     423.4251: 1.1153, 429.6983: 1.2161, 441.2917: 1.4016, 457.0143: 1.6395,
                                     463.0492: 1.7887, 470.6723: 2.0065, 475.9926: 2.1315, 479.1689: 2.1726,
                                     482.8216: 2.1500, 487.6654: 1.9621, 493.3827: 1.5145, 497.5913: 1.0589,
                                     502.9910: 0.5024, 507.1996: 0.1677, 510.6935: 0.0065, 513.5521: -0.1484,
                                     516.7284: -0.2839, 521.1752: -0.4040, 527.5278: -0.4952}

        # sensiometry
        red_curve = {-0.0535: 0.1023, 0.1070: 0.1063, 0.2607: 0.1172, 0.3261: 0.1262, 0.3944: 0.1430, 0.4628: 0.1669,
                     0.5322: 0.2046, 0.6006: 0.2563, 0.7056: 0.3745, 0.7889: 0.5126, 0.8860: 0.7331, 1.0297: 1.1662,
                     1.1824: 1.6232, 1.2735: 1.8715, 1.3707: 2.0901, 1.4688: 2.2490, 1.5907: 2.4030, 1.7324: 2.5291,
                     1.8365: 2.5967, 1.9356: 2.6404, 2.0416: 2.6682}
        green_curve = {-0.0486: 0.1033, 0.0476: 0.1053, 0.1417: 0.1093, 0.2577: 0.1162, 0.3717: 0.1391, 0.4757: 0.1758,
                       0.5709: 0.2344, 0.6690: 0.3219, 0.8236: 0.5851, 0.9177: 0.8136, 0.9732: 0.9874, 1.0555: 1.2854,
                       1.1011: 1.4444, 1.1784: 1.7126, 1.2795: 1.9858, 1.3280: 2.1000, 1.3845: 2.1894, 1.4331: 2.2560,
                       1.5035: 2.3295, 1.5857: 2.3762, 1.6928: 2.4228, 1.8028: 2.4517, 1.9207: 2.4695, 2.0416: 2.4805}
        blue_curve = {-0.0476: 0.0606, 0.0396: 0.0646, 0.1665: 0.0695, 0.3003: 0.0834, 0.4708: 0.1301, 0.5669: 0.1887,
                      0.6551: 0.2781, 0.7572: 0.4371, 0.8454: 0.6298, 0.9197: 0.8185, 0.9990: 1.0669, 1.0585: 1.2904,
                      1.1318: 1.5397, 1.2071: 1.7921, 1.2587: 1.9540, 1.3518: 2.1387, 1.3984: 2.2123, 1.4579: 2.2808,
                      1.5282: 2.3444, 1.6274: 2.3940, 1.7393: 2.4358, 1.8484: 2.4616, 1.9574: 2.4735, 2.0347: 2.4775}
        self.red_log_exposure = np.array(list(red_curve.keys()))
        self.red_density_curve = np.array(list(red_curve.values()))
        self.green_log_exposure = np.array(list(green_curve.keys()))
        self.green_density_curve = np.array(list(green_curve.values()))
        self.blue_log_exposure = np.array(list(blue_curve.keys()))
        self.blue_density_curve = np.array(list(blue_curve.values()))
        self.lad += np.array(
            [self.red_density_curve.min(), self.green_density_curve.min(), self.blue_density_curve.min()])

        self.exposure_base = 10

        # spectral dye density
        red_spectral_density = {377.5238: 0.0540, 412.3810: 0.0454, 440.9524: 0.0422, 473.9683: 0.0383,
                                507.3016: 0.0438, 527.1746: 0.0693, 541.0794: 0.1080, 551.8730: 0.1543,
                                559.6825: 0.2061, 573.5238: 0.3233, 587.5556: 0.5073, 595.8095: 0.6409,
                                605.3968: 0.7812, 613.3968: 0.8799, 620.5079: 0.9374, 625.1429: 0.9693,
                                632.3810: 0.9927, 641.2698: 0.9984, 652.0635: 0.9815, 657.2698: 0.9457,
                                666.9206: 0.8626, 675.6825: 0.7636, 684.6984: 0.6486, 694.5397: 0.5367,
                                705.8413: 0.4281, 714.3492: 0.3722, 720.7619: 0.3393}
        green_spectral_density = {377.9048: 0.0246, 402.6032: 0.0358, 423.6825: 0.0470, 442.1587: 0.0690,
                                  458.3492: 0.1042, 470.9206: 0.1591, 478.2222: 0.2019, 485.9048: 0.2604,
                                  496.1270: 0.3661, 506.4127: 0.5077, 516.0635: 0.6623, 522.2857: 0.7581,
                                  527.4921: 0.8361, 533.5238: 0.9128, 538.7302: 0.9633, 542.5397: 0.9872,
                                  547.1746: 0.9990, 550.6032: 0.9952, 554.2222: 0.9728, 558.1587: 0.9281,
                                  565.6508: 0.7955, 573.4603: 0.6102, 580.3175: 0.4537, 588.6349: 0.3051,
                                  598.4127: 0.1812, 603.8730: 0.1361, 610.0952: 0.0939, 619.0476: 0.0645,
                                  630.1587: 0.0406, 658.0952: 0.0166, 689.2063: 0.0160, 723.4921: 0.0137}
        blue_spectral_density = {378.6032: 0.0942, 389.7778: 0.2093, 398.8571: 0.3466, 407.4286: 0.5080,
                                 414.9206: 0.6789, 420.3810: 0.7939, 427.3016: 0.8914, 433.0159: 0.9489,
                                 439.0476: 0.9840, 446.3492: 0.9994, 452.8889: 0.9914, 459.0476: 0.9585,
                                 466.6667: 0.8770, 475.5556: 0.7173, 481.8413: 0.5831, 490.6667: 0.3962,
                                 501.7143: 0.2252, 509.2063: 0.1454, 515.6190: 0.1010, 526.9841: 0.0565,
                                 540.0000: 0.0335, 558.4127: 0.0246, 590.1587: 0.0195, 652.0635: 0.0176,
                                 723.3016: 0.0157}

        self.red_sd = colour.SpectralDistribution(red_spectral_density)
        self.green_sd = colour.SpectralDistribution(green_spectral_density)
        self.blue_sd = colour.SpectralDistribution(blue_spectral_density)

        self.calibrate()
