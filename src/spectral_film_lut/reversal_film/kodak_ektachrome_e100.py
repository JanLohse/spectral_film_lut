from spectral_film_lut.film_spectral import *


class KodakEktachromeE100(FilmSpectral):
    def __init__(self):
        super().__init__()

        self.iso = 100
        self.density_measure = "status_a"

        # spectral sensitivity
        red_log_sensitivity = {554.0856: -1.0220, 564.3580: -0.9702, 573.3463: -0.6981, 588.6381: 0.4380,
                               599.3774: 0.6926, 631.5953: 1.1752, 641.6342: 1.3438, 647.1206: 1.4066, 652.1401: 1.3945,
                               656.4591: 1.2226, 661.2451: 0.7135, 669.5331: 0.0083, 684.5914: -0.9967}
        green_log_sensitivity = {472.8405: -0.5647, 483.1128: -0.0413, 493.8521: 0.3939, 500.0389: 0.5295,
                                 530.1556: 0.9934, 543.4630: 1.1873, 548.8327: 1.1961, 555.2529: 1.1510,
                                 564.5914: 1.2083, 568.3268: 1.1829, 573.4630: 1.2182, 576.9650: 1.1598,
                                 581.8677: 0.6915, 590.5058: -0.0028, 600.3113: -0.6088, 604.5136: -1.0022}
        blue_log_sensitivity = {394.7471: 0.5262, 398.0156: 0.8127, 404.4358: 1.0937, 410.9728: 1.3008,
                                419.6109: 1.4375, 427.0817: 1.5047, 430.3502: 1.4848, 434.4358: 1.3747,
                                439.1051: 1.3339, 446.1089: 1.3328, 456.3813: 1.3736, 467.9377: 1.2479,
                                474.9416: 0.7631, 481.7121: 0.3609, 487.1984: 0.1515, 498.4047: -0.1041,
                                505.2918: -0.2782, 514.0467: -0.5372, 519.6498: -0.7686}
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry
        red_curve = {-2.8175: 3.2439, -2.5863: 3.2304, -2.4000: 3.1746, -2.2233: 3.0688, -2.0533: 2.8937,
                     -1.8870: 2.6330, -1.6692: 2.2222, -1.4488: 1.7605, -1.3185: 1.4946, -1.1439: 1.1784,
                     -0.9768: 0.9689, -0.7688: 0.7039, -0.5909: 0.5172, -0.3712: 0.3347, -0.2383: 0.2539,
                     -0.0905: 0.1799, 0.0048: 0.1487}
        green_curve = {-2.8221: 3.6043, -2.6442: 3.5917, -2.4562: 3.5345, -2.3393: 3.4672, -2.2307: 3.3789,
                       -2.1446: 3.2805, -2.0511: 3.1602, -1.9149: 2.9011, -1.8197: 2.7144, -1.7345: 2.5125,
                       -1.6058: 2.2139, -1.5006: 1.9657, -1.3485: 1.6503, -1.2199: 1.3727, -1.1088: 1.1775,
                       -0.9526: 0.9302, -0.8473: 0.7973, -0.7228: 0.6451, -0.5783: 0.5046, -0.4179: 0.3590,
                       -0.2433: 0.2531, -0.0921: 0.1765, 0.0031: 0.1437}
        blue_curve = {-2.8204: 3.7591, -2.6567: 3.7322, -2.5030: 3.6767, -2.4061: 3.6186, -2.2917: 3.5135,
                      -2.1973: 3.3999, -2.0745: 3.2023, -1.9132: 2.8658, -1.8080: 2.6101, -1.7111: 2.3796,
                      -1.5966: 2.0911, -1.5022: 1.8732, -1.3995: 1.6503, -1.2784: 1.4021, -1.1422: 1.1649,
                      -0.9860: 0.9226, -0.8256: 0.7182, -0.7078: 0.5828, -0.5975: 0.4701, -0.4722: 0.3658,
                      -0.3411: 0.2766, -0.2342: 0.2228, -0.1005: 0.1782, 0.0064: 0.1521}
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        red_sd = {403.5369: 0.1356, 410.3981: 0.1156, 418.9199: 0.0925, 426.1168: 0.0771, 433.9493: 0.0647,
                  441.3436: 0.0557, 449.4416: 0.0494, 456.6709: 0.0429, 466.2191: 0.0370, 473.7383: 0.0353,
                  480.8517: 0.0353, 488.1256: 0.0360, 496.8926: 0.0427, 504.0656: 0.0503, 513.4825: 0.0649,
                  520.7715: 0.0800, 530.2600: 0.1035, 536.8457: 0.1241, 545.0710: 0.1562, 551.8244: 0.1883,
                  560.6808: 0.2379, 567.5291: 0.2831, 574.1731: 0.3329, 579.9020: 0.3799, 584.2702: 0.4217,
                  588.9130: 0.4673, 594.2730: 0.5238, 598.5209: 0.5674, 603.5337: 0.6176, 608.2481: 0.6643,
                  612.0456: 0.7021, 617.7536: 0.7539, 622.9881: 0.7957, 628.5976: 0.8384, 639.1155: 0.8996,
                  646.2020: 0.9247, 654.2618: 0.9402, 660.0469: 0.9419, 668.9557: 0.9266, 677.6197: 0.8946,
                  684.6782: 0.8549, 690.3265: 0.8154, 696.0465: 0.7711, }
        green_sd = {403.9621: 0.0779, 410.8994: 0.0900, 421.7690: 0.1129, 429.4335: 0.1324, 436.8585: 0.1412,
                    445.0095: 0.1310, 451.9506: 0.1327, 460.2992: 0.1487, 467.9582: 0.1796, 474.7071: 0.2156,
                    482.5520: 0.2709, 488.3535: 0.3224, 492.5163: 0.3648, 497.5689: 0.4203, 501.1296: 0.4604,
                    504.5311: 0.5057, 507.9327: 0.5539, 511.1552: 0.5992, 514.1986: 0.6440, 517.8866: 0.6923,
                    521.7178: 0.7392, 525.7280: 0.7849, 530.6692: 0.8381, 536.1520: 0.8857, 543.1813: 0.9204,
                    551.3800: 0.9287, 559.0034: 0.9048, 565.2217: 0.8596, 569.6974: 0.8112, 573.8349: 0.7593,
                    577.2165: 0.7129, 580.6181: 0.6668, 583.8406: 0.6175, 586.7050: 0.5712, 589.3905: 0.5217,
                    593.1500: 0.4589, 596.0145: 0.4130, 599.0580: 0.3676, 602.6385: 0.3222, 606.8159: 0.2760,
                    612.2805: 0.2236, 617.7366: 0.1795, 626.0241: 0.1273, 633.5415: 0.0943, 641.9352: 0.0661,
                    648.8755: 0.0496, 656.9123: 0.0358, 664.3561: 0.0256, 671.7434: 0.0184, 678.7117: 0.0124,
                    683.3802: 0.0116, }
        blue_sd = {402.1782: 0.5271, 405.7076: 0.5744, 409.1091: 0.6202, 413.0477: 0.6720, 417.4339: 0.7285,
                   421.1552: 0.7729, 426.8329: 0.8299, 434.8534: 0.8862, 441.2745: 0.9153, 451.3435: 0.9057,
                   458.1032: 0.8750, 463.6616: 0.8261, 468.0094: 0.7694, 471.3342: 0.7240, 474.7528: 0.6736,
                   477.1398: 0.6431, 483.9429: 0.5431, 486.7818: 0.5010, 489.6462: 0.4571, 492.7749: 0.4081,
                   496.5004: 0.3558, 500.8789: 0.2996, 504.2447: 0.2605, 509.0267: 0.2111, 513.6616: 0.1680,
                   519.7684: 0.1190, 527.7536: 0.0732, 534.1901: 0.0479, 541.7690: 0.0254, 548.5124: 0.0125,
                   556.9864: 0.0048, 566.1168: -0.0001, 573.6360: -0.0003, 581.1552: -0.0003, 588.6743: -0.0003,
                   595.5406: -0.0003, 603.7127: -0.0003, 611.2319: -0.0003, 618.7511: -0.0003, 626.2702: -0.0003,
                   633.7894: -0.0002, 641.3086: 0.0021, 648.5891: 0.0031, 654.1986: 0.0029, 699.4928: 0.0051, }
        midscale_sd = {402.4851: 0.7467, 406.4237: 0.7947, 410.1833: 0.8414, 413.9429: 0.8869, 417.8815: 0.9340,
                       421.5018: 0.9747, 426.2958: 1.0291, 432.3828: 1.0778, 439.7229: 1.1096, 446.1679: 1.1077,
                       454.7613: 1.0780, 461.7434: 1.0381, 467.3529: 0.9920, 472.4851: 0.9464, 478.9301: 0.8960,
                       486.2702: 0.8506, 493.7894: 0.8155, 501.8099: 0.8096, 508.8278: 0.8392, 515.8099: 0.8864,
                       521.8968: 0.9302, 527.4467: 0.9755, 534.0708: 1.0324, 540.6948: 1.0778, 547.5695: 1.1120,
                       555.7332: 1.1358, 563.2523: 1.1333, 570.7715: 1.1041, 578.2907: 1.0632, 584.3777: 1.0282,
                       592.2549: 0.9765, 599.5951: 0.9394, 607.2933: 0.9262, 614.8124: 0.9302, 622.3316: 0.9401,
                       629.8508: 0.9560, 637.3700: 0.9729, 644.8892: 0.9815, 653.0529: 0.9840, 659.9275: 0.9773,
                       667.4467: 0.9568, 674.9659: 0.9258, 682.4851: 0.8840, 689.1091: 0.8382, 695.1961: 0.7909,
                       699.3137: 0.7589, }

        self.spectral_density = [colour.SpectralDistribution(x) for x in (red_sd, green_sd, blue_sd)]
        self.d_ref_sd = colour.SpectralDistribution(midscale_sd)

        red_mtf = {2.4954: 0.9471, 7.1631: 0.8595, 9.9589: 0.7953, 13.1782: 0.7204, 15.1843: 0.6930, 16.8730: 0.6930,
                   19.7971: 0.6666, 24.3246: 0.5830, 32.4541: 0.4151, 46.4797: 0.2411, 57.3925: 0.1684, 67.3387: 0.1230,
                   77.7175: 0.0829}
        green_mtf = {2.4954: 0.9471, 9.0215: 0.8884, 11.9378: 0.8397, 14.3334: 0.8141, 18.1416: 0.7969, 22.8484: 0.7317,
                     29.8385: 0.6014, 41.7591: 0.4299, 54.5347: 0.3226, 66.2383: 0.2416, 78.6190: 0.1816}
        blue_mtf = {2.4954: 0.9563, 7.9074: 0.9657, 11.6463: 0.9164, 14.0528: 0.8562, 18.2015: 0.8612, 20.6977: 0.8300,
                    24.1649: 0.7547, 32.4007: 0.6653, 53.2911: 0.4258, 78.6190: 0.2866}
        self.mtf = [red_mtf, green_mtf, blue_mtf]

        red_rms = {-2.9756: 0.0307, -2.1453: 0.0279, -1.8942: 0.0311, -1.6395: 0.0298, -1.3500: 0.0238, -1.0779: 0.0169,
                   -0.8372: 0.0117, -0.6244: 0.0079, -0.4326: 0.0044, -0.2477: 0.0028, -0.1151: 0.0022, -0.0056: 0.0021}
        green_rms = {-2.5221: 0.0330, -2.1070: 0.0336, -1.7198: 0.0292, -1.4114: 0.0202, -1.0709: 0.0116,
                     -0.8233: 0.0074, -0.5895: 0.0041, -0.3837: 0.0026, -0.1744: 0.0019, -0.0042: 0.0017}
        blue_rms = {-2.0505: 0.0532, -1.9263: 0.0585, -1.8495: 0.0600, -1.7581: 0.0585, -1.5907: 0.0430,
                    -1.3465: 0.0300, -1.1233: 0.0219, -0.9767: 0.0162, -0.8372: 0.0112, -0.6872: 0.0071,
                    -0.5965: 0.0051, -0.4940: 0.0038, -0.3558: 0.0029, -0.2058: 0.0023, -0.0907: 0.0020, 0.0014: 0.0018}
        red_rms_density = {-2.9491: 3.2977, -2.7506: 3.2900, -2.5555: 3.2266, -2.3883: 3.1281, -2.2141: 2.9803,
                           -2.0058: 2.7100, -1.8630: 2.4538, -1.6811: 2.0336, -1.4652: 1.5739, -1.2123: 1.1667,
                           -1.0242: 0.9040, -0.7887: 0.6370, -0.6013: 0.4575, -0.4445: 0.3262, -0.2536: 0.2025,
                           -0.1170: 0.1401, -0.0063: 0.1182}
        green_rms_density = {-2.4998: 3.5549, -2.4127: 3.5002, -2.3117: 3.3962, -2.1514: 3.1499, -1.9633: 2.7559,
                             -1.6658: 2.0883, -1.4018: 1.5202, -1.1503: 1.0704, -0.8486: 0.6436, -0.5978: 0.3918,
                             -0.3504: 0.2047, -0.1414: 0.0974, -0.0028: 0.0591}
        blue_rms_density = {-2.0532: 2.8501, -1.8414: 2.2908, -1.5836: 1.7129, -1.3370: 1.2477, -1.0750: 0.8351,
                            -0.8723: 0.5735, -0.6953: 0.3864, -0.4814: 0.2080, -0.2703: 0.0919, -0.1101: 0.0394,
                            0.0000: 0.0296}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]

        self.color_masking = 0.25

        self.calibrate()
