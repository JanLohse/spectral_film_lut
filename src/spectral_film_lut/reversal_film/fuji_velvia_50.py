from spectral_film_lut.film_spectral import *


class FujiVelvia50(FilmSpectral):
    def __init__(self):
        super().__init__()

        self.iso = 50
        self.density_measure = "status_a"

        # spectral sensitivity
        red_log_sensitivity = {579.0990: -0.8037, 583.8257: -0.6074, 586.7799: -0.4504, 592.0236: -0.3037,
                               595.4210: -0.2178, 601.1078: -0.1719, 612.7031: -0.0985, 621.7873: 0.0000,
                               630.9453: 0.2000, 637.2230: 0.3741, 641.9498: 0.4637, 646.5288: 0.5274, 650.5908: 0.5467,
                               657.0901: 0.4963, 659.4535: 0.3963, 664.0325: 0.1111, 671.7873: -0.1363,
                               681.0192: -0.3185, 686.6322: -0.4548, 689.3648: -0.5444, 691.1374: -0.6207}
        green_log_sensitivity = {486.0157: -0.7274, 494.3553: -0.4890, 499.5271: -0.3441, 507.6081: -0.1701,
                                 519.6972: 0.0425, 528.1661: 0.1907, 534.6955: 0.3389, 540.5785: 0.4646,
                                 544.5866: 0.5258, 548.4008: 0.5548, 553.8959: 0.5322, 556.9344: 0.4884,
                                 561.0072: 0.4439, 567.1487: 0.4323, 572.7084: 0.4549, 575.8115: 0.4626,
                                 579.0439: 0.4356, 583.4400: 0.1392, 588.4825: -0.2603, 591.8442: -0.5406}
        blue_log_sensitivity = {387.4924: -0.2861, 393.1814: 0.1070, 397.7068: 0.3615, 400.4220: 0.4517,
                                404.1069: 0.5238, 410.7010: 0.5619, 417.4244: 0.5580, 424.2770: 0.5258,
                                432.0348: 0.5032, 439.1460: 0.5097, 444.8350: 0.5348, 449.4897: 0.5638,
                                452.9807: 0.5735, 456.4070: 0.5354, 461.3849: 0.4291, 470.5649: 0.2036,
                                475.9306: 0.0619, 480.1974: -0.0799, 485.8218: -0.3731, 489.7653: -0.5728,
                                493.8381: -0.7796}
        self.log_sensitivity = [red_log_sensitivity, green_log_sensitivity, blue_log_sensitivity]

        # sensiometry
        red_curve = {-2.8207: 3.3492, -2.4732: 3.3448, -2.1301: 3.3222, -1.9555: 3.2917, -1.7818: 3.2134,
                     -1.6741: 3.1108, -1.5672: 2.9298, -1.4456: 2.6714, -1.3397: 2.4008, -1.2424: 2.1276,
                     -1.1017: 1.7796, -0.8880: 1.3706, -0.6856: 1.0487, -0.3538: 0.5963, -0.0506: 0.3300,
                     0.1639: 0.2143, 0.3151: 0.1656, 0.5670: 0.1351, 0.8970: 0.1334, 1.1168: 0.1404}
        green_curve = {-2.8146: 3.8129, -2.5861: 3.8042, -2.3256: 3.7720, -2.1197: 3.7085, -1.9303: 3.5762,
                       -1.7870: 3.4109, -1.6585: 3.1456, -1.4917: 2.7097, -1.3371: 2.2929, -1.1903: 1.9379,
                       -1.0270: 1.5620, -0.8298: 1.2114, -0.5431: 0.7894, -0.3329: 0.5388, -0.0889: 0.3231,
                       0.0979: 0.2187, 0.3281: 0.1656, 0.5062: 0.1569, 0.7581: 0.1543, 0.9492: 0.1630, 1.1142: 0.1682}
        blue_curve = {-2.8207: 3.7111, -2.5688: 3.6954, -2.3516: 3.6737, -2.1041: 3.5997, -1.9868: 3.5327,
                      -1.9086: 3.4675, -1.8087: 3.3457, -1.7193: 3.1908, -1.6263: 2.9802, -1.5594: 2.8149,
                      -1.4595: 2.5452, -1.3553: 2.2711, -1.2207: 1.9492, -1.1025: 1.6925, -0.9887: 1.4663,
                      -0.7594: 1.0992, -0.6092: 0.8799, -0.4172: 0.6372, -0.2852: 0.4884, -0.0741: 0.3144,
                      0.0128: 0.2561, 0.2021: 0.1960, 0.4592: 0.1551, 0.8319: 0.1612, 1.1107: 0.1673}
        red_log_exposure = xp.array(list(red_curve.keys()), dtype=default_dtype)
        red_density_curve = xp.array(list(red_curve.values()), dtype=default_dtype)
        green_log_exposure = xp.array(list(green_curve.keys()), dtype=default_dtype)
        green_density_curve = xp.array(list(green_curve.values()), dtype=default_dtype)
        blue_log_exposure = xp.array(list(blue_curve.keys()), dtype=default_dtype)
        blue_density_curve = xp.array(list(blue_curve.values()), dtype=default_dtype)
        self.log_exposure = [red_log_exposure, green_log_exposure, blue_log_exposure]
        self.density_curve = [red_density_curve, green_density_curve, blue_density_curve]

        # spectral dye density
        red_sd = {382.3151: 0.3404, 385.0161: 0.3162, 386.4952: 0.2807, 390.3537: 0.2275, 397.4277: 0.1807,
                  412.8617: 0.1255, 428.9389: 0.0855, 450.9325: 0.0539, 470.5466: 0.0458, 497.0418: 0.0600,
                  525.0804: 0.1178, 548.1029: 0.2168, 572.9260: 0.3666, 603.1511: 0.6357, 616.0129: 0.7651,
                  629.1318: 0.8809, 640.5145: 0.9519, 650.4180: 0.9894, 660.4502: 1.0023, 670.4180: 0.9890,
                  682.0579: 0.9371, 691.9614: 0.8712, 701.9293: 0.7761, 710.2251: 0.6934, 719.6141: 0.6066}
        green_sd = {381.1691: 0.2734, 385.0530: 0.2054, 388.5838: 0.1537, 392.7030: 0.1197, 399.3527: 0.1082,
                    409.4155: 0.1185, 418.4778: 0.1440, 426.5398: 0.1759, 436.0141: 0.1933, 444.7823: 0.1930,
                    450.3727: 0.1907, 461.5536: 0.2158, 475.6767: 0.2956, 486.7399: 0.3991, 498.3327: 0.5513,
                    509.5724: 0.7065, 520.6944: 0.8587, 527.6971: 0.9276, 533.4641: 0.9704, 538.3484: 0.9947,
                    545.1157: 1.0021, 551.3535: 0.9935, 555.8258: 0.9746, 562.7697: 0.9143, 574.5390: 0.7538,
                    586.8968: 0.5557, 600.5492: 0.3473, 611.4947: 0.2261, 621.3809: 0.1540, 636.9164: 0.0875,
                    661.6320: 0.0393, 692.2322: 0.0171, 719.3017: 0.0145, }
        blue_sd = {381.5222: 0.5483, 385.2883: 0.5031, 388.2895: 0.4685, 390.0549: 0.4502, 393.8800: 0.4552,
                   400.6473: 0.5158, 411.5339: 0.6518, 421.7144: 0.7937, 428.3052: 0.8897, 435.7199: 0.9548,
                   440.9572: 0.9849, 447.1361: 1.0006, 453.4327: 0.9938, 457.5520: 0.9666, 462.7305: 0.9178,
                   470.6159: 0.8158, 479.7372: 0.6701, 489.7999: 0.5114, 498.3327: 0.3798, 511.5143: 0.2554,
                   529.2271: 0.1596, 548.9408: 0.0887, 569.8313: 0.0378, 585.1314: 0.0148, 598.6661: 0.0024}

        self.spectral_density = [colour.SpectralDistribution(x) for x in (red_sd, green_sd, blue_sd)]

        self.mtf = [{1.1569: 0.9978, 1.5077: 1.0076, 2.1657: 1.0512, 2.8841: 1.0884, 4.1877: 1.1429, 6.1467: 1.1924,
                     8.3195: 1.2159, 10.7838: 1.2186, 14.5171: 1.1668, 19.2285: 1.0627, 25.9414: 0.9010,
                     33.3721: 0.7314, 40.8485: 0.5835, 48.3522: 0.4675, 61.4669: 0.3324}]

        # copied from Ektachrome 100D
        red_rms = {-2.9756: 0.0307, -2.1453: 0.0279, -1.8942: 0.0311, -1.6395: 0.0298, -1.3500: 0.0238, -1.0779: 0.0169,
                   -0.8372: 0.0117, -0.6244: 0.0079, -0.4326: 0.0044, -0.2477: 0.0028, -0.1151: 0.0022, -0.0056: 0.0021}
        green_rms = {-2.5221: 0.0330, -2.1070: 0.0336, -1.7198: 0.0292, -1.4114: 0.0202, -1.0709: 0.0116,
                     -0.8233: 0.0074, -0.5895: 0.0041, -0.3837: 0.0026, -0.1744: 0.0019, -0.0042: 0.0017}
        blue_rms = {-2.0505: 0.0532, -1.9263: 0.0585, -1.8495: 0.0600, -1.7581: 0.0585, -1.5907: 0.0430,
                    -1.3465: 0.0300, -1.1233: 0.0219, -0.9767: 0.0162, -0.8372: 0.0112, -0.6872: 0.0071,
                    -0.5965: 0.0051, -0.4940: 0.0038, -0.3558: 0.0029, -0.2058: 0.0023, -0.0907: 0.0020, 0.0014: 0.0018}
        red_rms_density = {-2.9491: 3.2977, -2.7506: 3.2900, -2.5555: 3.2266, -2.3883: 3.1281, -2.2141: 2.9803,
                           -2.0058: 2.7100, -1.8630: 2.4538, -1.6811: 2.0336, -1.4652: 1.5739, -1.2123: 1.1667,
                           -1.0242: 0.9040, -0.7887: 0.6370, -0.6013: 0.4575, -0.4445: 0.3262, -0.2536: 0.2025,
                           -0.1170: 0.1401, -0.0063: 0.1182}
        green_rms_density = {-2.4998: 3.5549, -2.4127: 3.5002, -2.3117: 3.3962, -2.1514: 3.1499, -1.9633: 2.7559,
                             -1.6658: 2.0883, -1.4018: 1.5202, -1.1503: 1.0704, -0.8486: 0.6436, -0.5978: 0.3918,
                             -0.3504: 0.2047, -0.1414: 0.0974, -0.0028: 0.0591}
        blue_rms_density = {-2.0532: 2.8501, -1.8414: 2.2908, -1.5836: 1.7129, -1.3370: 1.2477, -1.0750: 0.8351,
                            -0.8723: 0.5735, -0.6953: 0.3864, -0.4814: 0.2080, -0.2703: 0.0919, -0.1101: 0.0394,
                            0.0000: 0.0296}
        self.rms_curve = [red_rms, green_rms, blue_rms]
        self.rms_density = [red_rms_density, green_rms_density, blue_rms_density]
        self.rms = 9

        self.calibrate()
